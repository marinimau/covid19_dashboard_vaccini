{"version":3,"sources":["src/utils/dateDifference.js","src/logic/delivery/deliveryData.js","src/logic/delivery/deliveryAttrs.js","src/logic/common/preprocessing.js","src/logic/delivery/preprocessing.js","src/utils/dateToString.js","src/logic/generateDateArray.js","src/logic/administration/administrationData.js","src/logic/administration/administrationsAttrs.js","src/logic/administration/preprocessing.js","src/logic/dataset.js","src/ui/theme/colors.js","src/ui/theme/darkModeDetector.js","src/ui/theme/legendColors.js","src/ui/theme/dimens.js","src/utils/dimensionsUtils.js","src/ui/theme/style.js","src/ui/contents/strings.js","src/ui/components/loading/error.js","src/ui/components/loading/loading.js","src/utils/rootNavigationRef.js","src/ui/contents/locationsList.js","src/logic/selectedLocation.js","src/ui/components/location_selector/locationSelector.js","src/ui/components/mainScrollableContainer.js","src/ui/contents/params.js","src/logic/delivery/deliveryChartAttributes.js","src/data_representation/resume_cards/cardDelivery.js","src/logic/administration/administrationChartAttributes.js","src/data_representation/resume_cards/cardAdministration.js","src/data_representation/resume_cards/cardDate.js","src/ui/components/latest_updates/latestUpateComponent.js","src/ui/components/header/headerMenuButton.js","src/ui/components/screenContainer.js","src/ui/screens/latestUpdateResumeScreen.js","src/utils/colorConverter.js","src/ui/contents/intervalSelectorData.js","src/logic/retrieveTimeLabels.js","src/data_representation/charts/lineChartDecorator.js","src/data_representation/charts/lineChart.js","src/ui/components/cards/lineChartCard.js","src/data_representation/charts/chartColorLegend.js","src/data_representation/charts/stackedAreaChart.js","src/ui/components/delivery/deliveryComponent.js","src/data_representation/charts/progressCircle.js","src/ui/screens/deliveryScreen.js","src/data_representation/resume_cards/cardAdministrationAssociated.js","src/data_representation/resume_cards/cardAdministrationHealtcare.js","src/data_representation/resume_cards/cardAdministrationRsa.js","src/data_representation/resume_cards/cardAdministrationOver80.js","src/data_representation/resume_cards/cardAdministrationOthers.js","src/logic/common/deliveryAdministrationRatio.js","src/data_representation/resume_cards/cardAdministrationFirst.js","src/ui/components/administration/administrationComponent.js","src/data_representation/resume_cards/cardAdministrationSecond.js","src/ui/screens/administrationScreen.js","src/ui/contents/urls.js","src/ui/contents/infoMenu.js","src/ui/components/info/infoComponent.js","src/utils/linking.js","src/ui/screens/infoScreen.js","src/ui/components/GlobalContainer.js","src/logic/retrieve.js","App.js","web-build/register-service-worker.js"],"names":["calculateDifferenceInDaysFromString","date1","date2","diffTime","Math","abs","ceil","daysFromDay0","Date","now","compareDateUsingDaysFromDay0","daysFromStart","dateString","DeliveryData","regions","pushToRegion","item","push","DeliveryAttrs","region","delivery_cumulative","delivery_variation","producer_cumulative","pfizer","astrazeneca","moderna","johnson","sputnik","others","setRegion","addCumulative","length","addVariation","addPfizerCumulative","other","clear","divideByRegion","data","i","area","dataToReturn","index","indexOf","DeliveryPreprocessing","cumulative","variation","pfizer_cumulative","astra_cumulative","moderna_cumulative","johnson_cumulative","sputnik_cumulative","others_comulative","j","createAllItalyResume","producer_string","dataset","ita","r","current_region","tmp","tmp_pfizer","tmp_astra","tmp_moderna","tmp_johnson","tmp_sputnik","tmp_other","toString","toLowerCase","includes","organizeByDate","dateToString","date","undefined","splitted","toDateString","split","month","replaceMonth","array_dates","DateArray","currentDate","setDate","getDate","console","log","AdministrationData","AdministrationsAttrs","administration_cumulative","administration_variation","administration_gender_cumulative","male","female","administration_dosage","first","second","administration_categories_cumulative","healthcare_personnel","associated_healthcare_personnel","rsa_patients","over_80","addGenderCumulative","addDosageCumulative","addCategoriesCumulative","AdministrationPreprocessing","gender","dosage","categories","healthcare","associated_healthcare","rsa","over80","tmp_gender","tmp_dosage","tmp_categories","Records","dates","delivery","administration","setAdministrationRecords","records","this","setDeliveryRecords","getRecords","getDates","getLastDate","Colors","main","mainTransparent","basic","basicNotes","icons","navigationInactive","basicTransparent","basicShadow","background","title","borders","basicElevation","accent1","accent2","accent3","axis","bars","navigationOverlay","drawerSelectedText","drawerSelectedBackground","darkMode_main","darkMode_mainTransparent","darkMode_title","darkMode_basic","darkMode_basicNotesLight","darkMode_basicNotesText","darkMode_basicNotes","darkMode_icons","darkMode_navigationInactive","darkMode_basicTransparent","darkMode_basicShadow","darkMode_basicElevation","darkMode_background","darkMode_accent1","darkMode_accent2","darkMode_accent3","darkMode_axis","darkMode_bars","darkMode_drawerSelectedText","darkMode_drawerSelectedBackground","darkMode","Appearance","getColorScheme","LegendColors","green","red","orange","yellow","grey","blue","indigo","teal","pink","purple","neutral","dimens","verySmallScreen","largeScreen","drawerWidth","chartMargin","headerHeight","headerLargeHeight","cardMargin","cardMarginSmallScreen","pieChartRadius","lineChartHeight","dynamicDimens","cardSmall","Dimensions","get","width","cardMedium","cardBig","chartFullWidth","styles","StyleSheet","create","root","backgroundColor","rootContainer","flex","alignItems","alignContent","justifyContent","scrollableContainer","flexDirection","flexWrap","marginBottom","loading","container","menuItemradius","paddingLeft","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderColor","header","borderBottomColor","borderBottomWidth","position","Platform","OS","top","left","headerTitle","color","headerShadow","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","cardGeneric","margin","padding","borderWidth","cardShadow","indicatorTitle","fontSize","fontWeight","indicatorValue","textAlign","indicatorValueBold","marginTop","indicatorValueIncr","fontStyle","indicatorLight","indicatorOrange","indicatorGreen","indicatorGrey","indicatorRed","chartTitle","chartDescription","chartManipulationDescription","infoDescription","marginLeft","marginRight","chartBigValue","legendExternalContainer","legendContainer","legendColorSquare","legendTitle","notesContainer","bottom","paddingTop","paddingBottom","borderTopColor","appInfo","uiButtons","loadingMessages","screenTitles","cardTitles","deliveryChartTitles","deliveryChartDescriptions","percentageOfTotal","cumulativeTrend","variationTrend","repartitionAbsolute","repartitionPercentage","deliveredAdministrationRatio","producer","administrationChartTitles","administrationChartDescriptions","genderRepartitionAbsolute","genderRepartitionPercentage","dosageRepartitionAbsolute","dosageRepartitionPercentage","chartTitles","dataDescription","infoMenuTitles","infoMenuDescriptions","ErrorScreen","View","style","Text","Component","LoadingComponent","ActivityIndicator","navigationRef","React","navigate","name","params","current","RegionList","label","value","SelectedLocation","setLocation","EventRegister","emit","getLocation","LocationSelector","props","state","location","items","placeholder","onValueChange","setState","doneText","pickerSelectStyles","fixAndroidTouchableBug","useNativeAndroidPickerStyle","inputWeb","fontFamily","SYSTEM_FONT_STACK","inputIOS","paddingVertical","paddingHorizontal","paddingRight","inputAndroid","MainScrollableContents","ScrollView","children","ShadowOpacity","total","lastVariation","lastVariationPercentage","producerRepartition","producerRepartitionPercentage","DeliveryChartAttributes","round","toFixed","percentage","populateRepartition","CardDelivery","toLocaleString","genderRepartition","dosageRepartition","dosageFirstCumulative","dosageSecondCumulative","dosageFirstPercentage","dosageSecondPercentage","dosageFirstVariation","dosageSecondVariation","dosageFirstVariationPercentage","dosageSecondVariationPercentage","healthcare_percentage","healthcare_variation","healthcare_variation_percentage","associated","associated_percentage","associated_variation","associated_variation_percentage","rsa_percentage","rsa_variation","rsa_variation_percentage","over80_percentage","over80_variation","over80_variation_percentage","others_percentage","others_variation","others_variation_percentage","AdministrationChartAttributes","populateGenderRepartition","populateDosageRepartition","last_index","populateCategories","CardAdministration","CardDate","LatestUpdateComponent","TouchableOpacity","onPress","colorScheme","HeaderLeft","navigation","useNavigation","dispatch","DrawerActions","openDrawer","Ionicons","size","dataChangedListener","Stack","createStackNavigator","dimensions","ScreenContainer","addEventListener","removeEventListener","Navigator","mode","Screen","options","headerStyle","headerTitleStyle","headerLeft","animationEnabled","component","LatestUpdateResumeScreen","hexToRgb","hex","result","exec","parseInt","g","b","intervalSelectorFilter","field","dateLabels","dateLabelsComplete","DateLabels","range","start","incr","lineChartNumLabels","LineChartDecorator","getXText","x","key","random","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","y","fill","textAnchor","selectedDate","MyLineChart","decorator","visible","_1W","_1M","_MAX","completeDate","labels","datasets","slice","max","filter","forceUpdate","stateString","colorRGB","FlatList","renderItem","Chip","activateFilter","selected","textStyle","returnState","numColumns","horizontal","showsHorizontalScrollIndicator","keyExtractor","yAxisLabel","yAxisSuffix","whitScrollableDot","withVerticalLines","yAxisInterval","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","propsForDots","propsForBackgroundLines","marginVertical","onDataPointClick","PureComponent","LineChartCard","description","ChartColorLegend","MyStackAreaChart","colors","color1","color2","color3","keys","keyValues","axesSvg","gridSvg","strokeDasharray","strokeOpacity","verticalContentInset","curve","shape","animationDuration","numberOfTicks","svg","direction","Grid","Direction","HORIZONTAL","belowChart","StackedAreaChart","extractDataPoints","contentInset","alignmentBaseline","baselineShift","formatLabel","right","legend","map","MyProgressCircle","tintColor","onAnimationComplete","DeliveryComponent","percentageForRepartition","totalChartTitle","totalChartDescription","percentageForTotal","updateData","Switch","repartitionSwitchChange","DeliveryScreen","CardAdministrationAssociated","CardAdministrationHealtcare","CardAdministrationRsa","CardAdministrationOver80","CardAdministrationOthers","DeliveryAdministrationRatioAttributes","CardAdministrationFirst","CardAdministrationSecond","AdministrationComponent","percentageForGenderRepartition","genderRepartitionTitle","genderRepartitionDescription","percentageForDosageRepartition","dosageRepartitionTitle","dosageRepartitionDescription","genderRepartitionSwitchChange","dosageRepartitionSwitchChange","AdministrationScreen","RemoteUrls","dashboard_covid","donate","repository","contact","menuLinks","icon","url","InfoComponent","Section","Subheader","Item","titleStyle","descriptionStyle","Linking","openURL","then","Icon","Divider","inset","InfoScreen","subscription","screenChange","Drawer","createDrawerNavigator","isLargeScreen","GlobalContainer","addChangeListener","Updates","reload","window","screen","remove","StatusBar","NavigationContainer","ref","initialRouteName","drawerContentOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","drawerBackgroundColor","drawerType","drawerStyle","borderRightColor","overlayColor","retrieveData","fetch","res","ok","Promise","reject","json","retrieveDeliveryData","retrieveAdministrationData","App","promiseFn","err","isLoading","enableScreens","navigator","serviceWorker","register","scope","info","catch","error"],"mappings":"sJAQO,SAASA,EAAoCC,EAAMC,GACtD,IAAMC,EAAWC,KAAKC,IAAIJ,EAAQC,GAClC,OAAOE,KAAKE,KAAKH,EAAQ,OAGtB,SAASI,IACZ,OAAOP,EAAoC,IAAIQ,KAAK,uBAAwBA,KAAKC,OAG9E,SAASC,EAA6BC,EAAeC,GAExD,OAAOD,IADeX,EAAoC,IAAIQ,KAAK,uBAAwB,IAAIA,KAAKI,I,oBCXnFC,E,yCACjBC,QAAU,G,KAEVC,aAAe,SAACC,GACZ,EAAKF,QAAQG,KAAKD,KCJLE,E,yCACjBC,OAAS,G,KACTC,oBAAsB,CAAC,G,KACvBC,mBAAqB,CAAC,G,KACtBC,oBAAsB,CAClBC,OAAQ,CAAC,GACTC,YAAa,CAAC,GACdC,QAAS,CAAC,GACVC,QAAS,CAAC,GACVC,QAAS,CAAC,GACVC,OAAQ,CAAC,I,KAGbC,UAAY,SAACV,GACT,EAAKA,OAASA,G,KAGlBW,cAAgB,SAACd,GACb,EAAKI,oBAAoBH,KAAK,EAAKG,oBAAoB,EAAKA,oBAAoBW,OAAQ,GAAKf,I,KAGjGgB,aAAe,SAAChB,GACZ,EAAKK,mBAAmBJ,KAAKD,I,KAGjCiB,oBAAsB,WAAuE,IAAtEV,EAAqE,uDAA9D,EAAGC,EAA2D,uDAA/C,EAAGC,EAA4C,uDAApC,EAAGC,EAAiC,uDAAzB,EAAGC,EAAsB,uDAAd,EAAGO,EAAW,uDAAL,EACnF,EAAKZ,oBAAoBC,OAAON,KAAK,EAAKK,oBAAoBC,OAAO,EAAKD,oBAAoBC,OAAOQ,OAAS,GAAKR,GACnH,EAAKD,oBAAoBE,YAAYP,KAAK,EAAKK,oBAAoBE,YAAY,EAAKF,oBAAoBE,YAAYO,OAAS,GAAKP,GAClI,EAAKF,oBAAoBG,QAAQR,KAAK,EAAKK,oBAAoBG,QAAQ,EAAKH,oBAAoBG,QAAQM,OAAS,GAAKN,GACtH,EAAKH,oBAAoBI,QAAQT,KAAK,EAAKK,oBAAoBI,QAAQ,EAAKJ,oBAAoBI,QAAQK,OAAS,GAAKL,GACtH,EAAKJ,oBAAoBK,QAAQV,KAAK,EAAKK,oBAAoBK,QAAQ,EAAKL,oBAAoBK,QAAQI,OAAS,GAAKJ,GACtH,EAAKL,oBAAoBM,OAAOX,KAAK,EAAKK,oBAAoBM,OAAO,EAAKN,oBAAoBM,OAAOG,OAAS,GAAKG,I,KAGvHC,MAAQ,WACJ,EAAKhB,OAAS,GACd,EAAKC,oBAAsB,CAAC,GAC5B,EAAKC,mBAAqB,CAAC,GAC3B,EAAKC,oBAAoBC,OAAS,CAAC,GACnC,EAAKD,oBAAoBE,YAAc,CAAC,GACxC,EAAKF,oBAAoBG,QAAU,CAAC,GACpC,EAAKH,oBAAoBI,QAAU,CAAC,GACpC,EAAKJ,oBAAoBK,QAAU,CAAC,GACpC,EAAKL,oBAAoBM,OAAS,CAAC,KCtC5B,SAASQ,EAAeC,GACnC,IACeC,EAPDC,EAMVC,EAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChGC,EAAQ,EAIZ,IAAIH,EAAI,EAAGA,EAAID,EAAKN,OAAQO,IAXdC,EAYOF,EAAKC,GAAL,MACH,KADdG,EAXQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5IC,QAAQH,KAYbC,EAAaC,GAAOxB,KAAKoB,EAAKC,IAGtC,OAA+B,KAAxBE,EAAaT,OAAgBS,EAAe,GC+ExC,SAASG,EAAsBN,GAC1C,OA1BJ,SAA8BA,GAC1B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAKvB,QAAQ,GAAGM,oBAAoBW,OAAQO,IAAI,CAE/D,IADA,IAAIM,EAAa,EAAGC,EAAY,EAAGC,EAAoB,EAAGC,EAAmB,EAAGC,EAAqB,EAAGC,EAAqB,EAAGC,EAAqB,EAAGC,EAAoB,EACpKC,EAAI,EAAGA,EAAIf,EAAKvB,QAAQiB,OAAQqB,IACpCR,GAAcP,EAAKvB,QAAQsC,GAAGhC,oBAAoBkB,GAClDO,GAAaR,EAAKvB,QAAQsC,GAAG/B,mBAAmBiB,GAChDQ,GAAqBT,EAAKvB,QAAQsC,GAAG9B,oBAAoBC,OAAOe,GAChES,GAAoBV,EAAKvB,QAAQsC,GAAG9B,oBAAoBE,YAAYc,GACpEU,GAAsBX,EAAKvB,QAAQsC,GAAG9B,oBAAoBG,QAAQa,GAClEW,GAAsBZ,EAAKvB,QAAQsC,GAAG9B,oBAAoBI,QAAQY,GAClEY,GAAsBb,EAAKvB,QAAQsC,GAAG9B,oBAAoBK,QAAQW,GAClEa,GAAqBd,EAAKvB,QAAQsC,GAAG9B,oBAAoBM,OAAOU,GAEpED,EAAKvB,QAAQ,GAAGM,oBAAoBH,KAAK2B,GACzCP,EAAKvB,QAAQ,GAAGO,mBAAmBJ,KAAK4B,GACxCR,EAAKvB,QAAQ,GAAGQ,oBAAoBC,OAAON,KAAK6B,GAChDT,EAAKvB,QAAQ,GAAGQ,oBAAoBE,YAAYP,KAAK8B,GACrDV,EAAKvB,QAAQ,GAAGQ,oBAAoBG,QAAQR,KAAK+B,GACjDX,EAAKvB,QAAQ,GAAGQ,oBAAoBI,QAAQT,KAAKgC,GACjDZ,EAAKvB,QAAQ,GAAGQ,oBAAoBK,QAAQV,KAAKiC,GACjDb,EAAKvB,QAAQ,GAAGQ,oBAAoBM,OAAOX,KAAKkC,GAEpD,OAAOd,EAIAgB,CA9EX,SAAwBhB,GACpB,IAhBsBiB,EAgBlBC,EAAU,IAAI1C,EACd2C,EAAM,IAAItC,EAEdsC,EAAI3B,UAAU,OACd0B,EAAQxC,aAAayC,GAErB,IAAI,IAAIC,EAAI,EAAGA,EAAIpB,EAAKN,OAAQ0B,IAAM,CAIlC,IAHA,IAAIC,EAAiB,IAAIxC,EACrBuB,EAAQ,EAEJH,EAAI,EAAGA,EAAI/B,IAAgB+B,IAAK,CAGpC,IAFA,IAAIqB,EAAM,EAAGC,EAAa,EAAGC,EAAY,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAY,EAErGxB,EAAQJ,EAAKoB,GAAG1B,QAAUrB,EAA6B4B,EAAGD,EAAKoB,GAAGhB,GAAR,gBAAkC,CAK9F,OAHAkB,GAAOtB,EAAKoB,GAAGhB,GAAR,aA9BnBa,GADsBA,EAiCwBjB,EAAKoB,GAAGhB,GAAR,WAhCZyB,WAAWC,eAC1BC,SAAS,UACjB,EACRd,EAAgBc,SAAS,eACjB,EACRd,EAAgBc,SAAS,WACjB,EACRd,EAAgBc,SAAS,WACjB,EACRd,EAAgBc,SAAS,WACjB,EACJ,GAuBS,KAAK,EACDR,GAAcvB,EAAKoB,GAAGhB,GAAR,YACd,MACJ,KAAK,EACDoB,GAAaxB,EAAKoB,GAAGhB,GAAR,YACb,MACJ,KAAK,EACDqB,GAAezB,EAAKoB,GAAGhB,GAAR,YACf,MACJ,KAAK,EACDsB,GAAe1B,EAAKoB,GAAGhB,GAAR,YACf,MACJ,KAAK,EACDuB,GAAe3B,EAAKoB,GAAGhB,GAAR,YACf,MACJ,KAAK,EACDwB,GAAa5B,EAAKoB,GAAGhB,GAAR,YAGrBA,IAEJiB,EAAe7B,UAAUQ,EAAKoB,GAAG,GAAR,MACzBC,EAAe5B,cAAc6B,GAC7BD,EAAe1B,aAAa2B,GAC5BD,EAAezB,oBAAoB2B,EAAYC,EAAWC,EAAaC,EAAaC,EAAaC,GAErGV,EAAQxC,aAAa2C,GAEzB,OAAOH,EA8BqBc,CAAejC,EAAeC,KCnE/C,SAASiC,EAAaC,GACjC,QAAYC,IAATD,EACC,MAAO,GAIX,IAAME,GADNF,EAAO,IAAI/D,KAAK+D,GAAMG,gBACAC,MAAM,KAC5B,OAAOF,EAAS,GAAK,IArCzB,SAAsBG,GAClB,OAAQA,GACJ,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,IAAK,MACD,MAAO,KACX,QACI,MAAO,MAYYC,CAAaJ,EAAS,IAAM,IAAMA,EAAS,GCpC1E,IAAIK,EAAc,GAcHC,EAXG,WAEd,IADA,IAAIC,EAAc,IAAIxE,KAAK,wBACpB,IAAIA,KAAKwE,IAAgBxE,KAAKC,OACjCqE,EAAY7D,KAAKqD,EAAaU,IAC9BA,EAAc,IAAIxE,KAAKwE,GAAaC,QAAQ,IAAIzE,KAAKwE,GAAaE,UAAY,GAGlF,OADAC,QAAQC,IAAIN,EAAY/C,QACjB+C,GCXUO,E,yCACjBvE,QAAU,G,KAEVC,aAAe,SAACC,GACZ,EAAKF,QAAQG,KAAKD,KCJLsE,E,yCACjBnE,OAAS,G,KACToE,0BAA4B,CAAC,G,KAC7BC,yBAA2B,CAAC,G,KAC5BC,iCAAmC,CAC/BC,KAAM,CAAC,GACPC,OAAQ,CAAC,I,KAEbC,sBAAwB,CACpBC,MAAO,CAAC,GACRC,OAAQ,CAAC,I,KAEbC,qCAAuC,CACnCC,qBAAuB,CAAC,GACxBC,gCAAkC,CAAC,GACnCC,aAAc,CAAC,GACfC,QAAS,CAAC,GACVjE,MAAO,CAAC,I,KAGZL,UAAY,SAACV,GACT,EAAKA,OAASA,G,KAGlBW,cAAgB,SAACd,GACb,EAAKuE,0BAA0BtE,KAAK,EAAKsE,0BAA0B,EAAKA,0BAA0BxD,OAAS,GAAKf,I,KAGpHgB,aAAe,SAAChB,GACZ,EAAKwE,yBAAyBvE,KAAKD,I,KAGvCoF,oBAAsB,SAACV,EAAMC,GACzB,EAAKF,iCAAiCC,KAAKzE,KAAK,EAAKwE,iCAAiCC,KAAK,EAAKD,iCAAiCC,KAAK3D,OAAS,GAAK2D,GACpJ,EAAKD,iCAAiCE,OAAO1E,KAAK,EAAKwE,iCAAiCE,OAAO,EAAKF,iCAAiCE,OAAO5D,OAAS,GAAK4D,I,KAG9JU,oBAAsB,SAACR,EAAOC,GAC1B,EAAKF,sBAAsBC,MAAM5E,KAAK,EAAK2E,sBAAsBC,MAAM,EAAKD,sBAAsBC,MAAM9D,OAAS,GAAK8D,GACtH,EAAKD,sBAAsBE,OAAO7E,KAAK,EAAK2E,sBAAsBE,OAAO,EAAKF,sBAAsBE,OAAO/D,OAAS,GAAK+D,I,KAG7HQ,wBAA0B,SAACN,EAAsBC,EAAiCC,EAAcC,EAASjE,GACrG,EAAK6D,qCAAqCC,qBAAqB/E,KAAK,EAAK8E,qCAAqCC,qBAAqB,EAAKD,qCAAqCC,qBAAqBjE,OAAS,GAAKiE,GAChN,EAAKD,qCAAqCE,gCAAgChF,KAAK,EAAK8E,qCAAqCE,gCAAgC,EAAKF,qCAAqCE,gCAAgClE,OAAS,GAAKkE,GACjP,EAAKF,qCAAqCG,aAAajF,KAAK,EAAK8E,qCAAqCG,aAAa,EAAKH,qCAAqCG,aAAanE,OAAS,GAAKmE,GACxL,EAAKH,qCAAqCI,QAAQlF,KAAK,EAAK8E,qCAAqCI,QAAQ,EAAKJ,qCAAqCI,QAAQpE,OAAS,GAAKoE,GACzK,EAAKJ,qCAAqC7D,MAAMjB,KAAK,EAAK8E,qCAAqC7D,MAAM,EAAK6D,qCAAqC7D,MAAMH,OAAS,GAAKG,I,KAGvKC,MAAQ,WACJ,EAAKhB,OAAS,GACd,EAAKoE,0BAA4B,CAAC,GAClC,EAAKC,yBAA2B,CAAC,GACjC,EAAKC,iCAAiCC,KAAO,CAAC,GAC9C,EAAKD,iCAAiCE,OAAS,CAAC,GAChD,EAAKI,qCAAqCC,qBAAuB,CAAC,GAClE,EAAKD,qCAAqCE,gCAAkC,CAAC,GAC7E,EAAKF,qCAAqCG,aAAe,CAAC,GAC1D,EAAKH,qCAAqCI,QAAU,CAAC,GACrD,EAAKJ,qCAAqC7D,MAAQ,CAAC,KCwB5C,SAASqE,EAA4BlE,GAChD,OAvCJ,SAA8BA,GAC1B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAKvB,QAAQ,GAAGyE,0BAA0BxD,OAAQO,IAAI,CAGrE,IAFA,IAAIM,EAAa,EAAGC,EAAY,EAAG2D,EAAS,CAACd,KAAM,EAAGC,OAAQ,GAAIc,EAAS,CAACZ,MAAO,EAAGC,OAAQ,GAC1FY,EAAa,CAACC,WAAY,EAAGC,sBAAuB,EAAGC,IAAK,EAAGC,OAAQ,EAAGlF,OAAQ,GAC9EwB,EAAI,EAAGA,EAAIf,EAAKvB,QAAQiB,OAAQqB,IACpCR,GAAcP,EAAKvB,QAAQsC,GAAGmC,0BAA0BjD,GACxDO,GAAaR,EAAKvB,QAAQsC,GAAGoC,yBAAyBlD,GAEtDkE,EAAOd,MAAQrD,EAAKvB,QAAQsC,GAAGqC,iCAAiCC,KAAKpD,GACrEkE,EAAOb,QAAUtD,EAAKvB,QAAQsC,GAAGqC,iCAAiCE,OAAOrD,GAEzEmE,EAAOZ,MAAQxD,EAAKvB,QAAQsC,GAAGwC,sBAAsBC,MAAMvD,GAC3DmE,EAAOX,OAASzD,EAAKvB,QAAQsC,GAAGwC,sBAAsBE,OAAOxD,GAE7DoE,EAAWC,YAActE,EAAKvB,QAAQsC,GAAG2C,qCAAqCC,qBAAqB1D,GACnGoE,EAAWE,uBAAyBvE,EAAKvB,QAAQsC,GAAG2C,qCAAqCE,gCAAgC3D,GACzHoE,EAAWG,KAAOxE,EAAKvB,QAAQsC,GAAG2C,qCAAqCG,aAAa5D,GACpFoE,EAAWI,QAAUzE,EAAKvB,QAAQsC,GAAG2C,qCAAqCI,QAAQ7D,GAClFoE,EAAW9E,QAAUS,EAAKvB,QAAQsC,GAAG2C,qCAAqC7D,MAAMI,GAEpFD,EAAKvB,QAAQ,GAAGyE,0BAA0BtE,KAAK2B,GAC/CP,EAAKvB,QAAQ,GAAG0E,yBAAyBvE,KAAK4B,GAE9CR,EAAKvB,QAAQ,GAAG2E,iCAAiCC,KAAKzE,KAAKuF,EAAOd,MAClErD,EAAKvB,QAAQ,GAAG2E,iCAAiCE,OAAO1E,KAAKuF,EAAOb,QAEpEtD,EAAKvB,QAAQ,GAAG8E,sBAAsBC,MAAM5E,KAAKwF,EAAOZ,OACxDxD,EAAKvB,QAAQ,GAAG8E,sBAAsBE,OAAO7E,KAAKwF,EAAOX,QAEzDzD,EAAKvB,QAAQ,GAAGiF,qCAAqCC,qBAAqB/E,KAAKyF,EAAWC,YAC1FtE,EAAKvB,QAAQ,GAAGiF,qCAAqCE,gCAAgChF,KAAKyF,EAAWE,uBACrGvE,EAAKvB,QAAQ,GAAGiF,qCAAqCG,aAAajF,KAAKyF,EAAWG,KAClFxE,EAAKvB,QAAQ,GAAGiF,qCAAqCI,QAAQlF,KAAKyF,EAAWI,QAC7EzE,EAAKvB,QAAQ,GAAGiF,qCAAqC7D,MAAMjB,KAAKyF,EAAW9E,QAE/E,OAAOS,EAIAgB,CAjFX,SAAwBhB,GACpB,IAAIkB,EAAU,IAAI8B,EACd7B,EAAM,IAAI8B,EACd9B,EAAI3B,UAAU,OACd0B,EAAQxC,aAAayC,GAErB,IAAI,IAAIC,EAAI,EAAGA,EAAIpB,EAAKN,OAAQ0B,IAAM,CAIlC,IAHA,IAAIC,EAAiB,IAAI4B,EACrB7C,EAAQ,EAEJH,EAAI,EAAGA,EAAI/B,IAAgB+B,IAAK,CAIpC,IAHA,IAAIyE,EAAa,CAACrB,KAAM,EAAGC,OAAQ,GAAIqB,EAAa,CAACnB,MAAO,EAAGC,OAAQ,GACnEmB,EAAiB,CAACN,WAAY,EAAGC,sBAAuB,EAAGC,IAAK,EAAGC,OAAQ,EAAGlF,OAAQ,GAEpFa,EAAQJ,EAAKoB,GAAG1B,QAAUrB,EAA6B4B,EAAGD,EAAKoB,GAAGhB,GAAR,wBAE5DsE,EAAWrB,MAAQrD,EAAKoB,GAAGhB,GAAR,eACnBsE,EAAWpB,QAAUtD,EAAKoB,GAAGhB,GAAR,gBAErBuE,EAAWnB,OAASxD,EAAKoB,GAAGhB,GAAR,WACpBuE,EAAWlB,QAAUzD,EAAKoB,GAAGhB,GAAR,aAErBwE,EAAeN,YAActE,EAAKoB,GAAGhB,GAAR,2CAC7BwE,EAAeL,uBAAyBvE,EAAKoB,GAAGhB,GAAR,kCACxCwE,EAAeJ,KAAOxE,EAAKoB,GAAGhB,GAAR,qBACtBwE,EAAeH,QAAUzE,EAAKoB,GAAGhB,GAAR,iBAEzBA,IAEJiB,EAAe7B,UAAUQ,EAAKoB,GAAG,GAAR,MACzBC,EAAe5B,cAAeiF,EAAWrB,KAAOqB,EAAWpB,QAC3DjC,EAAe1B,aAAc+E,EAAWrB,KAAOqB,EAAWpB,QAC1DjC,EAAe0C,oBAAoBW,EAAWrB,KAAMqB,EAAWpB,QAC/DjC,EAAe2C,oBAAoBW,EAAWnB,MAAOmB,EAAWlB,QAChEpC,EAAe4C,wBAAwBW,EAAeN,WAAYM,EAAeL,sBAAuBK,EAAeJ,IAAKI,EAAeH,OAAQG,EAAerF,QAEtK2B,EAAQxC,aAAa2C,GAEzB,OAAOH,EA2CqBc,CAAejC,EAAeC,KChF9D,IA+Be6E,EA/BD,CAEV7E,KAAM,CACF8E,MAAO,GACPC,SAAU,GACVC,eAAgB,IAGpBC,yBARU,SAQeC,GACrBC,KAAKnF,KAAKgF,eAAiBd,EAA4BgB,IAG3DE,mBAZU,SAYSF,GACfC,KAAKnF,KAAK+E,SAAWzE,EAAsB4E,GAC3CC,KAAKnF,KAAK8E,MAAQpC,KAGtB2C,WAjBU,WAkBN,OAAOF,KAAKnF,MAGhBsF,SArBU,WAsBN,OAAOH,KAAKnF,KAAK8E,OAGrBS,YAzBU,WA0BN,OAAOtD,EAAa9D,KAAKC,S,sGCclBoH,EA7CA,CAEXC,KAAM,UACNC,gBAAiB,uBACjBC,MAAO,UACPC,WAAY,wBACZC,MAAO,qBACPC,mBAAoB,qBACpBC,iBAAkB,sBAClBC,YAAY,uBACZC,WAAY,UACZC,MAAO,OACPC,QAAS,yBACTC,eAAgB,UAChBC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,KAAM,UACNC,KAAM,UACNC,kBAAmB,kBACnBC,mBAAoB,UACpBC,yBAA0B,sBAE1BC,cAAe,UACfC,yBAA0B,sBAC1BC,eAAgB,OAChBC,eAAgB,UAChBC,yBAA0B,OAC1BC,wBAAyB,OACzBC,oBAAqB,UACrBC,eAAgB,wBAChBC,4BAA6B,wBAC7BC,0BAA2B,wBAC3BC,qBAAqB,gBACrBC,wBAAyB,UACzBC,oBAAqB,OACrBC,iBAAkB,UAClBC,iBAAkB,UAClBC,iBAAkB,UAClBC,cAAe,UACfC,cAAe,UACfC,4BAA6B,UAC7BC,kCAAmC,W,QCxCxB,SAASC,IACpB,MAAuC,SAAhCC,aAAWC,iBCFtB,IAceC,EAdI,CACfC,MAAOJ,IAAa,UAAY,UAChCK,IAAKL,IAAa,UAAY,UAC9BM,OAAQN,IAAY,UAAa,UACjCO,OAAQP,IAAa,UAAY,UACjCQ,KAAMR,IAAa,UAAY,UAC/BS,KAAMT,IAAa,UAAY,UAC/BU,OAAQV,IAAa,UAAY,UACjCW,KAAMX,IAAa,UAAY,UAC/BY,KAAMZ,IAAa,UAAY,UAC/Ba,OAAQb,IAAa,UAAY,UACjCc,QAASd,IAAa,UAAY,W,QCT/B,IAAMe,EAAS,CAClBC,gBAAiB,IACjBC,YAAa,IACbC,YAAa,IACbC,YAAa,GACbC,aAAc,GACdC,kBAAmB,GACnBC,WAAY,EACZC,sBAAuB,GACvBC,eAAgB,IAChBC,gBAAiB,KAIRC,EAAgB,CACzBC,UCPOC,IAAWC,IAAI,UAAUC,OAASf,EAAOE,YAC5C,IAAOW,IAAWC,IAAI,UAAUC,MAAQf,EAAOQ,sBDOnDQ,WCHOH,IAAWC,IAAI,UAAUC,OAASf,EAAOE,YAC5C,IAAOW,IAAWC,IAAI,UAAUC,MAAQf,EAAOQ,sBDGnDS,QChBOJ,IAAWC,IAAI,UAAUC,OAASf,EAAOE,YAC3CW,IAAWC,IAAI,UAAUC,MAAQf,EAAOG,YAAkC,EAApBH,EAAOO,WAC7DM,IAAWC,IAAI,UAAUC,MAAQf,EAAOQ,sBDe7CU,eCAOL,IAAWC,IAAI,UAAUC,MAAQf,EAAOE,YAC1CW,IAAWC,IAAI,UAAUC,MAAQf,EAAOG,YAAcH,EAAOI,YAC7DS,IAAWC,IAAI,UAAUC,MAAQf,EAAOI,aChBpCe,EAASC,IAAWC,OAAO,CACpCC,KAAM,CACFC,gBAAiB/E,EAAOO,kBAE5ByE,cAAe,CACXC,KAAM,EACNC,WAAY,aACZC,aAAc,eACdC,eAAgB,aAChBL,gBAAiBtC,IAAazC,EAAOiC,oBAAsBjC,EAAOS,YAEtE4E,oBAAqB,CACjBJ,KAAM,EACNK,cAAe,MACfC,SAAU,OACVC,aAAc,IAElBC,QAAS,CACLV,gBAAkBtC,IAAazC,EAAOiC,oBAAsBjC,EAAOS,YAEvEiF,UAAW,CACPT,KAAM,EACNF,gBAAkBtC,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eACvEsE,WAAY,SACZE,eAAgB,UAEpBO,eAAgB,CACZC,YAAa,GACbC,aAAa,GACbC,oBAAqB,EACrBC,qBAAsB,GACtBC,wBAAyB,GACzBC,uBAAwB,GACxBC,YAAa,eAMjBC,OAAQ,CACJpB,gBAAiBtC,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eACtEwF,kBAAmB3D,IAAazC,EAAO2B,oBAAsB3B,EAAOW,QACpE0F,kBAAmB,GACnBC,SAA2B,QAAhBC,IAASC,GAAe,QAAS,WAC5CC,IAAK,EACLC,KAAM,GAEVC,YAAa,CACTC,MAAOnE,IAAazC,EAAOuB,eAAiBvB,EAAOU,OAEvDmG,aAAc,CACVC,YAAarE,IAAazC,EAAO+B,qBAAuB/B,EAAOQ,YAC/DuG,aAAc,CACVxC,MAAO,EACPyC,OAAQ,GAEZC,cAAe,GACfC,aAAc,MACdC,UAAW,IASfC,YAAa,CACTd,SAAU,WACVT,aAAc,GACdwB,OAAQ,GACRL,OAAQ,OACRM,QAAS,GACTvC,gBAAiBtC,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eACtEsF,YAAazD,IAAazC,EAAO8B,0BAA4B9B,EAAOW,QACpE4G,YAAa,GACbJ,UAAW,IAEfK,WAAY,CACRV,YAAarE,IAAazC,EAAO+B,qBAAuB/B,EAAOQ,YAC/DuG,aAAc,CACVxC,MAAO,EACPyC,OAAQ,IAEZC,cAAexE,IAAa,EAAI,GAChCyE,aAAc,MACdC,UAAW,IAEf1C,QAAS,CACLF,MAAOJ,EAAcM,SAEzBD,WAAY,CACRD,MAAOJ,EAAcK,YAEzBJ,UAAW,CACPG,MAAOJ,EAAcC,WAKzBqD,eAAgB,CACZC,SAAU,GACVC,WAAY,MACZf,MAAO,QAEXgB,eAAgB,CACZC,UAAW,SACXjB,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAExD2H,mBAAoB,CAChBC,UAAU,GACVL,SAAU,GACVC,WAAY,OAEhBK,mBAAoB,CAChBD,UAAW,EACXvC,aAAc,GACdkC,SAAU,GACVO,UAAW,UAEfC,eAAgB,CACZtB,MAAO,QAEXuB,gBAAiB,CACbvB,MAAOhE,EAAaI,QAExBoF,eAAgB,CACZrD,gBAAiBnC,EAAaC,OAElCwF,cAAe,CACXzB,MAAOhE,EAAaK,MAExBqF,aAAc,CACV1B,MAAOhE,EAAaE,KAKxByF,WAAY,CACRb,SAAU,GACVC,WAAY,MACZf,MAAOnE,IAAazC,EAAOuB,eAAiBvB,EAAOU,OAEvD8H,iBAAkB,CACdd,SAAU,GACVO,UAAW,SACXJ,UAAW,SACXE,UAAW,GACXnB,MAAOnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAEvDsI,6BAA8B,CAC1B7B,MAAOnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAEvDuI,gBAAiB,CACbhB,SAAU,GACVd,MAAOnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,MACnD8H,UAAW,SACXJ,UAAW,OACXE,UAAW,GACXY,WAAY,GACZC,YAAa,IAGjBC,cAAe,CACXtE,MAAO,OACPsD,UAAW,SACXH,SAAU,GACVK,UAAW,GACXvC,aAAc,GACdoB,MAAOnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAMvD2I,wBAAyB,CACrB7D,KAAM,EACNoC,OAAQ,GACR/B,cAAe,MACfC,SAAU,QAEdwD,gBAAiB,CACb1B,OAAQ,GACRf,SAAU,WACVhB,cAAe,OAEnB0D,kBAAmB,CACfzE,MAAO,GACPyC,OAAO,GACPnB,aAAc,GAElBoD,YAAa,CACTN,WAAY,GACZ/B,MAAOnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAMvD+I,eAAgB,CACZC,OAAQ,EACR7C,SAA0B,QAAhBC,IAASC,GAAe,QAAS,WAC3CpB,eAAgC,QAAhBmB,IAASC,GAAe,OAAQ,SAChDtB,WAA4B,QAAhBqB,IAASC,GAAe,OAAQ,SAC5CjC,MAAO,OACPyC,OAAQ,OACRjC,gBAAiBtC,IAAazC,EAAOgC,wBAA0BhC,EAAOG,MACtEiJ,WAAY,GACZC,cAAe,GACfnD,YAAa,cACboD,eAAgB7G,IAAazC,EAAO2B,oBAAsB3B,EAAOW,QACjE4G,YAAa,MC1NRgC,EACH,4BADGA,EAEA,aAFAA,EAGD,aAHCA,EAII,kNAGJC,EACH,QAGGC,EAEF,kDAIEC,EAEW,YAFXA,EAGE,WAHFA,EAIO,mBAJPA,EAKH,eAIGC,EACC,WADDA,GAEO,mBAFPA,GAGiB,sBAHjBA,GAIiB,0BAJjBA,GAKU,qBALVA,GAMa,mBANbA,GAOY,QAPZA,GAQkB,aARlBA,GASmB,eAGnBC,GACU,mCADVA,GAEQ,4CAFRA,GAGO,wDAHPA,GAIY,uDAJZA,GAKc,0DALdA,GAMqB,uCAGrBC,GAA4B,CACrCC,kBAAmB,oFACnBC,gBAAiB,4EACjBC,eAAgB,uEAChBC,oBAAqB,8EACrBC,sBAAuB,+EACvBC,6BAA8B,+DAC9BC,SAAU,CAAC,SAAU,cAAe,UAAW,oBAAqB,UAAW,UAItEC,GACU,mCADVA,GAEQ,+CAFRA,GAGO,2DAHPA,GAIkB,4CAJlBA,GAKoB,+CALpBA,GAMkB,8CANlBA,GAOoB,iDAGpBC,GAAkC,CAC3CR,kBAAmB,oFACnBC,gBAAiB,+EACjBC,eAAgB,0EAChBO,0BAA2B,qEAC3BC,4BAA6B,wEAC7B7L,OAAQ,CAAC,iBAAkB,mBAC3B8L,0BAA2B,uFAC3BC,4BAA6B,uFAC7B9L,OAAQ,CAAC,aAAc,iBAGd+L,GACoB,oBADpBA,GAEC,eAFDA,GAGO,YAMPC,GACG,sEADHA,GAEO,8BAIPC,GACK,aADLA,GAEQ,iBAFRA,GAGD,OAHCA,GAIA,WAJAA,GAKG,aALHA,GAMH,gBAIGC,GACQ,+BADRA,GAED,mBAFCA,GAGA,oBAHAA,GAIG,kBAJHA,GAKH,oB,+aCzFKC,G,iCAbX,aAAe,gC,6CAKX,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAEhG,KAAM,EAAGC,WAAY,SAAUE,eAAgB,UAAYT,EAAOc,UAC9E,kBAACyF,EAAA,EAAD,KAAOzB,Q,GATG0B,a,ybCgBXC,G,iCAfX,aAAe,gC,6CAKX,OACI,kBAACJ,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAEhG,KAAM,EAAGC,WAAY,SAAUE,eAAgB,UAAYT,EAAOc,UAC9E,kBAACuF,EAAA,EAAD,KACI,kBAACK,GAAA,EAAD,Y,GAVWF,a,oBCFlBG,GAAgBC,cAEtB,SAASC,GAASC,EAAMC,GAAS,IAAD,EACnC,SAAAJ,GAAcK,UAAd,EAAuBH,SAASC,EAAMC,GAQlBH,cAAjB,I,kBCZMK,GAAa,CACtB,CAACC,MAAOlB,GAAsBmB,MAAO,GACrC,CAACD,MAAO,UAAWC,MAAO,GAC1B,CAACD,MAAO,aAAcC,MAAO,GAC7B,CAACD,MAAO,WAAYC,MAAO,GAC3B,CAACD,MAAO,WAAYC,MAAO,GAC3B,CAACD,MAAO,iBAAkBC,MAAO,GACjC,CAACD,MAAO,wBAAyBC,MAAO,GACxC,CAACD,MAAO,QAASC,MAAO,GACxB,CAACD,MAAO,UAAWC,MAAO,GAC1B,CAACD,MAAO,YAAaC,MAAO,GAC5B,CAACD,MAAO,SAAUC,MAAO,IACzB,CAACD,MAAO,SAAUC,MAAO,IACzB,CAACD,MAAO,eAAgBC,MAAO,IAC/B,CAACD,MAAO,cAAeC,MAAO,IAC9B,CAACD,MAAO,WAAYC,MAAO,IAC3B,CAACD,MAAO,SAAUC,MAAO,IACzB,CAACD,MAAO,WAAYC,MAAO,IAC3B,CAACD,MAAO,UAAWC,MAAO,IAC1B,CAACD,MAAO,UAAWC,MAAO,IAC1B,CAACD,MAAO,SAAUC,MAAO,IACzB,CAACD,MAAO,gBAAkBC,MAAO,IACjC,CAACD,MAAO,SAAUC,MAAO,K,mBCHdC,GAjBO,CAElBnR,MAAO,EAEPoR,YAJkB,SAINpR,GACLA,GAAS,GAAKA,GAASgR,GAAW1R,SACjCyF,KAAK/E,MAAQA,EACbqR,KAAcC,KAAK,kBAAmB,iBAI9CC,YAXkB,WAYd,OAAOxM,KAAK/E,Q,wbCJdwR,G,iCAEF,WAAYC,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CAACC,SAAUR,GAAiBI,eAF1B,E,6CAKT,IAAD,OACL,OACI,kBAACnB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,QAAS,CACjEM,gBAAiBtC,IAAazC,EAAO2B,oBAAsB3B,EAAOY,eAClE0G,QAAS,KAET,kBAAC,KAAD,CACIkF,MAAOZ,GACPa,YAAa,CAACX,MAAO,EAAGD,MAAOlB,IAC/B+B,cAAe,SAACZ,GACZ,EAAKa,SAAS,CAACJ,SAAUT,IACzBC,GAAiBC,YAAYF,IAEjCc,SAAUpD,EACVyB,MAAO4B,GACPC,wBAAwB,EACxBC,6BAA6B,S,GAvBlB5B,aA8BzB0B,GAAqBjI,IAAWC,OAAO,CACzCmI,SAAU,CACNtF,SAAU,GACVH,YAAa,EACbxC,gBAAiBtC,IAAa,cAAezC,EAAOY,eACpDqM,WAAYC,KACZtG,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAExDgN,SAAU,CACNzF,SAAU,GACV0F,gBAAiB,GACjBC,kBAAmB,GACnB9F,YAAa,EACbxC,gBAAiB,cACjB6B,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,MACpDmN,aAAc,IAElBC,aAAc,CACV7F,SAAU,GACV2F,kBAAmB,GACnBD,gBAAiB,EACjB7F,YAAa,EACb1B,aAAc,EACde,MAAO,cACP0G,aAAc,MAIPlB,M,+aCjEMoB,G,iCAEjB,WAAYnB,GAAQ,+BACVA,G,6CAIN,OACI,oCACI,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOK,cAAe,CAACsB,SAAU,cAC3C,kBAACmH,GAAA,EAAD,KACI,kBAACzC,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOU,sBACjB,kBAAC,GAAD,MACC1F,KAAK0M,MAAMqB,iB,GAbYvC,aCa7C,IAAMwC,GAAgBlL,IAAa,EAAI,GCf1C9H,GAAe,CACfmP,kBAAmB,EACnB8D,MAAO,EACPC,cAAe,EACfC,wBAAyB,EACzB/D,gBAAiB,GACjBC,eAAgB,GAChB+D,oBAAqB,GACrBC,8BAA+B,IA0CnC,IAqBeC,GArBiB,WAC5BtT,GAAaiT,MAAQvO,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eACvE5S,oBAAoB8F,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAC3E5S,oBAAoBW,OAAS,GAClCS,GAAakT,cAAgBxO,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAC/E3S,mBAAmB6F,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAC1E3S,mBAAmBU,OAAS,GACjCS,GAAamT,wBAAyD,IAA/BnT,GAAakT,cAAsB,GACrEtV,KAAK2V,MAAOvT,GAAakT,cAAgBlT,GAAaiT,MAAQ,IAAK,KAAK,KAAKO,QAAQ,GAC1F,IAAIC,EAAa/O,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eACnE5S,oBAAoB8F,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAC3E5S,oBAAoBW,OAAS,GAAKmF,EAAQQ,aAAaN,SAAStG,QAAQ,GACxEM,oBAAoB8F,EAAQQ,aAAaN,SAAStG,QAAQ,GAAGM,oBAAoBW,OAAS,GAAK,IAKpG,OAJAS,GAAamP,mBAAqBvR,KAAK2V,MAAiB,IAAXE,GAAgB,KAAKD,QAAQ,GAC1ExT,GAAaoP,gBAAkB1K,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAAe5S,oBACrGoB,GAAaqP,eAAiB3K,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAAe3S,mBA/CxG,WACImB,GAAaoT,oBAAsB,GACnCpT,GAAaqT,8BAAgC,GAI7C,IAHA,IAAI1O,EAAQD,EAAQS,WAChB6L,EAAWtM,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAAe1S,oBACjFmU,EAAQjT,GAAaoP,gBACjBtP,EAAI,EAAGA,EAAKkR,EAAQjS,OAAOQ,OAAS,EAAGO,IAC3CE,GAAaoT,oBAAoB3U,KAC7B,CACIsD,KAAM4C,EAAM7E,GACZf,OAAQiS,EAAQjS,OAAOe,GACvBd,YAAagS,EAAQhS,YAAYc,GACjCb,QAAS+R,EAAQ/R,QAAQa,GACzBZ,QAAS8R,EAAQ9R,QAAQY,GACzBX,QAAS6R,EAAQ7R,QAAQW,GACzBV,OAAQ4R,EAAQ5R,OAAOU,KAG/BE,GAAaqT,8BAA8B5U,KACvC,CACIsD,KAAM4C,EAAM7E,GACZf,OAA8B,IAAtBiS,EAAQjS,OAAOe,GAAW,EAAIkR,EAAQjS,OAAOe,GAAKmT,EAAMnT,GAAK,IACrEd,YAAwC,IAA3BgS,EAAQhS,YAAYc,GAAW,EAAIkR,EAAQhS,YAAYc,GAAKmT,EAAMnT,GAAK,IACpFb,QAAgC,IAAvB+R,EAAQ/R,QAAQa,GAAW,EAAIkR,EAAQ/R,QAAQa,GAAKmT,EAAMnT,GAAK,IACxEZ,QAAgC,IAAvB8R,EAAQ9R,QAAQY,GAAW,EAAIkR,EAAQ9R,QAAQY,GAAKmT,EAAMnT,GAAK,IACxEX,QAAgC,IAAvB6R,EAAQ7R,QAAQW,GAAW,EAAIkR,EAAQ7R,QAAQW,GAAKmT,EAAMnT,GAAK,IACxEV,OAA+B,IAAvB4R,EAAQ5R,OAAOU,GAAY,EAAIkR,EAAQ5R,OAAOU,GAAKmT,EAAMnT,GAAK,MAsBlF4T,GACO1T,I,+aC7DU2T,G,sIAEb,OACI,kBAACtD,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,UAAW,CAACW,gBAAiBnC,EAAaO,OAAQ2D,YAAalE,EAAaO,OAAQ8D,cAAe0G,MAC5J,kBAACzC,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,WAAY5D,EAAOuD,iBAAkByB,GAC1D,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,mBAAoBnD,EAAOuD,iBAAkB+F,KAA0BL,MAAMW,eAAe,OACxI,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,mBAAqBrD,EAAOuD,iBAAxE,IAA2F+F,KAA0BJ,cAAcU,eAAe,MAAlJ,MAA4JN,KAA0BH,wBAAtL,W,GAN0B3C,aCNtCxQ,GAAe,CACfmP,kBAAmB,EACnB8D,MAAO,EACPC,cAAe,EACfC,wBAAyB,EACzB/D,gBAAiB,GACjBC,eAAgB,GAChBwE,kBAAmB,GACnBhE,4BAA6B,GAC7BiE,kBAAmB,GACnB/D,4BAA6B,GAC7BgE,sBAAuB,EACvBC,uBAAwB,EACxBC,sBAAuB,EACvBC,uBAAwB,EACxBC,qBAAsB,EACtBC,sBAAuB,EACvBC,+BAAgC,EAChCC,gCAAiC,EACjCpQ,WAAY,CACRV,qBAAsB,EACtB+Q,sBAAuB,EACvBC,qBAAsB,EACtBC,gCAAiC,EACjCC,WAAY,EACZC,sBAAuB,EACvBC,qBAAsB,EACtBC,gCAAiC,EACjCxQ,IAAK,EACLyQ,eAAgB,EAChBC,cAAe,EACfC,yBAA0B,EAC1B1Q,OAAQ,EACR2Q,kBAAmB,EACnBC,iBAAkB,EAClBC,4BAA6B,EAC7B/V,OAAQ,EACRgW,kBAAmB,EACnBC,iBAAkB,EAClBC,4BAA6B,IAiGrC,IAuBeC,GAvBuB,WAClCvV,GAAaiT,MAAQvO,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eAC7EzO,0BAA0B2B,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACvFzO,0BAA0BxD,OAAS,GACxCS,GAAakT,cAAgBxO,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACrFxO,yBAAyB0B,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACtFxO,yBAAyBzD,OAAS,GACvCS,GAAamT,wBAAyD,IAA/BnT,GAAakT,cAAsB,GACrEtV,KAAK2V,MAAOvT,GAAakT,cAAgBlT,GAAaiT,MAAQ,IAAO,KAAO,KAAKO,QAAQ,GAC9F,IAAIC,EAAa/O,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACzEzO,0BAA0B2B,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACvFzO,0BAA0BxD,OAAS,GAAKmF,EAAQQ,aAAaL,eAAevG,QAAQ,GACpFyE,0BAA0B2B,EAAQQ,aAAaL,eAAevG,QAAQ,GAAGyE,0BAA0BxD,OAAS,GAAK,IAOtH,OANAS,GAAamP,mBAAqBvR,KAAK2V,MAAmB,IAAbE,GAAoB,KAAKD,QAAQ,GAC9ExT,GAAaoP,gBAAkB1K,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eAAezO,0BAC3G/C,GAAaqP,eAAiB3K,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eAAexO,yBAnG9G,WACIhD,GAAa6T,kBAAoB,GACjC7T,GAAa6P,4BAA8B,GAG3C,IAFA,IAAIlL,EAAQD,EAAQS,WAChB6L,EAAUtM,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eAAevO,iCACjFnD,EAAI,EAAGA,EAAIkR,EAAQ9N,KAAK3D,OAAS,EAAGO,IACzCE,GAAa6T,kBAAkBpV,KAC3B,CACIsD,KAAM4C,EAAM7E,GACZoD,KAAM8N,EAAQ9N,KAAKpD,GACnBqD,OAAQ6N,EAAQ9N,KAAKpD,KAG7BE,GAAa6P,4BAA4BpR,KACrC,CACIsD,KAAM4C,EAAM7E,GACZoD,KAA0B,IAApB8N,EAAQ9N,KAAKpD,GAAW,EAAIkR,EAAQ9N,KAAKpD,IAAMkR,EAAQ9N,KAAKpD,GAAKkR,EAAQ7N,OAAOrD,IAAM,IAC5FqD,OAA8B,IAAtB6N,EAAQ7N,OAAOrD,GAAW,EAAIkR,EAAQ7N,OAAOrD,IAAMkR,EAAQ9N,KAAKpD,GAAKkR,EAAQ7N,OAAOrD,IAAM,MAmF9G0V,GA7EJ,WACIxV,GAAa8T,kBAAoB,GACjC9T,GAAa+P,4BAA8B,GAI3C,IAHA,IAAIpL,EAAQD,EAAQS,WAChB6L,EAAUtM,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eAAepO,sBACtFtD,EAAI,EACDA,EAAIkR,EAAQ3N,MAAM9D,OAAS,EAAGO,IACjCE,GAAa8T,kBAAkBrV,KAC3B,CACIsD,KAAM4C,EAAM7E,GACZuD,MAAO2N,EAAQ3N,MAAMvD,GACrBwD,OAAQ0N,EAAQ1N,OAAOxD,KAG/BE,GAAa+P,4BAA4BtR,KACrC,CACIsD,KAAM4C,EAAM7E,GACZuD,MAA4B,IAArB2N,EAAQ3N,MAAMvD,GAAW,EAAIkR,EAAQ3N,MAAMvD,IAAMkR,EAAQ3N,MAAMvD,GAAKkR,EAAQ1N,OAAOxD,IAAM,IAChGwD,OAA8B,IAAtB0N,EAAQ1N,OAAOxD,GAAW,EAAIkR,EAAQ1N,OAAOxD,IAAMkR,EAAQ3N,MAAMvD,GAAKkR,EAAQ1N,OAAOxD,IAAM,MAI/GE,GAAa+T,sBAAwB/C,EAAQ3N,MAAMvD,GACnDE,GAAagU,uBAAyBhD,EAAQ1N,OAAOxD,GACrDE,GAAaiU,sBAA+D,IAAvCjU,GAAa+T,sBAA8B,EAAI/T,GAAa+T,sBAAwB/T,GAAaiT,MAAQ,IAC9IjT,GAAakU,uBAAiE,IAAxClU,GAAagU,uBAA+B,EAAIhU,GAAagU,uBAAyBhU,GAAaiT,MAAQ,IACjJjT,GAAamU,qBAAuBnD,EAAQ3N,MAAMvD,GAAKkR,EAAQ3N,MAAMvD,EAAI,GACzEE,GAAaoU,sBAAwBpD,EAAQ1N,OAAOxD,GAAKkR,EAAQ1N,OAAOxD,EAAI,GAC5EE,GAAaqU,+BAAuE,IAAtCrU,GAAamU,qBAA6B,EAAKnU,GAAamU,qBAAuBnU,GAAa+T,sBAAwB,IACtK/T,GAAasU,gCAAyE,IAAvCtU,GAAaoU,sBAA8B,EAAKpU,GAAaoU,sBAAwBpU,GAAagU,uBAAyB,IAiD1KyB,GA9CJ,WACI,IAAI1U,EAAU2D,EAAQQ,aAAaL,eAAevG,QAAQ8S,GAAiBI,eACvEkE,EAAa3U,EAAQwC,qCAAqCC,qBAAqBjE,OAAS,EAE5FS,GAAakE,WAAWV,qBAAuBzC,EAAQwC,qCAAqCC,qBAAqBkS,GACjH1V,GAAakE,WAAWwQ,WAAa3T,EAAQwC,qCAAqCE,gCAAgCiS,GAClH1V,GAAakE,WAAWG,IAAMtD,EAAQwC,qCAAqCG,aAAagS,GACxF1V,GAAakE,WAAWI,OAASvD,EAAQwC,qCAAqCI,QAAQ+R,GACtF1V,GAAakE,WAAW9E,OAAS2B,EAAQwC,qCAAqC7D,MAAMgW,GAEpF1V,GAAakE,WAAWqQ,uBAAyB3W,KAAK2V,MAAMvT,GAAakE,WAAWV,qBAAuBxD,GAAaiT,MAAQ,KAAS,KAAKO,QAAQ,GACtJxT,GAAakE,WAAWyQ,uBAAyB/W,KAAK2V,MAAMvT,GAAakE,WAAWwQ,WAAa1U,GAAaiT,MAAQ,KAAS,KAAKO,QAAQ,GAC5IxT,GAAakE,WAAW4Q,gBAAkBlX,KAAK2V,MAAMvT,GAAakE,WAAWG,IAAMrE,GAAaiT,MAAQ,KAAS,KAAKO,QAAQ,GAC9HxT,GAAakE,WAAW+Q,mBAAqBrX,KAAK2V,MAAMvT,GAAakE,WAAWI,OAAStE,GAAaiT,MAAQ,KAAS,KAAKO,QAAQ,GACpIxT,GAAakE,WAAWkR,mBAAqBxX,KAAK2V,MAAMvT,GAAakE,WAAW9E,OAASY,GAAaiT,MAAQ,KAAS,KAAKO,QAAQ,GAEpIxT,GAAakE,WAAWsQ,qBAAuBzT,EAAQwC,qCAAqCC,qBAAqBkS,GAAc3U,EAAQwC,qCAAqCC,qBAAqBkS,EAAa,GAC9M1V,GAAakE,WAAW0Q,qBAAuB7T,EAAQwC,qCAAqCE,gCAAgCiS,GAAc3U,EAAQwC,qCAAqCE,gCAAgCiS,EAAa,GACpO1V,GAAakE,WAAW6Q,cAAgBhU,EAAQwC,qCAAqCG,aAAagS,GAAc3U,EAAQwC,qCAAqCG,aAAagS,EAAa,GACvL1V,GAAakE,WAAWgR,iBAAmBnU,EAAQwC,qCAAqCI,QAAQ+R,GAAc3U,EAAQwC,qCAAqCI,QAAQ+R,EAAa,GAChL1V,GAAakE,WAAWmR,iBAAmBtU,EAAQwC,qCAAqC7D,MAAMgW,GAAc3U,EAAQwC,qCAAqC7D,MAAMgW,EAAa,GAE5K1V,GAAakE,WAAWuQ,gCAAmF,IAAjDzU,GAAakE,WAAWsQ,qBAA6B,GAAK5W,KAAK2V,MAAMvT,GAAakE,WAAWsQ,qBAAuBxU,GAAakE,WAAWV,qBAAuB,KAAS,KAAKgQ,QAAQ,GACnPxT,GAAakE,WAAW2Q,gCAAmF,IAAjD7U,GAAakE,WAAW0Q,qBAA6B,GAAKhX,KAAK2V,MAAMvT,GAAakE,WAAW0Q,qBAAuB5U,GAAakE,WAAWwQ,WAAa,KAAS,KAAKlB,QAAQ,GACzOxT,GAAakE,WAAW8Q,yBAAqE,IAA1ChV,GAAakE,WAAW6Q,cAAsB,GAAKnX,KAAK2V,MAAMvT,GAAakE,WAAW6Q,cAAgB/U,GAAakE,WAAWG,IAAM,KAAS,KAAKmP,QAAQ,GAC7MxT,GAAakE,WAAWiR,4BAA2E,IAA7CnV,GAAakE,WAAWgR,iBAAyB,GAAKtX,KAAK2V,MAAMvT,GAAakE,WAAWgR,iBAAmBlV,GAAakE,WAAWI,OAAS,KAAS,KAAKkP,QAAQ,GACzNxT,GAAakE,WAAWoR,4BAA2E,IAA7CtV,GAAakE,WAAWmR,iBAAyB,GAAKzX,KAAK2V,MAAMvT,GAAakE,WAAWmR,iBAAmBrV,GAAakE,WAAW9E,OAAS,KAAS,KAAKoU,QAAQ,GAqBzNmC,GACO3V,I,+aCtJU4V,G,sIAGb,OACI,kBAACvF,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,UAAW,CAACW,gBAAiBnC,EAAaS,KAAMyD,YAAalE,EAAaS,KAAM4D,cAAe0G,MACvJ,kBAACzC,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,WAAY5D,EAAOuD,iBAAkByB,IAC1D,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,mBAAoBnD,EAAOuD,iBAAkBgI,KAAgCtC,MAAMW,eAAe,OAC9I,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,mBAAoBrD,EAAOuD,iBAAvE,IAA0FgI,KAAgCrC,cAAcU,eAAe,MAAvJ,MAAiK2B,KAAgCpC,wBAAjM,W,GAPgC3C,a,+aCD3BqF,G,sIAIb,OACI,kBAACxF,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACxD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoC,GAA4BtL,EAAQU,eACvE,kBAACmL,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAO6D,mBAAoBoC,S,GAP1CO,a,+aCmCvBsF,G,iCA/BX,WAAYpE,GAAQ,+BACVA,G,6CAKN,OAEI,kBAAC,GAAD,KAEI,oCACI,kBAACqE,GAAA,EAAD,CAAkBC,QAAS,WACvBnF,GAAS9B,KAET,kBAAC,GAAD,OAGJ,kBAACgH,GAAA,EAAD,CAAkBC,QAAS,WACvBnF,GAAS9B,KAET,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAzBgByB,a,4DCDhCyF,GAAclO,aAAWC,iBAkBdkO,GAhBI,WACf,IAAMC,EAAaC,2BAEnB,OACI,kBAAC/F,EAAA,EAAD,CAAMC,MAAO,CAAC3F,cAAe,QACzB,kBAAC,KAAD,CACIqL,QAAS,WACLG,EAAWE,SAASC,iBAAcC,eAEtCjG,MAAO,CAACtC,YAAYpC,IAASC,GAAe,MAC5C,kBAAC2K,GAAA,EAAD,CAAU1F,KAAK,WAAW2F,KAAM,GAAIxK,MAAuB,SAAhBgK,GAAyB5Q,EAAOwB,eAAiBxB,EAAOG,W,2aCVnH,IAEIkR,GAFEC,GAAQC,eACRC,GAAanN,IAAWC,IAAI,UAAUC,MAIvBkN,G,iCAEjB,WAAYpF,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CAACC,SAAUX,GAAWG,GAAiBI,eAAeN,OAFpD,E,yDAKG,IAAD,OACjBwF,GAAsBpF,KAAcyF,iBAAiB,mBAAmB,SAAClX,GACrE,EAAKmS,SAAS,CAACJ,SAAUX,GAAWG,GAAiBI,eAAeN,a,6CAKxEI,KAAc0F,oBAAoBN,M,+BAG5B,IAAD,OACL,OACI,kBAACC,GAAMM,UAAP,CAAiBC,KAAM,SACnB,kBAACP,GAAMQ,OAAP,CACIC,QAAS,CACLC,YAAa,CAACrN,EAAOwB,OAAQxB,EAAOkC,cACpCoL,iBAAkB,CAACtN,EAAOgC,aAC1BuL,WAAYV,GAAahO,EAAOE,YAAc,2BAAQ,kBAAC,GAAD,OAAiB,KACvEyO,kBAAkB,EAClBzR,MAAOf,KAAK0M,MAAM3L,MAAQ,MAAQf,KAAK2M,MAAMC,UAEjD6F,UAAW,kBAAM,EAAK/F,MAAM+F,WAC5B3G,KAAM9L,KAAK0M,MAAM3L,MAAQ,MAAQf,KAAK2M,MAAMC,gB,GA7BnBpB,aCF9BkH,OAPf,YAEI,OAF8C,EAAdvB,WAG5B,kBAAC,GAAD,CAAiBpQ,MAAOgJ,EAAiC0I,UAAW,kBAAC,GAAD,S,0DCTrE,SAASE,GAASC,GACrB,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACZ5W,EAAG8W,SAASF,EAAO,GAAI,IACvBG,EAAGD,SAASF,EAAO,GAAI,IACvBI,EAAGF,SAASF,EAAO,GAAI,KACvB,KCNR,IAkBeK,GAlBc,CACzB,CACIvG,MAAO,MACPb,KAAM,YACNqH,MAAO,GAEX,CACIxG,MAAO,MACPb,KAAM,OACNqH,MAAO,IAEX,CACIxG,MAAO,OACPb,KAAM,MACNqH,OAAQ,ICXZnY,GAAe,CACfoY,WAAY,GACZC,mBAAoB,IA8BTC,GA3BI,SAACC,GAEhB,IAAI5T,EAAQD,EAAQS,WAGpB,GAAa,OAAVR,IAEC3E,GAAaoY,WAAa,GAC1BpY,GAAaqY,mBAAqB,GAE/BrY,IAAa,CAGZ,IAFA,IAAIwY,GAAmB,IAAXD,QAA0BvW,IAAVuW,EAAsB,EAAI5T,EAAMpF,OAASgZ,EACjEE,EAAO7a,KAAK2V,OAAQ5O,EAAMpF,OAASiZ,GZd5C,SAA4BD,GAC/B,OAAQA,GACJ,KAAK,EAEL,KAAM,EACF,OAAQ7O,IAAWC,IAAI,UAAUC,OAASf,EAAOC,gBAAkB,EAAI,EAC3E,KAAK,GACD,OAAQY,IAAWC,IAAI,UAAUC,OAASf,EAAOC,gBAAkB,EAAI,IYOtB4P,CAAmBH,IAC3DzY,EAAI0Y,EAAO1Y,EAAI6E,EAAMpF,OAAQO,GAAG2Y,EACrC3Y,EAAIlC,KAAK2V,MAAMzT,GACfE,GAAaoY,WAAW3Z,KAAKkG,EAAM7E,IAEvC,IAAI,IAAIA,EAAI0Y,EAAQ1Y,EAAI6E,EAAMpF,OAAQO,IAClCE,GAAaqY,mBAAmB5Z,KAAKkG,EAAM7E,IAKvD,OAAOE,I,wbC4BI2Y,G,iCAlDX,WAAYjH,GAAQ,IAAD,sBACf,cAAMA,IAGVkH,SAAW,SAACC,GACR,OAAGA,EAAIrP,EAAcO,eAAiB,IAC3B8O,EAAI,GAGRA,EAAI,IACIA,EAAI,GAERA,GAZI,E,6CAkBf,OACI,kBAAC,WAAD,CAAUC,IAAKlb,KAAKmb,UAChB,kBAAC,OAAD,KACI,kBAAC,QAAD,CACIC,GAAIhU,KAAK0M,MAAMmH,EACfI,GAAG,IACHC,GAAIlU,KAAK0M,MAAMmH,EACfM,GAAG,MACHC,OAAStR,IAAazC,EAAO8B,0BAA4B9B,EAAOO,iBAChEyT,YAAY,MAChB,kBAAC,UAAD,CACIC,GAAItU,KAAK0M,MAAMmH,EACfU,GAAIvU,KAAK0M,MAAM8H,EACfvY,EAAE,KACFoY,YAAY,IACZD,OAAStR,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eAC9DwT,KAAMzU,KAAK0M,MAAMzF,QACrB,kBAAC,QAAD,CACI4M,EAAG7T,KAAK4T,SAAS5T,KAAK0M,MAAMmH,GAC5BW,EAAG,GACHC,KAAO3R,IAAazC,EAAOwB,eAAiBxB,EAAOG,MACnDuH,SAAS,KACTC,WAAW,OACX0M,WAAW,UACW,OAArB1U,KAAK0M,MAAMP,MAAiB,MAAQnM,KAAK0M,MAAMiI,aAAe,MAAQ3U,KAAK0M,MAAMP,MAAMyC,eAAe,a,GA5C9FpD,a,+aCOZoJ,G,iCAEjB,WAAYlI,GAAQ,IAAD,sBACf,cAAMA,IAwEVmI,UAAY,WACR,OAAO,EAAKlI,MAAMmI,QACd,kBAAC,GAAD,CAAoB7N,MAAO,EAAKyF,MAAMzF,MAAO4M,EAAG,EAAKlH,MAAMkH,EAAGW,EAAG,EAAK7H,MAAM6H,EACxDG,aAAc,EAAKhI,MAAMgI,aACzBxI,MAAO,EAAKQ,MAAMR,QAAW,MA3ErD,EAAKQ,MAAQ,CACToI,KAAK,EACLC,KAAK,EACLC,MAAM,EACNpa,KAAM,CACFqa,aAAc5B,GAAW,GAAGD,mBAC5B8B,OAAQ7B,GAAW,GAAGF,WACtBgC,SAAU,CACN,CACIva,KAAM,EAAK6R,MAAM7R,KAAKwa,MAAMzc,KAAK0c,IAAI,EAAK5I,MAAM7R,KAAKN,OAAS,EAAG,OAI7Egb,OAAQ,EACR1B,EAAG,EACHW,EAAG,EACH5H,SAAUX,GAAWG,GAAiBI,eAAeN,MACrD4I,SAAS,EACT3I,MAAO,EACPwI,aAAc,GArBH,E,mDA0BJY,GACXvV,KAAKgN,SAAS,CAAC+H,KAAK,EAAOC,KAAK,EAAOC,MAAM,EAAOH,SAAS,IAC7D9U,KAAKgN,SAAL,QAAgBuI,EAAO5I,OAAQ,IAAO,WAElC3M,KAAKgN,SAAS,CAACuI,OAAQA,EAAOpC,QAAQ,YACP,IAAvBnT,KAAK2M,MAAM4I,OACXvV,KAAKgN,SAAS,CACVnS,KAAM,CACFqa,aAAc5B,GAAWtT,KAAK2M,MAAM4I,QAAQlC,mBAC5C8B,OAAQ7B,GAAWtT,KAAK2M,MAAM4I,QAAQnC,WACtCgC,SAAU,CACN,CACIva,KAAMmF,KAAK0M,MAAM7R,KAAKwa,MAAMzc,KAAK0c,IAAI,EAAI,SAMzDtV,KAAKgN,SAAS,CACNnS,KAAM,CACFqa,aAAc5B,GAAWtT,KAAK2M,MAAM4I,QAAQlC,mBAC5C8B,OAAQ7B,GAAWtT,KAAK2M,MAAM4I,QAAQnC,WACtCgC,SAAU,CACN,CACIva,KAAMmF,KAAK0M,MAAM7R,KAAKwa,MAAMzc,KAAK0c,IAAItV,KAAK0M,MAAM7R,KAAKN,OAASyF,KAAK2M,MAAM4I,OAAQ,eASjHvV,KAAKwV,gB,kCAGGC,GACR,OAAQA,GACJ,IAAK,MACD,OAAOzV,KAAK2M,MAAMoI,IACtB,IAAK,MACD,OAAO/U,KAAK2M,MAAMqI,IACtB,IAAK,OACD,OAAOhV,KAAK2M,MAAMsI,Q,+BAYpB,IAAD,OACCS,EAAW/C,GAAS3S,KAAK0M,MAAMzF,OACrC,OACI,kBAACoE,EAAA,EAAD,CAAMC,MAAO,CAAClD,UAAW,KAErB,kBAACiD,EAAA,EAAD,CAAMC,MAAO,CAAClD,UAAW,IACrB,kBAACuN,GAAA,EAAD,CACIrK,MAAO,CAACzF,aAAc,IACtBhL,KAAMqY,GACN0C,WAAY,gBAAEpc,EAAF,EAAEA,KAAF,OACR,kBAACqc,GAAA,EAAD,CACI7E,QAAS,kBAAM,EAAK8E,eAAetc,IACnCuc,SAAU,EAAKpJ,MAAM4I,SAAW/b,EAAKmT,MAAMwG,MAC3C6C,UAAW,CACP/O,MAAO,EAAKgP,YAAYzc,EAAKmT,OAAS,OAAS7J,IAAazC,EAAOwB,eAAiBxB,EAAOG,MAC3FwH,WAAY,EAAKiO,YAAYzc,EAAKmT,OAAS,MAAQ,OAEvDrB,MAAO,CACH,CACIlG,gBAAiB,EAAK6Q,YAAYzc,EAAKmT,OAAS,EAAKD,MAAMzF,MAASnE,IAAazC,EAAO8B,0BAA4B9B,EAAOO,iBAC3HqI,YAAa,KAEpBzP,EAAKsS,OAGdoK,WAAY,EACZC,YAAY,EACZC,gCAAgC,EAChCC,aAAc,SAAC7c,EAAMyB,GAAP,OAAiBA,EAAMyB,eAI7C,kBAAC,KAAD,CACI7B,KAAMmF,KAAK2M,MAAM9R,KACjB+J,MAAOJ,EAAcO,eACrBsC,OAAQxD,EAAOU,gBACf+R,WAAW,GACXC,YAAY,GACZC,mBAAmB,EACnBC,mBAAmB,EACnBC,cAAe,EACfC,YAAa,CACTvR,gBAAiBtC,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eACtE2V,uBAAwB9T,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eAC7E4V,qBAAsB/T,IAAazC,EAAOgC,wBAA0BhC,EAAOY,eAC3E6V,mBAA4C9Z,IAA7BgD,KAAK0M,MAAMoK,cAA8B,EAAI9W,KAAK0M,MAAMoK,cACvE7P,MAAO,eAAC8P,EAAD,uDAAW,EAAX,cAAyBrB,EAASzZ,EAAlC,KAAwCyZ,EAAS1C,EAAjD,KAAuD0C,EAASzC,EAAhE,MAAsEnQ,IAAuB,EAAViU,EAAnF,MACPC,WAAY,kBAAkBlU,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAC1EyW,aAAc,CACVhb,EAAG,IACHoY,YAAa,IACbD,OAAQpU,KAAK0M,MAAMzF,OAEvBiQ,wBAAyB,CACrB9C,OAAQtR,IAAazC,EAAO8B,0BAA4B9B,EAAOO,mBAIvE0K,MAAO,CACH6L,eAAgB,EAChBjR,aAAc,IAGlB2O,UAAW7U,KAAK6U,UAEhBuC,iBAAkB,SAACvc,GAEI,EAAK8R,MAAMkH,IAAMhZ,EAAKgZ,GAClC,EAAKlH,MAAM6H,IAAM3Z,EAAK2Z,EAGzB,EAAKxH,SAAS,CAAC6G,EAAGhZ,EAAKgZ,EAAG1H,MAAOtR,EAAKsR,MAAOwI,aAAc,EAAKhI,MAAM9R,KAAKqa,aAAara,EAAKI,OAAQuZ,EAAG3Z,EAAK2Z,EAAGM,SAAU,EAAKnI,MAAMmI,UAErI,EAAK9H,SAAS,CAAC6G,EAAGhZ,EAAKgZ,EAAG1H,MAAOtR,EAAKsR,MAAOwI,aAAc,EAAKhI,MAAM9R,KAAKqa,aAAara,EAAKI,OAAQuZ,EAAG3Z,EAAK2Z,EAAGM,SAAS,Y,GA5J5GuC,iB,+aCTpBC,G,iCAEjB,WAAY5K,GAAQ,+BACVA,G,6CAKN,OACI,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,UACxD,kBAACyG,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAc5I,KAAK0M,MAAM3L,OAC9C,kBAAC,GAAD,CAAakG,MAAOjH,KAAK0M,MAAMzF,MAAOpM,KAAMmF,KAAK0M,MAAM7R,OACvD,kBAAC0Q,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmB7I,KAAK0M,MAAM6K,kB,GAZvB/L,a,mcCDtBgM,G,iCAEjB,WAAY9K,GAAQ,+BACVA,G,6CAIN,OACI,kBAACrB,EAAA,EAAD,CAAMC,MAAOtG,EAAOoE,iBAChB,kBAACiC,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOqE,kBAAmB,CAAEjE,gBAAiBpF,KAAK0M,MAAMzF,UACtE,kBAACsE,EAAA,EAAD,CAAMD,MAAOtG,EAAOsE,aAActJ,KAAK0M,MAAM3L,Y,GAVfyK,a,+aCiK/BiM,G,iCAtJX,WAAY/K,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CACToI,KAAK,EACLC,KAAK,EACLC,MAAM,EACNpa,KAAM,EAAK6R,MAAM7R,KAAKwa,MAAMzc,KAAK0c,IAAI,EAAK5I,MAAM7R,KAAKN,OAAS,EAAG,IACjEgb,OAAQ,EACRJ,OAAQ7B,GAAW,GAAGF,WACtBS,EAAG,EACHW,EAAG,EACHM,SAAS,EACT3I,MAAO,GAZI,E,mDAgBJoJ,GACXvV,KAAKgN,SAAS,CAAC+H,KAAK,EAAOC,KAAK,EAAOC,MAAM,EAAOH,SAAS,IAC7D9U,KAAKgN,SAAL,QAAgBuI,EAAO5I,OAAQ,IAAO,WAElC3M,KAAKgN,SAAS,CAACuI,OAAQA,EAAOpC,QAAQ,YACP,IAAvBnT,KAAK2M,MAAM4I,OACXvV,KAAKgN,SAAS,CAACnS,KAAMmF,KAAK0M,MAAM7R,OAAO,WACnCmF,KAAKgN,SAAS,CAACmI,OAAQ7B,GAAWtT,KAAK2M,MAAM4I,QAAQnC,gBAGzDpT,KAAKgN,SAAS,CAACnS,KAAMmF,KAAK0M,MAAM7R,KAAKwa,MAAMzc,KAAK0c,IAAItV,KAAK0M,MAAM7R,KAAKN,OAASyF,KAAK2M,MAAM4I,OAAQ,MAAM,WAClGvV,KAAKgN,SAAS,CAACmI,OAAQ7B,GAAWtT,KAAK2M,MAAM4I,QAAQnC,sBAKrEpT,KAAKwV,gB,kCAGGC,GACR,OAAQA,GACJ,IAAK,MACD,OAAOzV,KAAK2M,MAAMoI,IACtB,IAAK,MACD,OAAO/U,KAAK2M,MAAMqI,IACtB,IAAK,OACD,OAAOhV,KAAK2M,MAAMsI,Q,sCAIdyC,GAAwB,IAAhBX,EAAe,uDAAL,GAC1BY,EAAShF,GAAS+E,EAAO,IACzBE,EAASjF,GAAS+E,EAAO,IACzBG,EAASlF,GAAS+E,EAAO,IAC7B,MAAO,CAAC,QAAQC,EAAO1b,EAAhB,KAAsB0b,EAAO3E,EAA7B,KAAmC2E,EAAO1E,EAA1C,KAAgD8D,EAAhD,YAAoEa,EAAO3b,EAA3E,KAAiF2b,EAAO5E,EAAxF,KAA8F4E,EAAO3E,EAArG,KAA2G8D,EAA3G,YAA+Hc,EAAO5b,EAAtI,KAA4I4b,EAAO7E,EAAnJ,KAAyJ6E,EAAO5E,EAAhK,KAAsK8D,EAAtK,O,+BAGD,IAAD,OAECrB,EAAW/C,GAAS3S,KAAK0M,MAAMzF,OAC/ByQ,OAA+B1a,IAAtBgD,KAAK0M,MAAMgL,OAAuB,CAAC,QAAQhC,EAASzZ,EAAlB,KAAwByZ,EAAS1C,EAAjC,KAAuC0C,EAASzC,EAAhD,iBAAmEyC,EAASzZ,EAA5E,KAAkFyZ,EAAS1C,EAA3F,KAAiG0C,EAASzC,EAA1G,iBAA6HyC,EAASzZ,EAAtI,KAA4IyZ,EAAS1C,EAArJ,KAA2J0C,EAASzC,EAApK,UAAiLjT,KAAK0M,MAAMgL,OACvOI,EAAO9X,KAAK0M,MAAMqL,UAClBC,EAAU,CAACjQ,SAAU,GAAI0M,KAAO3R,IAAazC,EAAOwB,eAAiBxB,EAAOG,OAC5EyX,EAAU,CACZxD,KAAM3R,IAAazC,EAAO8B,0BAA4B9B,EAAOO,iBAC7DsX,gBAAiB,CAAC,EAAG,GACrBC,cAAe,IAGnB,OACI,kBAAC9M,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMC,MAAO,CAAClD,UAAW,KACrB,kBAACuN,GAAA,EAAD,CACIrK,MAAO,CAACzF,aAAc,IACtBhL,KAAMqY,GACN0C,WAAY,gBAAEpc,EAAF,EAAEA,KAAF,OACR,kBAACqc,GAAA,EAAD,CACI7E,QAAS,kBAAM,EAAK8E,eAAetc,IACnCuc,SAAU,EAAKpJ,MAAM4I,SAAW/b,EAAKmT,MAAMwG,MAC3C6C,UAAW,CACP/O,MAAO,EAAKgP,YAAYzc,EAAKmT,OAAS,OAAS7J,IAAazC,EAAOwB,eAAiBxB,EAAOG,MAC3FwH,WAAY,EAAKiO,YAAYzc,EAAKmT,OAAS,MAAQ,OAEvDrB,MAAO,CACH,CACIlG,gBAAiB,EAAK6Q,YAAYzc,EAAKmT,OAAS,EAAKD,MAAMzF,MAASnE,IAAazC,EAAO8B,0BAA4B9B,EAAOO,iBAC3HqI,YAAa,KAEpBzP,EAAKsS,OAGdoK,WAAY,EACZC,YAAY,EACZC,gCAAgC,EAChCC,aAAc,SAAC7c,EAAMyB,GAAP,OAAiBA,EAAMyB,eAG7C,kBAAC2O,EAAA,EAAD,CAAMC,MAAO,CAAC3F,cAAe,MAAOyC,UAAW,GAAIf,OAAQ,MACvD,kBAACgE,EAAA,EAAD,CAAMC,MAAO,CAAChG,KAAM,EAAG0D,WAAY,KAC/B,kBAAC,KAAD,CACIsC,MAAO,CAAChG,KAAM,GACd8S,qBAAsB,CAACtR,IAAK,GAAI0C,OAAQ,IACxC3O,KAAMmF,KAAK2M,MAAM9R,KACjBid,KAAMA,EACNJ,OAAQA,EACRW,MAAOC,KACPC,kBAAmB,IACnBC,cAAe,EACfC,IAAKR,GAEL,kBAAC,KAAD,CACIS,UAAWC,KAAKC,UAAUC,WAC1BC,YAAY,EACZL,IAAKR,MAIjB,kBAAC,KAAD,CACI3M,MAAO,CAAC3E,SAAU,WAAYG,IAAK,EAAG0C,OAAQ,GAC9C3O,KAAMke,KAAiBC,kBAAkBhZ,KAAK2M,MAAM9R,KAAMid,GAC1DmB,aAAc,CAACnS,IAAK,GAAI0C,OAAQ,IAChCgP,cAAe,EACfC,IAAK,CACD1Q,SAAU,GACV0M,KAAO3R,IAAazC,EAAOwB,eAAiBxB,EAAOG,MACnD0Y,kBAAmB,WACnBC,cAAe,QAI3B,kBAAC,KAAD,CACI7N,MAAO,CAACtC,WAAY,GAAIZ,UAAW,GAAIf,OAAQ,IAC/CxM,KAAMmF,KAAK2M,MAAM9R,KACjB2d,cAAe,EACfY,YAAa,SAACne,GAAD,OAAW,EAAK0R,MAAM9R,KAAKI,GAAO8B,MAC/Ckc,aAAc,CAAClS,KAAM,GAAIsS,MAAO,IAChCZ,IAAKT,IAIT,kBAAC3M,EAAA,EAAD,CAAMC,MAAOtG,EAAOmE,yBACfnJ,KAAK0M,MAAM4M,OAAOC,KAAI,SAACzN,EAAM7Q,GAAP,OACnB,kBAAC,GAAD,CACI8F,MAAO+K,EACP7E,MAAOyQ,EAAOzc,c,GA7IX2Q,IAAMyL,e,ybCDjC3F,GCHkB8H,G,iCAElB,WAAY9M,GAAQ,+BACVA,G,6CAGA,IAAD,OACL,OACI,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAAC1G,MAAO,OAAQW,WAAY,WACrC,kBAAC,KAAD,CACIkM,KAAM5N,EAAOS,eACbM,MAAO,EACP6P,KAAMzU,KAAK0M,MAAMP,MACjBxE,QAAS,GACT8R,UAAWzZ,KAAK0M,MAAMzF,MACtByS,oBAAqB,kBAAM/b,QAAQC,IAAI,wBACvCwH,gBAAkBtC,IAAazC,EAAO8B,0BAA4B9B,EAAOO,mBAErE,SAAC6T,GAAD,OACI,kBAAClJ,EAAA,EAAD,CAAMD,MAAO,CAACrE,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,QAC7D,EAAKkM,MAAMP,MADhB,a,GAnBmBX,a,+aDsHhCmO,G,iCA/GX,WAAYjN,GAAQ,IAAD,sBACf,cAAMA,IACDC,MAAQ,CACT9R,KAAMyT,KACNrH,MAAOhE,EAAaO,OACpB2I,MAAO,EACPyN,0BAA0B,EAC1BC,gBAAiB5P,GACjB6P,sBAAuB5P,GAA0BI,qBARtC,E,8DAaXtK,KAAK2M,MAAMoN,mBAQX/Z,KAAKgN,SAAS,CACV+M,oBAAoB,EACpBF,gBAAiB5P,GACjB6P,sBAAuB5P,GAA0BI,sBAVrDtK,KAAKgN,SAAS,CACV+M,oBAAoB,EACpBF,gBAAiB5P,GACjB6P,sBAAuB5P,GAA0BK,0B,0CAaxC,IAAD,OAChBmH,GAAsBpF,KAAcyF,iBAAiB,mBAAmB,SAAClX,GACrE,EAAKmf,kB,6CAKT1N,KAAc0F,oBAAoBN,M,mCAIlC1R,KAAKgN,SAAS,CAACnS,KAAMyT,S,+BAGf,IAAD,OACL,OACI,kBAAC,GAAD,KACQ,oCACI,kBAAC,GAAD,MAEA,kBAACjD,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACxD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcqB,IACnC,kBAAC,GAAD,CAAkBkC,MAAOnM,KAAK2M,MAAM9R,KAAKsP,kBAAmBlD,MAAOjH,KAAK2M,MAAM1F,QAC9E,kBAACsE,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmBqB,GAA0BC,oBAGrE,kBAAC,GAAD,CACI2J,IAAK9T,KAAK2M,MAAM9R,KAChBkG,MAAOkJ,GACPhD,MAAOjH,KAAK2M,MAAM1F,MAClBpM,KAAMmF,KAAK2M,MAAM9R,KAAKuP,gBACtBmN,YAAarN,GAA0BE,kBAE3C,kBAAC,GAAD,CACI0J,IAAK9T,KAAK2M,MAAM9R,KAChBkG,MAAOkJ,GACPhD,MAAOjH,KAAK2M,MAAM1F,MAClBpM,KAAMmF,KAAK2M,MAAM9R,KAAKwP,eACtBkN,YAAarN,GAA0BG,iBAE3C,kBAACgB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,UACxD,kBAACyG,EAAA,EAAD,CAAMD,MAAOtG,EAAO4D,YAAa5I,KAAK2M,MAAMkN,iBAC5C,kBAACxO,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAC3F,cAAe,SAC1B,kBAAC4F,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO8D,+BAChBmC,IAEL,kBAACgP,GAAA,EAAD,CACInG,IAAK,EACLxI,MAAO,CAACtC,WAAY,GACpB+D,cAAe,kBAAM,EAAKmN,2BAC1B/N,MAAOnM,KAAK2M,MAAMoN,sBAItB/Z,KAAK2M,MAAMoN,mBACP,kBAAC,GAAD,CACIjG,IAAK,EACL7M,MAAOhE,EAAaO,OACpBkU,OAAQ,CAACzU,EAAaC,MAAOD,EAAaM,KAAMN,EAAaU,OAAQV,EAAaQ,KAAMR,EAAaO,OAAQP,EAAaS,MAC1HqU,UAAW,CAAC,SAAU,cAAe,UAAW,UAAW,UAAU,UACrEuB,OAAQpP,GAA0BO,SAClC5P,KAAMmF,KAAK2M,MAAM9R,KAAKwT,gCAE1B,kBAAC,GAAD,CACIyF,IAAK,EACL7M,MAAOhE,EAAaO,OACpBkU,OAAQ,CAACzU,EAAaC,MAAOD,EAAaM,KAAMN,EAAaU,OAAQV,EAAaQ,KAAMR,EAAaO,OAAQP,EAAaS,MAC1HqU,UAAW,CAAC,SAAU,cAAe,UAAW,UAAW,UAAU,UACrEuB,OAAQpP,GAA0BO,SAClC5P,KAAMmF,KAAK2M,MAAM9R,KAAKuT,sBAGlC,kBAAC7C,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmB7I,KAAK2M,MAAMmN,8B,GAxG9CtO,aEFjB2O,OAPf,YAEI,OAFoC,EAAdhJ,WAGlB,kBAAC,GAAD,CAAiBpQ,MAAOgJ,EAAwB0I,UAAW,kBAAC,GAAD,S,+aCH9C2H,G,sIAGb,OACI,kBAAC/O,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCrR,WAAWwQ,WAAWd,eAAe,MAAvI,KAAgJ2B,KAAgCrR,WAAWyQ,sBAAsBf,eAAe,MAAhO,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCrR,WAAW0Q,qBAAqBhB,eAAe,MAAlJ,MAA4J2B,KAAgCrR,WAAW2Q,gCAAgCjB,eAAe,MAAtP,W,GAP0CpD,a,+aCArC6O,G,sIAGb,OACI,kBAAChP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCrR,WAAWV,qBAAqBoQ,eAAe,MAAjJ,KAA0J2B,KAAgCrR,WAAWqQ,sBAAsBX,eAAe,MAA1O,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCrR,WAAWsQ,qBAAqBZ,eAAe,MAAlJ,MAA4J2B,KAAgCrR,WAAWuQ,gCAAgCb,eAAe,MAAtP,W,GAPyCpD,a,+aCApC8O,G,sIAGb,OACI,kBAACjP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCrR,WAAWG,IAAIuP,eAAe,MAAhI,KAAyI2B,KAAgCrR,WAAW4Q,eAAelB,eAAe,MAAlN,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCrR,WAAW6Q,cAAcnB,eAAe,MAA3I,MAAqJ2B,KAAgCrR,WAAW8Q,yBAAyBpB,eAAe,MAAxO,W,GAPmCpD,a,+aCA9B+O,G,sIAGb,OACI,kBAAClP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCrR,WAAWI,OAAOsP,eAAe,MAAnI,KAA4I2B,KAAgCrR,WAAW+Q,kBAAkBrB,eAAe,MAAxN,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCrR,WAAWgR,iBAAiBtB,eAAe,MAA9I,MAAwJ2B,KAAgCrR,WAAWiR,4BAA4BvB,eAAe,MAA9O,W,GAPsCpD,a,+aCAjCgP,G,sIAGb,OACI,kBAACnP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCrR,WAAW9E,OAAOwU,eAAe,MAAnI,KAA4I2B,KAAgCrR,WAAWkR,kBAAkBxB,eAAe,MAAxN,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCrR,WAAWmR,iBAAiBzB,eAAe,MAA9I,MAAwJ2B,KAAgCrR,WAAW9E,OAAOwU,eAAe,MAAzN,W,GAPsCpD,aCHlDxQ,GAAe,CACfmP,kBAAmB,GAaRsQ,GAV+B,WAO1C,OANAzf,GAAamP,mBAAqBvR,KAAK2V,MAAM7O,EAAQQ,aAAaL,eACzDvG,QAAQ8S,GAAiBI,eAAezO,0BAA0B2B,EAAQQ,aAAaL,eACvFvG,QAAQ8S,GAAiBI,eAAezO,0BAA0BxD,OAAS,GAAKmF,EAAQQ,aACxFN,SAAStG,QAAQ8S,GAAiBI,eAClC5S,oBAAoB8F,EAAQQ,aAAaN,SAAStG,QAAQ8S,GAAiBI,eAC3E5S,oBAAoBW,OAAS,GAAK,KAAO,KAAKiU,QAAQ,GACxDxT,I,+aCRU0f,G,sIAGb,OACI,kBAACrP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCxB,sBAAsBH,eAAe,MAAvI,KAAgJ2B,KAAgCtB,sBAAsBL,eAAe,MAArN,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCpB,qBAAqBP,eAAe,MAAvI,MAAiJ2B,KAAgClB,+BAA+BT,eAAe,MAA/N,W,GAPqCpD,a,+aCkBjDkG,GClBiBiJ,G,sIAGb,OACI,kBAACtP,EAAA,EAAD,CAAOC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACzD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcoB,IACnC,kBAACuB,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOmD,qBAAsBoI,KAAgCvB,uBAAuBJ,eAAe,MAAxI,KAAiJ2B,KAAgCrB,uBAAuBN,eAAe,MAAvN,MACA,kBAACrD,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAOiD,eAAgBjD,EAAOqD,qBAA5C,IAAmEkI,KAAgCnB,sBAAsBR,eAAe,MAAxI,MAAkJ2B,KAAgCjB,gCAAgCV,eAAe,MAAjO,W,GAPsCpD,a,+aDkNvCoP,G,iCA5LX,aAAe,IAAD,sBACV,gBACKjO,MAAQ,CACT9R,KAAM0V,KACNtJ,MAAOhE,EAAaS,KACpByI,MAAO,EACP0O,gCAAgC,EAChCC,uBAAwBpQ,GACxBqQ,6BAA8BpQ,GAAgCC,0BAC9DoQ,gCAAgC,EAChCC,uBAAwBvQ,GACxBwQ,6BAA8BvQ,GAAgCG,2BAXxD,E,oEAgBN9K,KAAK2M,MAAMkO,+BAQX7a,KAAKgN,SAAS,CACV6N,gCAAgC,EAChCC,uBAAwBpQ,GACxBqQ,6BAA8BpQ,GAAgCC,4BAVlE5K,KAAKgN,SAAS,CACV6N,gCAAgC,EAChCC,uBAAwBpQ,GACxBqQ,6BAA8BpQ,GAAgCE,gC,sDAclE7K,KAAK2M,MAAMqO,+BAQXhb,KAAKgN,SAAS,CACVgO,gCAAgC,EAChCC,uBAAwBvQ,GACxBwQ,6BAA8BvQ,GAAgCG,4BAVlE9K,KAAKgN,SAAS,CACVgO,gCAAgC,EAChCC,uBAAwBvQ,GACxBwQ,6BAA8BvQ,GAAgCI,gC,0CAarD,IAAD,OAChB2G,GAAsBpF,KAAcyF,iBAAiB,mBAAmB,SAAClX,GACrE,EAAKmf,kB,6CAKT1N,KAAc0F,oBAAoBN,M,mCAIlC1R,KAAKgN,SAAS,CAACnS,KAAM0V,S,+BAGf,IAAD,OACL,OACI,kBAAC,GAAD,KACI,oCACI,kBAAC,GAAD,MAEA,kBAAClF,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACxD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAc8B,IACnC,kBAAC,GAAD,CAAkByB,MAAOnM,KAAK2M,MAAM9R,KAAKsP,kBAAmBlD,MAAOjH,KAAK2M,MAAM1F,QAC9E,kBAACsE,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmB8B,GAAgCR,oBAG3E,kBAACkB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOP,YACxD,kBAAC8G,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO4D,aAAcqB,IACnC,kBAAC,GAAD,CAAkBkC,MAAOsO,KAAwCtQ,kBAAmBlD,MAAOjH,KAAK2M,MAAM1F,QACtG,kBAACsE,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmBqB,GAA0BM,+BAGrE,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,CACIsJ,IAAK9T,KAAK2M,MAAM9R,KAChBkG,MAAO2J,GACPzD,MAAOjH,KAAK2M,MAAM1F,MAClBpM,KAAMmF,KAAK2M,MAAM9R,KAAKuP,gBACtBmN,YAAa5M,GAAgCP,kBAEjD,kBAAC,GAAD,CACI0J,IAAK9T,KAAK2M,MAAM9R,KAChBkG,MAAO2J,GACPzD,MAAOjH,KAAK2M,MAAM1F,MAClBpM,KAAMmF,KAAK2M,MAAM9R,KAAKwP,eACtBkN,YAAa5M,GAAgCN,iBAEjD,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,kBAACgB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,UACxD,kBAACyG,EAAA,EAAD,CAAMD,MAAOtG,EAAO4D,YAAa5I,KAAK2M,MAAMmO,wBAC5C,kBAACzP,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAC3F,cAAe,SAC1B,kBAAC4F,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO8D,+BAChBmC,IAEL,kBAACgP,GAAA,EAAD,CACInG,IAAK,EACLxI,MAAO,CAACtC,WAAY,GACpB+D,cAAe,kBAAM,EAAKoO,iCAC1BhP,MAAOnM,KAAK2M,MAAMkO,kCAItB7a,KAAK2M,MAAMkO,+BACP,kBAAC,GAAD,CACI/G,IAAK,EACL7M,MAAOhE,EAAaS,KACpBgU,OAAQ,CAACzU,EAAaO,OAAQP,EAAaS,MAC3CqU,UAAW,CAAC,OAAQ,UACpBuB,OAAQ3O,GAAgC3L,OACxCnE,KAAMmF,KAAK2M,MAAM9R,KAAKgQ,8BAE1B,kBAAC,GAAD,CACIiJ,IAAK,EACL7M,MAAOhE,EAAaS,KACpBgU,OAAQ,CAACzU,EAAaO,OAAQP,EAAaS,MAC3CqU,UAAW,CAAC,OAAQ,UACpBuB,OAAQ3O,GAAgC3L,OACxCnE,KAAMmF,KAAK2M,MAAM9R,KAAKgU,oBAGlC,kBAACtD,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmB7I,KAAK2M,MAAMoO,+BAGtD,kBAAC1P,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,UACxD,kBAACyG,EAAA,EAAD,CAAMD,MAAOtG,EAAO4D,YAAa5I,KAAK2M,MAAMsO,wBAC5C,kBAAC5P,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAC3F,cAAe,SAC1B,kBAAC4F,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO8D,+BAChBmC,IAEL,kBAACgP,GAAA,EAAD,CACInG,IAAK,EACLxI,MAAO,CAACtC,WAAY,GACpB+D,cAAe,kBAAM,EAAKqO,iCAC1BjP,MAAOnM,KAAK2M,MAAMqO,kCAItBhb,KAAK2M,MAAMqO,+BACP,kBAAC,GAAD,CACIlH,IAAK,EACL7M,MAAOhE,EAAaS,KACpBgU,OAAQ,CAACzU,EAAaO,OAAQP,EAAaS,MAC3CqU,UAAW,CAAC,QAAS,UACrBuB,OAAQ3O,GAAgC1L,OACxCpE,KAAMmF,KAAK2M,MAAM9R,KAAKkQ,8BAE1B,kBAAC,GAAD,CACI+I,IAAK,EACL7M,MAAOhE,EAAaS,KACpBgU,OAAQ,CAACzU,EAAaO,OAAQP,EAAaS,MAC3CqU,UAAW,CAAC,QAAS,UACrBuB,OAAQ3O,GAAgC1L,OACxCpE,KAAMmF,KAAK2M,MAAM9R,KAAKiU,oBAGlC,kBAACvD,EAAA,EAAD,CAAMD,MAAOtG,EAAO6D,kBAAmB7I,KAAK2M,MAAMuO,qC,GApLpC1P,aEZvB6P,OAPf,YAEI,OAF0C,EAAdlK,WAGxB,kBAAC,GAAD,CAAiBpQ,MAAOgJ,EAA6B0I,UAAW,kBAAC,GAAD,S,oBCCzD6I,GAXI,CACf1b,SAAU,6GACVC,eAAgB,qHAChBvG,QAAS,mGACTiiB,gBAAiB,gDACjBC,OAAQ,4CACRC,WAAY,yDACZ5gB,KAAM,sDACN6gB,QAAS,iECLAC,GAAY,CACrB,CACIC,KAAM,yBACN7a,MAAOmK,GACPqM,YAAapM,GACb0Q,IAAKP,GAAWC,iBAEpB,CACIK,KAAM,eACN7a,MAAOmK,GACPqM,YAAapM,GACb0Q,IAAKP,GAAWE,QAEpB,CACII,KAAM,gBACN7a,MAAOmK,GACPqM,YAAapM,GACb0Q,IAAKP,GAAWI,SAEpB,CACIE,KAAM,MACN7a,MAAOmK,GACPqM,YAAapM,GACb0Q,IAAKP,GAAWG,YAEpB,CACIG,KAAM,gBACN7a,MAAOmK,GACPqM,YAAapM,GACb0Q,IAAKP,GAAWzgB,O,ybCuCTihB,G,iCA1DX,WAAYpP,GAAQ,+BACVA,G,6CAKN,OACI,kBAAC,GAAD,KACI,oCACI,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,QAAS,CACjE2E,WAAY,EACZxD,YAAa,EACb0H,aAAc,KAEd,kBAACpC,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO+D,kBAChBa,IAIT,kBAACyB,EAAA,EAAD,CAAMC,MAAO,CAACtG,EAAOyC,YAAazC,EAAO6C,WAAY7C,EAAOF,QAAS,CACjE2E,WAAY,EACZxD,YAAa,EACb0H,aAAc,KAEd,kBAAC,KAAKoO,QAAN,KACI,kBAAC,KAAKC,UAAN,CAAgB1Q,MAAO,CAACrE,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,QAAU0K,IAElFyQ,GAAUpC,KAAI,SAAC/f,EAAMsB,GAAP,OACV,oCACI,kBAAC,KAAKmhB,KAAN,CACIC,WAAY,CAACjV,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OACjEO,MAAOvH,EAAKuH,MACZob,iBAAkB,CAAClV,MAAQnE,IAAazC,EAAOwB,eAAiBxB,EAAOG,OACvE+W,YAAa/d,EAAK+d,YAClBvG,QAAS,kBC3C5B6K,ED2C2CriB,EAAKqiB,IC1CrEO,KAAQC,QAAQR,GAAKS,MAAK,SAAArgB,GAAC,OAAI,iBACxB,EAFJ,IAAkB4f,GD4CmB9U,KAAM,kBAAM,kBAAC,KAAKwV,KAAN,CAAWtV,MAAQnE,IAAazC,EAAO4B,eAAiB5B,EAAOK,MAAQkb,KAAMpiB,EAAKoiB,QAC9FvC,MAAO,kBAAM,kBAAC,KAAKkD,KAAN,CAAWtV,MAAQnE,IAAazC,EAAO4B,eAAiB5B,EAAOK,MAAQkb,KAAK,qBAE7F,kBAACY,GAAA,EAAD,CAASC,OAAO,SAMhC,kBAAClR,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO6D,iBAAkB,CAAC5B,MAAQnE,IAAazC,EAAO4B,eAAiB5B,EAAOK,SACvFkJ,EAAe,MAAQA,GAE5B,kBAAC2B,EAAA,EAAD,CAAMD,MAAO,CAACtG,EAAO6D,iBAAkB,CAACT,UAAW,EAAGnB,MAAQnE,IAAazC,EAAO4B,eAAiB5B,EAAOK,SACrG,uBAAsBkJ,U,GAlDvB4B,aECbkR,OAPf,YAEI,OAF8B,EAAbvL,WAGb,kBAAC,GAAD,CAAiBpQ,MAAOgJ,EAAmB0I,UAAW,kBAAC,GAAD,S,+bCU9D,IAQIkK,GAAcC,GARZC,GAASC,eAITC,GAFarY,IAAWC,IAAI,UAAUC,OAERf,EAAOE,YAEvCkN,GAAclO,aAAWC,iBAIRga,G,iCAGjB,WAAYtQ,GAAQ,+BACVA,G,yDAINiQ,GAAe5Z,aAAWka,mBAAkB,YAAqB,EAAlBhM,YAC3CiM,KAAQC,YAEZP,GAAelY,IAAWqN,iBAAiB,UAAU,YAAoB,EAAlBqL,OAAkB,EAAVC,OAC3DH,KAAQC,c,6CAKZR,GAAaW,SACbV,GAAaU,W,+BAIb,OACI,kBAAC,qBAAD,KACI,kBAACC,GAAA,UAAD,MACA,kBAACC,GAAA,EAAD,CACIC,IAAK9R,GACLL,MAAOtG,EAAOG,MACd,kBAAC0X,GAAO5K,UAAR,CACIyL,iBAAiB,SACjBC,qBAAsB,CAClBC,gBAAiC,SAAhB3M,GAAyB5Q,EAAOuC,4BAA8BvC,EAAOmB,mBACtFqc,kBAAmC,SAAhB5M,GAAyB5Q,EAAO6B,4BAA8B7B,EAAOM,mBACxFmd,sBAAuC,SAAhB7M,GAAyB5Q,EAAOwC,kCAAoCxC,EAAOoB,yBAClGsc,sBAAuC,SAAhB9M,GAAyB5Q,EAAOgC,wBAA0BhC,EAAOY,gBAE5F+c,WAAYjB,GAAgB,YAAc,QAC1CkB,YAAa,CAAC,CAACrZ,MAAOf,EAAOG,YAAaka,iBAAkC,SAAhBjN,GAAyB5Q,EAAO8B,0BAA4B9B,EAAOO,iBAC3HwE,gBAAiC,SAAhB6L,GAAyB5Q,EAAOgC,wBAA0BhC,EAAOY,iBACtFkd,aAAcpB,GAAgB,cAAgB1c,EAAOkB,mBAErD,kBAACsb,GAAO1K,OAAR,CAAerG,KAAM/B,EACN0I,UAAWC,KAC1B,kBAACmK,GAAO1K,OAAR,CAAerG,KAAM/B,EAAwB0I,UAAW0H,KACxD,kBAAC0C,GAAO1K,OAAR,CAAerG,KAAM/B,EAA6B0I,UAAW4I,KAC7D,kBAACwB,GAAO1K,OAAR,CAAerG,KAAM/B,EAAmB0I,UAAWiK,Y,GA7C9BrF,iBCRvC+G,GAAe,SAACvC,GAAD,OACjBwC,MAAMxC,GACDS,MAAK,SAAAgC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC3ChC,MAAK,SAAAgC,GAAG,OAAIA,EAAII,UAChBpC,MAAK,SAAAgC,GAAG,OAAIA,EAAG,SAEXK,GAAuB,kBAAMP,GAAa9C,GAAW1b,WAErDgf,GAA6B,kBAAMR,GAAa9C,GAAWzb,iBChBzD,SAASgf,KAEpB,OACI,kBAAC,IAAD,CAAOC,UAAWF,KACb,YAA6B,IAA3B/jB,EAA0B,EAA1BA,KAAMkkB,EAAoB,EAApBA,IACL,OADyB,EAAfC,UACY,kBAAC,GAAD,MAClBD,EAAY,kBAAC,GAAD,OACZlkB,GAAM6E,EAAQI,yBAAyBjF,GAGvC,kBAAC,IAAD,CAAOikB,UAAWH,KACb,YAA6B,IAA3B9jB,EAA0B,EAA1BA,KAAMkkB,EAAoB,EAApBA,IACL,OADyB,EAAfC,UACY,kBAAC,GAAD,MAClBD,EAAY,kBAAC,GAAD,OACZlkB,GAAM6E,EAAQO,mBAAmBpF,GAGjC,kBAAC,GAAD,cAnBhCokB,2B,sECfI,kBAAmBC,WACrB9B,OAAOrL,iBAAiB,QAAQ,WAC9BmN,UAAUC,cACPC,SAAS,oDAAqD,CAAEC,MAAO,gCACvE/C,MAAK,SAAUgD,OAGfC,OAAM,SAAUC,GACf7hB,QAAQ2hB,KAAK,oCAAqCE,W","file":"static/js/app.3ff283f7.chunk.js","sourcesContent":["/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 30/01/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\n\nexport function calculateDifferenceInDaysFromString(date1,date2){\n    const diffTime = Math.abs(date1 - date2);\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n}\n\nexport function daysFromDay0() {\n    return calculateDifferenceInDaysFromString(new Date('2020-12-15T00:00:00'), Date.now());\n}\n\nexport function compareDateUsingDaysFromDay0(daysFromStart, dateString) {\n    const diffFromStart = calculateDifferenceInDaysFromString(new Date('2020-12-15T00:00:00'), new Date(dateString));\n    return daysFromStart === diffFromStart;\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 30/01/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nexport default class DeliveryData {\n    regions = [];\n\n    pushToRegion = (item) => {\n        this.regions.push(item);\n    }\n\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 30/01/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nexport default class DeliveryAttrs {\n    region = '';\n    delivery_cumulative = [0];\n    delivery_variation = [0];\n    producer_cumulative = {\n        pfizer: [0],\n        astrazeneca: [0],\n        moderna: [0],\n        johnson: [0],\n        sputnik: [0],\n        others: [0]\n    }\n\n    setRegion = (region) => {\n        this.region = region;\n    }\n\n    addCumulative = (item) => {\n        this.delivery_cumulative.push(this.delivery_cumulative[this.delivery_cumulative.length -1] + item);\n    }\n\n    addVariation = (item) => {\n        this.delivery_variation.push(item);\n    }\n\n    addPfizerCumulative = (pfizer=0, astrazeneca=0, moderna=0, johnson=0, sputnik=0, other=0) =>{\n        this.producer_cumulative.pfizer.push(this.producer_cumulative.pfizer[this.producer_cumulative.pfizer.length - 1] + pfizer);\n        this.producer_cumulative.astrazeneca.push(this.producer_cumulative.astrazeneca[this.producer_cumulative.astrazeneca.length - 1] + astrazeneca);\n        this.producer_cumulative.moderna.push(this.producer_cumulative.moderna[this.producer_cumulative.moderna.length - 1] + moderna);\n        this.producer_cumulative.johnson.push(this.producer_cumulative.johnson[this.producer_cumulative.johnson.length - 1] + johnson);\n        this.producer_cumulative.sputnik.push(this.producer_cumulative.sputnik[this.producer_cumulative.sputnik.length - 1] + sputnik);\n        this.producer_cumulative.others.push(this.producer_cumulative.others[this.producer_cumulative.others.length - 1] + other);\n    }\n\n    clear = () => {\n        this.region = '';\n        this.delivery_cumulative = [0];\n        this.delivery_variation = [0];\n        this.producer_cumulative.pfizer = [0];\n        this.producer_cumulative.astrazeneca = [0];\n        this.producer_cumulative.moderna = [0];\n        this.producer_cumulative.johnson = [0];\n        this.producer_cumulative.sputnik = [0];\n        this.producer_cumulative.others = [0];\n    }\n}\n\n","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 01/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nfunction getIndex(area) {\n    let areas = ['ABR', 'BAS', 'CAL', 'CAM', 'EMR', 'FVG', 'LAZ', 'LIG', 'LOM', 'MAR', 'MOL', 'PAB', 'PAT', 'PIE', 'PUG', 'SAR', 'SIC', 'TOS', 'UMB', 'VDA', 'VEN']\n    return areas.indexOf(area);\n}\n\nexport default function divideByRegion(data){\n    let dataToReturn = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\n    let index = 0, i;\n    // scroll al records (there are records with different areas at the same level)\n    // ex (a = area): [{a1, 1}, ... {a1, n}, ... {ak, 1}, ... {ak, n}, {a1, n+1}, ... {a1, n+x}, ...]\n    // i.e. it's not granted that there are all regions at each round\n    for(i = 0; i < data.length; i++){\n        index = getIndex(data[i][\"area\"]);\n        if(index !== -1){\n            dataToReturn[index].push(data[i]);\n        }\n    }\n    return dataToReturn.length === 21 ? dataToReturn : [];\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 30/01/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\nimport {compareDateUsingDaysFromDay0, daysFromDay0} from \"../../utils/dateDifference\";\nimport DeliveryData from \"./deliveryData\";\nimport DeliveryAttrs from \"./deliveryAttrs\";\nimport divideByRegion from \"../common/preprocessing\";\n\nfunction evaluateProducer(producer_string){\n    producer_string = producer_string.toString().toLowerCase();\n    if(producer_string.includes('pfizer'))\n        return 0;\n    if(producer_string.includes('astrazeneca'))\n        return 1;\n    if(producer_string.includes('moderna'))\n        return 2;\n    if(producer_string.includes('janssen'))\n        return 3;\n    if(producer_string.includes('sputnik'))\n        return 4;\n    return 5;\n}\n\nfunction organizeByDate(data){\n    let dataset = new DeliveryData();\n    let ita = new DeliveryAttrs();\n    let producer_index;\n    ita.setRegion(\"ITA\");\n    dataset.pushToRegion(ita);\n    // for each region\n    for(let r = 0; r < data.length; r ++) {\n        let current_region = new DeliveryAttrs();\n        let index = 0;\n        //for each day from day 0 to today\n        for(let i = 0; i < daysFromDay0(); i++) {\n            let tmp = 0, tmp_pfizer = 0, tmp_astra = 0, tmp_moderna = 0, tmp_johnson = 0, tmp_sputnik = 0, tmp_other = 0;\n            //while date equals to today\n            while(index < data[r].length && compareDateUsingDaysFromDay0(i, data[r][index][\"data_consegna\"])) {\n                //tmp += head array\n                tmp += data[r][index][\"numero_dosi\"];\n                //if variation is pfizer\n                producer_index = evaluateProducer(data[r][index][\"fornitore\"]);\n                switch(producer_index){\n                    case 0:\n                        tmp_pfizer += data[r][index][\"numero_dosi\"];\n                        break;\n                    case 1:\n                        tmp_astra += data[r][index][\"numero_dosi\"];\n                        break;\n                    case 2:\n                        tmp_moderna += data[r][index][\"numero_dosi\"];\n                        break;\n                    case 3:\n                        tmp_johnson += data[r][index][\"numero_dosi\"];\n                        break;\n                    case 4:\n                        tmp_sputnik += data[r][index][\"numero_dosi\"];\n                        break;\n                    case 5:\n                        tmp_other += data[r][index][\"numero_dosi\"];\n                        break;\n                }\n                index++;\n            }\n            current_region.setRegion(data[r][0][\"area\"]);\n            current_region.addCumulative(tmp);\n            current_region.addVariation(tmp);\n            current_region.addPfizerCumulative(tmp_pfizer, tmp_astra, tmp_moderna, tmp_johnson, tmp_sputnik, tmp_other);\n        }\n        dataset.pushToRegion(current_region)\n    }\n    return dataset;\n}\n\n\nfunction createAllItalyResume(data){\n    for(let i = 1; i < data.regions[1].delivery_cumulative.length; i++){\n        let cumulative = 0, variation = 0, pfizer_cumulative = 0, astra_cumulative = 0, moderna_cumulative = 0, johnson_cumulative = 0, sputnik_cumulative = 0, others_comulative = 0;\n        for(let j = 1; j < data.regions.length; j++){\n            cumulative += data.regions[j].delivery_cumulative[i];\n            variation += data.regions[j].delivery_variation[i];\n            pfizer_cumulative += data.regions[j].producer_cumulative.pfizer[i];\n            astra_cumulative += data.regions[j].producer_cumulative.astrazeneca[i];\n            moderna_cumulative += data.regions[j].producer_cumulative.moderna[i];\n            johnson_cumulative += data.regions[j].producer_cumulative.johnson[i];\n            sputnik_cumulative += data.regions[j].producer_cumulative.sputnik[i];\n            others_comulative += data.regions[j].producer_cumulative.others[i];\n        }\n        data.regions[0].delivery_cumulative.push(cumulative);\n        data.regions[0].delivery_variation.push(variation);\n        data.regions[0].producer_cumulative.pfizer.push(pfizer_cumulative);\n        data.regions[0].producer_cumulative.astrazeneca.push(astra_cumulative);\n        data.regions[0].producer_cumulative.moderna.push(moderna_cumulative);\n        data.regions[0].producer_cumulative.johnson.push(johnson_cumulative);\n        data.regions[0].producer_cumulative.sputnik.push(sputnik_cumulative);\n        data.regions[0].producer_cumulative.others.push(others_comulative);\n    }\n    return data\n}\n\nexport default function DeliveryPreprocessing(data){\n    return createAllItalyResume(organizeByDate(divideByRegion(data)));\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 25/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nfunction replaceMonth(month){\n    switch (month){\n        case 'Jan':\n            return '01';\n        case 'Feb':\n            return '02';\n        case 'Mar':\n            return '03';\n        case 'Apr':\n            return '04';\n        case 'May':\n            return '05';\n        case 'Jun':\n            return '06';\n        case 'Jul':\n            return '07';\n        case 'Aug':\n            return '08';\n        case 'Sep':\n            return '09';\n        case 'Oct':\n            return '10';\n        case 'Nov':\n            return '11';\n        default:\n            return '12';\n    }\n\n}\n\nexport default function dateToString(date) {\n    if(date === undefined){\n        return ''\n    }\n    // input type: 'Tue Dec 15 2020 01:00:00 GMT+0100'\n    date = new Date(date).toDateString();\n    const splitted = date.split(' ');\n    return splitted[2] + '/' + replaceMonth(splitted[1]) + '/' + splitted[3];\n}\n\n\nexport function dateNormalized(date) {\n    date = new Date(date).toDateString();\n    const splitted = date.split(' ');\n    return splitted[2] + '/' + splitted[1] + '/' + splitted[3];\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 01/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\nimport dateToString from \"../utils/dateToString\";\n\nlet array_dates = [];\n\n\nconst DateArray = () => {\n    let currentDate = new Date('2020-12-15T00:00:00Z');\n    while (new Date(currentDate) <= Date.now()) {\n        array_dates.push(dateToString(currentDate));\n        currentDate = new Date(currentDate).setDate(new Date(currentDate).getDate() + 1);\n    }\n    console.log(array_dates.length)\n    return array_dates;\n};\n\n\nexport default DateArray;","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 01/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nexport default class AdministrationData {\n    regions = [];\n\n    pushToRegion = (item) => {\n        this.regions.push(item);\n    }\n\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 01/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nexport default class AdministrationsAttrs {\n    region = '';\n    administration_cumulative = [0];\n    administration_variation = [0];\n    administration_gender_cumulative = {\n        male: [0],\n        female: [0]\n    }\n    administration_dosage = {\n        first: [0],\n        second: [0]\n    }\n    administration_categories_cumulative = {\n        healthcare_personnel : [0],\n        associated_healthcare_personnel : [0],\n        rsa_patients: [0],\n        over_80: [0],\n        other: [0],\n    }\n\n    setRegion = (region) => {\n        this.region = region;\n    }\n\n    addCumulative = (item) => {\n        this.administration_cumulative.push(this.administration_cumulative[this.administration_cumulative.length - 1] + item);\n    }\n\n    addVariation = (item) => {\n        this.administration_variation.push(item);\n    }\n\n    addGenderCumulative = (male, female) =>{\n        this.administration_gender_cumulative.male.push(this.administration_gender_cumulative.male[this.administration_gender_cumulative.male.length - 1] + male);\n        this.administration_gender_cumulative.female.push(this.administration_gender_cumulative.female[this.administration_gender_cumulative.female.length - 1] + female);\n    }\n\n    addDosageCumulative = (first, second) =>{\n        this.administration_dosage.first.push(this.administration_dosage.first[this.administration_dosage.first.length - 1] + first);\n        this.administration_dosage.second.push(this.administration_dosage.second[this.administration_dosage.second.length - 1] + second);\n    }\n\n    addCategoriesCumulative = (healthcare_personnel, associated_healthcare_personnel, rsa_patients, over_80, other) => {\n        this.administration_categories_cumulative.healthcare_personnel.push(this.administration_categories_cumulative.healthcare_personnel[this.administration_categories_cumulative.healthcare_personnel.length - 1] + healthcare_personnel);\n        this.administration_categories_cumulative.associated_healthcare_personnel.push(this.administration_categories_cumulative.associated_healthcare_personnel[this.administration_categories_cumulative.associated_healthcare_personnel.length - 1] + associated_healthcare_personnel);\n        this.administration_categories_cumulative.rsa_patients.push(this.administration_categories_cumulative.rsa_patients[this.administration_categories_cumulative.rsa_patients.length - 1] + rsa_patients);\n        this.administration_categories_cumulative.over_80.push(this.administration_categories_cumulative.over_80[this.administration_categories_cumulative.over_80.length - 1] + over_80);\n        this.administration_categories_cumulative.other.push(this.administration_categories_cumulative.other[this.administration_categories_cumulative.other.length - 1] + other);\n    }\n\n    clear = () => {\n        this.region = '';\n        this.administration_cumulative = [0];\n        this.administration_variation = [0];\n        this.administration_gender_cumulative.male = [0];\n        this.administration_gender_cumulative.female = [0];\n        this.administration_categories_cumulative.healthcare_personnel = [0];\n        this.administration_categories_cumulative.associated_healthcare_personnel = [0];\n        this.administration_categories_cumulative.rsa_patients = [0];\n        this.administration_categories_cumulative.over_80 = [0];\n        this.administration_categories_cumulative.other = [0];\n    }\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 02/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\nimport {compareDateUsingDaysFromDay0, daysFromDay0} from \"../../utils/dateDifference\";\nimport AdministrationData from \"./administrationData\";\nimport AdministrationsAttrs from \"./administrationsAttrs\";\nimport divideByRegion from \"../common/preprocessing\";\n\nfunction organizeByDate(data){\n    let dataset = new AdministrationData();\n    let ita = new AdministrationsAttrs();\n    ita.setRegion(\"ITA\");\n    dataset.pushToRegion(ita);\n    // for each region\n    for(let r = 0; r < data.length; r ++) {\n        let current_region = new AdministrationsAttrs();\n        let index = 0;\n        //for each day from day 0 to today\n        for(let i = 0; i < daysFromDay0(); i++) {\n            let tmp_gender = {male: 0, female: 0}, tmp_dosage = {first: 0, second: 0},\n                tmp_categories = {healthcare: 0, associated_healthcare: 0, rsa: 0, over80: 0, others: 0};\n            //while date equals to today\n            while(index < data[r].length && compareDateUsingDaysFromDay0(i, data[r][index][\"data_somministrazione\"])) {\n                //gender\n                tmp_gender.male += data[r][index][\"sesso_maschile\"];\n                tmp_gender.female += data[r][index][\"sesso_femminile\"];\n                //dosage\n                tmp_dosage.first += data[r][index][\"prima_dose\"];\n                tmp_dosage.second += data[r][index][\"seconda_dose\"];\n                //category\n                tmp_categories.healthcare += data[r][index][\"categoria_operatori_sanitari_sociosanitari\"];\n                tmp_categories.associated_healthcare += data[r][index][\"categoria_personale_non_sanitario\"];\n                tmp_categories.rsa += data[r][index][\"categoria_ospiti_rsa\"];\n                tmp_categories.over80 += data[r][index][\"categoria_over80\"];\n                //update index\n                index++;\n            }\n            current_region.setRegion(data[r][0][\"area\"]);\n            current_region.addCumulative((tmp_gender.male + tmp_gender.female));\n            current_region.addVariation((tmp_gender.male + tmp_gender.female));\n            current_region.addGenderCumulative(tmp_gender.male, tmp_gender.female);\n            current_region.addDosageCumulative(tmp_dosage.first, tmp_dosage.second);\n            current_region.addCategoriesCumulative(tmp_categories.healthcare, tmp_categories.associated_healthcare, tmp_categories.rsa, tmp_categories.over80, tmp_categories.others);\n        }\n        dataset.pushToRegion(current_region)\n    }\n    return dataset;\n}\n\n\nfunction createAllItalyResume(data){\n    for(let i = 1; i < data.regions[1].administration_cumulative.length; i++){\n        let cumulative = 0, variation = 0, gender = {male: 0, female: 0}, dosage = {first: 0, second: 0},\n            categories = {healthcare: 0, associated_healthcare: 0, rsa: 0, over80: 0, others: 0};\n        for(let j = 1; j < data.regions.length; j++){\n            cumulative += data.regions[j].administration_cumulative[i];\n            variation += data.regions[j].administration_variation[i];\n            // gender\n            gender.male += data.regions[j].administration_gender_cumulative.male[i];\n            gender.female += data.regions[j].administration_gender_cumulative.female[i];\n            // dosage\n            dosage.first = data.regions[j].administration_dosage.first[i];\n            dosage.second = data.regions[j].administration_dosage.second[i];\n            // categories\n            categories.healthcare += data.regions[j].administration_categories_cumulative.healthcare_personnel[i];\n            categories.associated_healthcare += data.regions[j].administration_categories_cumulative.associated_healthcare_personnel[i];\n            categories.rsa += data.regions[j].administration_categories_cumulative.rsa_patients[i];\n            categories.over80 += data.regions[j].administration_categories_cumulative.over_80[i];\n            categories.others += data.regions[j].administration_categories_cumulative.other[i];\n        }\n        data.regions[0].administration_cumulative.push(cumulative);\n        data.regions[0].administration_variation.push(variation);\n        // gender\n        data.regions[0].administration_gender_cumulative.male.push(gender.male);\n        data.regions[0].administration_gender_cumulative.female.push(gender.female);\n        // dosage\n        data.regions[0].administration_dosage.first.push(dosage.first);\n        data.regions[0].administration_dosage.second.push(dosage.second);\n        // categories\n        data.regions[0].administration_categories_cumulative.healthcare_personnel.push(categories.healthcare);\n        data.regions[0].administration_categories_cumulative.associated_healthcare_personnel.push(categories.associated_healthcare);\n        data.regions[0].administration_categories_cumulative.rsa_patients.push(categories.rsa);\n        data.regions[0].administration_categories_cumulative.over_80.push(categories.over80);\n        data.regions[0].administration_categories_cumulative.other.push(categories.others);\n    }\n    return data\n}\n\nexport default function AdministrationPreprocessing(data){\n    return createAllItalyResume(organizeByDate(divideByRegion(data)));\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 24/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport DeliveryPreprocessing from \"./delivery/preprocessing\";\nimport DateArray from \"./generateDateArray\";\nimport dateToString from \"../utils/dateToString\";\nimport AdministrationPreprocessing from \"./administration/preprocessing\";\n\nlet Records = {\n\n    data: {\n        dates: [],\n        delivery: [],\n        administration: [],\n    },\n\n    setAdministrationRecords(records){\n        this.data.administration = AdministrationPreprocessing(records);\n    },\n\n    setDeliveryRecords(records){\n        this.data.delivery = DeliveryPreprocessing(records);\n        this.data.dates = DateArray();\n    },\n\n    getRecords(){\n        return this.data;\n    },\n\n    getDates(){\n        return this.data.dates;\n    },\n\n    getLastDate(){\n        return dateToString(Date.now());\n    }\n\n};\n\nexport default Records;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nconst Colors = {\n    /** LIGHT MODE **/\n    main: '#1479FF',\n    mainTransparent: 'rgba(20,121,255,0.1)',\n    basic: '#1C1C1E',\n    basicNotes: 'rgba(255,255,255,0.9)',\n    icons: 'rgba(28,28,30,0.4)',\n    navigationInactive: 'rgba(28,28,30,0.7)',\n    basicTransparent: 'rgba(25,59,104,0.1)',\n    basicShadow:'rgba(25,59,104,0.33)',\n    background: '#f0f2f5',\n    title: '#000',\n    borders: 'rgba(101,101,101,0.25)',\n    basicElevation: '#FFFFFF',\n    accent1: '#14D2FF',\n    accent2: '#14A5FF',\n    accent3: '#14EBFF',\n    axis: '#E4E4E4',\n    bars: '#1479FF',\n    navigationOverlay: 'rgba(0,0,0,0.1)',\n    drawerSelectedText: '#1C1C1E',\n    drawerSelectedBackground: 'rgba(25,59,104,0.1)',\n    /** DARK MODE **/\n    darkMode_main: '#0f63d2',\n    darkMode_mainTransparent: 'rgba(24,97,195,0.1)',\n    darkMode_title: '#fff',\n    darkMode_basic: '#989899',\n    darkMode_basicNotesLight: '#fff',\n    darkMode_basicNotesText: '#000',\n    darkMode_basicNotes: '#3a3b3c',\n    darkMode_icons: 'rgba(202,202,202,0.4)',\n    darkMode_navigationInactive: 'rgba(202,202,202,0.7)',\n    darkMode_basicTransparent: 'rgba(136,136,136,0.1)',\n    darkMode_basicShadow:'rgba(0,0,0,1)',\n    darkMode_basicElevation: '#1c1c1e',\n    darkMode_background: '#000', //'#18191a',\n    darkMode_accent1: '#14D2FF',\n    darkMode_accent2: '#14A5FF',\n    darkMode_accent3: '#14EBFF',\n    darkMode_axis: '#E4E4E4',\n    darkMode_bars: '#1479FF',\n    darkMode_drawerSelectedText: '#bebebe',\n    darkMode_drawerSelectedBackground: '#3a3b3c',\n};\n\nexport default Colors;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/09/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {Appearance} from \"react-native-appearance\";\n\nexport default function darkMode() {\n    return Appearance.getColorScheme() === 'dark';\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 27/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\nimport darkMode from \"./darkModeDetector\";\n\nlet LegendColors = {\n    green: darkMode() ? '#30d158' : '#34c759',\n    red: darkMode() ? '#ff453a' : '#ff3a30',\n    orange: darkMode() ?'#ff9f0a' :  '#ff9500',\n    yellow: darkMode() ? '#ffd60a' : '#ffcc00',\n    grey: darkMode() ? '#767676' : '#616161',\n    blue: darkMode() ? '#0a84ff' : '#007bff',\n    indigo: darkMode() ? '#5e5ce6' : '#5856d6',\n    teal: darkMode() ? '#64d3ff' : '#5ac8fa',\n    pink: darkMode() ? '#ff375f' : '#ff2d55',\n    purple: darkMode() ? '#bf5af2' : '#af52de',\n    neutral: darkMode() ? '#505050' : '#000000',\n}\n\nexport default LegendColors;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\n\nimport {getCardBigWidth, getCardMediumWidth, getCardSmallWidth, getChartFullWidth} from \"../../utils/dimensionsUtils\";\n\nexport const dimens = {\n    verySmallScreen: 400,\n    largeScreen: 768,\n    drawerWidth: 250,\n    chartMargin: 55,\n    headerHeight: 74,\n    headerLargeHeight: 90,\n    cardMargin: 8,\n    cardMarginSmallScreen: 20,\n    pieChartRadius: 100,\n    lineChartHeight: 220,\n\n};\n\nexport const dynamicDimens = {\n    cardSmall: getCardSmallWidth(),\n    cardMedium: getCardMediumWidth(),\n    cardBig: getCardBigWidth(),\n    chartFullWidth: getChartFullWidth(),\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 23/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {Dimensions} from 'react-native';\nimport {dimens} from \"../ui/theme/dimens\";\n\nexport function getCardBigWidth() {\n    return Dimensions.get('window').width >= dimens.largeScreen ?\n        (Dimensions.get('window').width - dimens.drawerWidth - dimens.cardMargin * 2) :\n        (Dimensions.get('window').width - dimens.cardMarginSmallScreen)\n\n}\n\nexport function getCardSmallWidth() {\n    return Dimensions.get('window').width >= dimens.largeScreen ?\n        250 : (Dimensions.get('window').width - dimens.cardMarginSmallScreen)\n}\n\nexport function getCardMediumWidth() {\n    return Dimensions.get('window').width >= dimens.largeScreen ?\n        768 : (Dimensions.get('window').width - dimens.cardMarginSmallScreen)\n}\n\nexport function getChartFullWidth() {\n    return Dimensions.get('window').width > dimens.largeScreen ?\n        (Dimensions.get('window').width - dimens.drawerWidth - dimens.chartMargin) :\n        (Dimensions.get('window').width - dimens.chartMargin)\n}\n\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {StyleSheet, Platform} from \"react-native\";\nimport Colors from \"./colors\";\nimport LegendColors from \"./legendColors\"\nimport {dynamicDimens} from \"./dimens\";\nimport darkMode from \"./darkModeDetector\";\n\n\nexport const styles = StyleSheet.create({\n    root: {\n        backgroundColor: Colors.basicTransparent,\n    },\n    rootContainer: {\n        flex: 1,\n        alignItems: 'flex-start',\n        alignContent: 'space-around',\n        justifyContent: 'flex-start',\n        backgroundColor: darkMode() ? Colors.darkMode_background : Colors.background,\n    },\n    scrollableContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginBottom: 55,\n    },\n    loading: {\n        backgroundColor:  darkMode() ? Colors.darkMode_background : Colors.background,\n    },\n    container: {\n        flex: 1,\n        backgroundColor:  darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    menuItemradius: {\n        paddingLeft: 10,\n        borderRadius:20,\n        borderTopLeftRadius: 5,\n        borderTopRightRadius: 20,\n        borderBottomRightRadius: 20,\n        borderBottomLeftRadius: 20,\n        borderColor: 'transparent'\n    },\n    /*\n     *  HeaderStyle\n     *\n     */\n    header: {\n        backgroundColor: darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n        borderBottomColor: darkMode() ? Colors.darkMode_basicNotes : Colors.borders,\n        borderBottomWidth: 0.5,\n        position:  Platform.OS === 'web' ? 'fixed': 'absolute',\n        top: 0,\n        left: 0,\n    },\n    headerTitle: {\n        color: darkMode() ? Colors.darkMode_title : Colors.title,\n    },\n    headerShadow: {\n        shadowColor: darkMode() ? Colors.darkMode_basicShadow : Colors.basicShadow,\n        shadowOffset: {\n            width: 0,\n            height: 5,\n        },\n        shadowOpacity: 0.4,\n        shadowRadius: 13.16,\n        elevation: 20,\n    },\n    /*\n     *  Card items\n     *  3 sizes:\n     *      - big\n     *      - medium\n     *      - small\n     */\n    cardGeneric: {\n        position: 'relative',\n        borderRadius: 10,\n        margin: 10,\n        height: 'auto',\n        padding: 20,\n        backgroundColor: darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n        borderColor: darkMode() ? Colors.darkMode_basicTransparent : Colors.borders,\n        borderWidth: 0.5,\n        elevation: 20,\n    },\n    cardShadow: {\n        shadowColor: darkMode() ? Colors.darkMode_basicShadow : Colors.basicShadow,\n        shadowOffset: {\n            width: 0,\n            height: 10,\n        },\n        shadowOpacity: darkMode() ? 0 : 0.2,\n        shadowRadius: 13.16,\n        elevation: 20,\n    },\n    cardBig: {\n        width: dynamicDimens.cardBig\n    },\n    cardMedium: {\n        width: dynamicDimens.cardMedium\n    },\n    cardSmall: {\n        width: dynamicDimens.cardSmall\n    },\n    /*\n     *  Indicators\n     */\n    indicatorTitle: {\n        fontSize: 22,\n        fontWeight: \"700\",\n        color: '#fff'\n    },\n    indicatorValue: {\n        textAlign: 'center',\n        color:  darkMode() ? Colors.darkMode_basic : Colors.basic\n    },\n    indicatorValueBold: {\n        marginTop:20,\n        fontSize: 22,\n        fontWeight: \"900\",\n    },\n    indicatorValueIncr: {\n        marginTop: 5,\n        marginBottom: 10,\n        fontSize: 14,\n        fontStyle: 'italic',\n    },\n    indicatorLight: {\n        color: '#fff'\n    },\n    indicatorOrange: {\n        color: LegendColors.yellow\n    },\n    indicatorGreen: {\n        backgroundColor: LegendColors.green\n    },\n    indicatorGrey: {\n        color: LegendColors.grey\n    },\n    indicatorRed: {\n        color: LegendColors.red\n    },\n    /*\n     *  Chart\n     */\n    chartTitle: {\n        fontSize: 18,\n        fontWeight: \"700\",\n        color: darkMode() ? Colors.darkMode_title : Colors.title,\n    },\n    chartDescription: {\n        fontSize: 12,\n        fontStyle: 'italic',\n        textAlign: 'center',\n        marginTop: 20,\n        color: darkMode() ? Colors.darkMode_basic : Colors.basic,\n    },\n    chartManipulationDescription: {\n        color: darkMode() ? Colors.darkMode_basic : Colors.basic,\n    },\n    infoDescription: {\n        fontSize: 16,\n        color: darkMode() ? Colors.darkMode_basic : Colors.basic,\n        fontStyle: 'italic',\n        textAlign: 'left',\n        marginTop: 20,\n        marginLeft: 20,\n        marginRight: 20,\n\n    },\n    chartBigValue: {\n        width: '100%',\n        textAlign: 'center',\n        fontSize: 30,\n        marginTop: 30,\n        marginBottom: 30,\n        color: darkMode() ? Colors.darkMode_basic : Colors.basic,\n    },\n    /*\n     *  Chart legend\n     *\n     */\n    legendExternalContainer: {\n        flex: 1,\n        margin: 10,\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n    },\n    legendContainer: {\n        margin: 10,\n        position: 'relative',\n        flexDirection: 'row'\n    },\n    legendColorSquare: {\n        width: 20,\n        height:20,\n        borderRadius: 5,\n    },\n    legendTitle: {\n        marginLeft: 10,\n        color: darkMode() ? Colors.darkMode_basic : Colors.basic,\n    },\n    /*\n     *  Notes\n     *\n     */\n    notesContainer: {\n        bottom: 0,\n        position: Platform.OS === 'web' ? 'fixed': 'absolute',\n        justifyContent: Platform.OS === 'web' ? 'left': 'center',\n        alignItems: Platform.OS === 'web' ? 'left': 'center',\n        width: '100%',\n        height: 'auto',\n        backgroundColor: darkMode() ? Colors.darkMode_basicElevation : Colors.basic,\n        paddingTop: 15,\n        paddingBottom: 15,\n        borderColor: 'transparent',\n        borderTopColor: darkMode() ? Colors.darkMode_basicNotes : Colors.borders,\n        borderWidth: 0.5,\n    },\n});\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nexport const appInfo = {\n    name: 'Covid19 Dashboard Vaccini',\n    version: '1.0.0 beta',\n    author: '@marinimau',\n    description: 'Covid-19 Italy è una dashboard realizzata da Mauro Marini per il monitoraggio e la visualizzazione dei dati riguardanti la distribuzione e la somministrazione dei vaccini Covid-19 nel territorio italiano.'\n};\n\nexport const uiButtons = {\n    done: 'Fatto'\n}\n\nexport const loadingMessages = {\n    loading: 'Caricamento...',\n    error: 'Qualcosa è andato storto, ricarica la pagina',\n    noNotes: 'Nessuna nota in data odierna',\n};\n\nexport const screenTitles = {\n    home: 'Home',\n    latestUpdateResume: 'Resoconto',\n    delivered: 'Consegne',\n    administration: 'Somministrazioni',\n    info: 'Informazioni'\n};\n\n\nexport const cardTitles = {\n    delivery: 'Consegne',\n    administration: 'Somministrazioni',\n    administrationHealthcare: 'Personale sanitario',\n    administrationAssociated: 'Personale non sanitario',\n    administrationRsa: 'Pazienti delle RSA',\n    administrationOver80: 'Cittadini Over80',\n    administrationOther: 'Altri',\n    administrationFirstDosage: 'Prime dosi',\n    administrationSecondDosage: 'Seconde dosi',\n}\n\nexport const deliveryChartTitles = {\n    percentageOfTotal: 'Percentuale sul totale nazionale',\n    cumulativeTrend: 'Andamento vaccini consegnati (cumulativo)',\n    variationTrend: 'Andamento vaccini consegnati (variazione giornaliera)',\n    repartitionAbsolute: 'Ripartizione per casa farmaceutica (valore assoluto)',\n    repartitionPercentage: 'Ripartizione per casa farmaceutica (valore percentuale)',\n    deliveredAdministrationRatio: 'Rapporto somministrazioni / consegne'\n}\n\nexport const deliveryChartDescriptions = {\n    percentageOfTotal: 'percentuale di dosi consegnate nell\\'area selezionata rispetto al totale nazionale',\n    cumulativeTrend: 'Conteggio cumulativo delle dosi di vaccino consegnate nel corso del tempo',\n    variationTrend: 'Numero giornaliero di dosi di vaccino consegnate nel corso del tempo',\n    repartitionAbsolute: 'ripartizione per casa farmaceutica  delle dosi consegnate (valore assoluto)',\n    repartitionPercentage: 'ripartizione per casa farmaceutica delle dosi consegnate(valore percentuale)',\n    deliveredAdministrationRatio: 'Percentuale di dosi somministrate rispetto a quelle ricevute',\n    producer: ['Pfizer', 'Astrazeneca', 'Moderna', 'Johnson & Johnson', 'Sputnik', 'Altri']\n}\n\n\nexport const administrationChartTitles = {\n    percentageOfTotal: 'Percentuale sul totale nazionale',\n    cumulativeTrend: 'Andamento vaccini somministrati (cumulativo)',\n    variationTrend: 'Andamento vaccini somministrati (variazione giornaliera)',\n    genderRepartitionAbsolute: 'Ripartizione per genere (valore assoluto)',\n    genderRepartitionPercentage: 'Ripartizione per genere (valore percentuale)',\n    dosageRepartitionAbsolute: 'Ripartizione per dosaggio (valore assoluto)',\n    dosageRepartitionPercentage: 'Ripartizione per dosaggio (valore percentuale)',\n}\n\nexport const administrationChartDescriptions = {\n    percentageOfTotal: 'percentuale di dosi consegnate nell\\'area selezionata rispetto al totale nazionale',\n    cumulativeTrend: 'Conteggio cumulativo delle dosi di vaccino somministrate nel corso del tempo',\n    variationTrend: 'Numero giornaliero di dosi di vaccino somministrate nel corso del tempo',\n    genderRepartitionAbsolute: 'Ripartizione delle dosi somministrate per genere (valore assoluto)',\n    genderRepartitionPercentage: 'Ripartizione delle dosi somministrate per genere (valore percentuale)',\n    gender: ['Sesso maschile', 'Sesso femminile'],\n    dosageRepartitionAbsolute: 'Ripartizione delle dosi somministrate per primo o secondo dosaggio (valore assoluto)',\n    dosageRepartitionPercentage: 'Ripartizione delle dosi somministrate per primo o secondo dosaggio (valore assoluto)',\n    dosage: ['Prima dose', 'Seconda dose'],\n}\n\nexport const chartTitles = {\n    locationSelectorPlaceholder: 'Cambia regione...',\n    allItaly: 'Tutta Italia',\n    lastUpdateDate: 'Dati del ',\n    placeholderValue: 'N/D',\n    placeholderValueIncr: ' (+N/D)',\n}\n\n\nexport const dataDescription = {\n    lastUpdate: '* tutti gli incrementi sono calcolati rispetto al giorno precedente',\n    showPercentage: 'Ripartizione in percentuale'\n}\n\n\nexport const infoMenuTitles = {\n    sectionLinks: 'Link utili',\n    dashboard_covid: 'Covid-19 Italy',\n    donate: 'Dona',\n    contact: 'Contatti',\n    repository: 'Repository',\n    data: 'Sorgente dati',\n}\n\n\nexport const infoMenuDescriptions = {\n    dashboard_covid: 'Dashboard andamento pandemia',\n    donate: 'donazione libera',\n    contact: 'ricevi assistenza',\n    repository: 'codice sorgente',\n    data: 'Developers Italia',\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {View, Text} from \"react-native\";\nimport {styles} from \"../../theme/style\";\nimport {loadingMessages} from \"../../contents/strings\";\n\n\nclass ErrorScreen extends Component{\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <View style={[{ flex: 1, alignItems: 'center', justifyContent: 'center' }, styles.loading]}>\n                <Text>{loadingMessages.error}</Text>\n            </View>\n        )\n    }\n}\n\nexport default ErrorScreen;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {View, ActivityIndicator} from \"react-native\";\nimport {styles} from \"../../theme/style\";\n\n\nclass LoadingComponent extends Component{\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <View style={[{ flex: 1, alignItems: 'center', justifyContent: 'center' }, styles.loading]}>\n                <View>\n                    <ActivityIndicator />\n                </View>\n            </View>\n        )\n    }\n}\n\nexport default LoadingComponent;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 28/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport * as React from 'react';\n\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n    navigationRef.current?.navigate(name, params);\n}\n\nexport function reRender() {\n    navigationRef.current?.forceUpdate();\n}\n\n\nexport const stackRef = React.createRef();\n\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 30/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {chartTitles} from \"./strings\";\n\nexport const RegionList = [\n    {label: chartTitles.allItaly, value: 0},\n    {label: 'Abruzzo', value: 1},\n    {label: 'Basilicata', value: 2},\n    {label: 'Calabria', value: 3},\n    {label: 'Campania', value: 4},\n    {label: 'Emilia-Romagna', value: 5},\n    {label: 'Friuli Venezia Giulia', value: 6},\n    {label: 'Lazio', value: 7},\n    {label: 'Liguria', value: 8},\n    {label: 'Lombardia', value: 9},\n    {label: 'Marche', value: 10},\n    {label: 'Molise', value: 11},\n    {label: 'P.A. Bolzano', value: 12},\n    {label: 'P.A. Trento', value: 13},\n    {label: 'Piemonte', value: 14},\n    {label: 'Puglia', value: 15},\n    {label: 'Sardegna', value: 16},\n    {label: 'Sicilia', value: 17},\n    {label: 'Toscana', value: 18},\n    {label: 'Umbria', value: 19},\n    {label: 'Valle d\\'Aosta', value: 20},\n    {label: 'Veneto', value: 21},\n]","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 31/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {RegionList} from \"../ui/contents/locationsList\";\nimport { EventRegister } from 'react-native-event-listeners'\n\n\nlet SelectedLocation ={\n\n    index: 0,\n\n    setLocation(index){\n        if(index >= 0 && index <= RegionList.length){\n            this.index = index;\n            EventRegister.emit('locationChanged', 'it works!!!');\n        }\n    },\n\n    getLocation(){\n        return this.index;\n    },\n\n};\n\nexport default SelectedLocation;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 30/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {RegionList} from \"../../contents/locationsList\";\nimport RNPickerSelect from 'react-native-picker-select';\nimport {styles} from \"../../theme/style\";\nimport {View, StyleSheet, Platform} from \"react-native\";\nimport {chartTitles, uiButtons} from \"../../contents/strings\";\nimport Colors from \"../../theme/colors\";\nimport SelectedLocation from \"../../../logic/selectedLocation\";\nimport darkMode from \"../../theme/darkModeDetector\";\nimport {SYSTEM_FONT_STACK} from \"react-native-web/dist/exports/StyleSheet/constants\";\n\n\nclass LocationSelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {location: SelectedLocation.getLocation()}\n    }\n\n    render() {\n        return (\n            <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig, {\n                backgroundColor: darkMode() ? Colors.darkMode_basicNotes : Colors.basicElevation,\n                padding: 0\n            }]}>\n                <RNPickerSelect\n                    items={RegionList}\n                    placeholder={{value: 0, label: chartTitles.locationSelectorPlaceholder}}\n                    onValueChange={(value) => {\n                        this.setState({location: value});\n                        SelectedLocation.setLocation(value);\n                    }}\n                    doneText={uiButtons.done}\n                    style={pickerSelectStyles}\n                    fixAndroidTouchableBug={true}\n                    useNativeAndroidPickerStyle={false}\n                />\n            </View>\n        );\n    }\n}\n\nconst pickerSelectStyles = StyleSheet.create({\n    inputWeb: {\n        fontSize: 16,\n        borderWidth: 0,\n        backgroundColor: darkMode() ? 'transparent' :Colors.basicElevation,\n        fontFamily: SYSTEM_FONT_STACK,\n        color: (darkMode() ? Colors.darkMode_basic : Colors.basic),\n    },\n    inputIOS: {\n        fontSize: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 10,\n        borderWidth: 0,\n        backgroundColor: 'transparent',\n        color: (darkMode() ? Colors.darkMode_basic : Colors.basic),\n        paddingRight: 30,\n    },\n    inputAndroid: {\n        fontSize: 16,\n        paddingHorizontal: 10,\n        paddingVertical: 8,\n        borderWidth: 0,\n        borderRadius: 8,\n        color: 'transparent',\n        paddingRight: 30,\n    },\n});\n\nexport default LocationSelector;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 19/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react'\nimport {styles} from \"../theme/style\";\nimport {ScrollView, View} from \"react-native\";\nimport LocationSelector from \"./location_selector/locationSelector\";\n\nexport default class MainScrollableContents extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <>\n                <View style={[styles.rootContainer, {position: 'relative'}]}>\n                    <ScrollView>\n                        <View style={[styles.scrollableContainer]}>\n                            <LocationSelector />\n                            {this.props.children}\n                        </View>\n                    </ScrollView>\n                </View>\n            </>\n        );\n    }\n}\n\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 01/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from 'react';\nimport {Dimensions} from 'react-native';\nimport {dimens} from \"../theme/dimens\";\nimport darkMode from \"../theme/darkModeDetector\";\n\n\nexport function lineChartNumLabels(range) {\n    switch (range) {\n        case 7:\n            return (Dimensions.get('window').width <= dimens.verySmallScreen ? 4 : 7)\n        case -1:\n            return (Dimensions.get('window').width <= dimens.verySmallScreen ? 4 : 7)\n        case 30:\n            return (Dimensions.get('window').width <= dimens.verySmallScreen ? 4 : 10)\n    }\n\n}\n\nexport const ShadowOpacity = darkMode() ? 0 : 0.2;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 02/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport Records from \"../dataset\";\nimport SelectedLocation from \"../selectedLocation\";\n\nlet dataToReturn = {\n    percentageOfTotal: 0,\n    total: 0,\n    lastVariation: 0,\n    lastVariationPercentage: 0,\n    cumulativeTrend: [],\n    variationTrend: [],\n    producerRepartition: [],\n    producerRepartitionPercentage: []\n};\n\nexport function cleanData() {\n    dataToReturn.newCasesTrendAbsolute = [];\n    dataToReturn.newCasesTrendDayValue = [];\n    dataToReturn.producerRepartition = [];\n    dataToReturn.producerRepartitionPercentage = [];\n}\n\nfunction populateRepartition(){\n    dataToReturn.producerRepartition = [];\n    dataToReturn.producerRepartitionPercentage = [];\n    let dates = Records.getDates();\n    let current =  Records.getRecords().delivery.regions[SelectedLocation.getLocation()].producer_cumulative;\n    let total = dataToReturn.cumulativeTrend;\n    for(let i = 0; i <  current.pfizer.length - 1; i++){\n        dataToReturn.producerRepartition.push(\n            {\n                date: dates[i],\n                pfizer: current.pfizer[i],\n                astrazeneca: current.astrazeneca[i],\n                moderna: current.moderna[i],\n                johnson: current.johnson[i],\n                sputnik: current.sputnik[i],\n                others: current.others[i]\n            }\n        );\n        dataToReturn.producerRepartitionPercentage.push(\n            {\n                date: dates[i],\n                pfizer: current.pfizer[i] === 0 ? 0 : current.pfizer[i] / total[i] * 100,\n                astrazeneca: current.astrazeneca[i] === 0 ? 0 : current.astrazeneca[i] / total[i] * 100,\n                moderna: current.moderna[i] === 0 ? 0 : current.moderna[i] / total[i] * 100,\n                johnson: current.johnson[i] === 0 ? 0 : current.johnson[i] / total[i] * 100,\n                sputnik: current.sputnik[i] === 0 ? 0 : current.sputnik[i] / total[i] * 100,\n                others: current.others[i]  === 0 ? 0 : current.others[i] / total[i] * 100,\n            }\n        )\n    }\n}\n\nconst DeliveryChartAttributes = () => {\n    dataToReturn.total = Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_cumulative[Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_cumulative.length - 1];\n    dataToReturn.lastVariation = Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_variation[Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_variation.length - 1];\n    dataToReturn.lastVariationPercentage = dataToReturn.lastVariation === 0 ? 0 :\n        (Math.round((dataToReturn.lastVariation / dataToReturn.total * 100)*100)/100).toFixed(2);\n    let percentage = Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_cumulative[Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n        .delivery_cumulative.length - 1] / Records.getRecords().delivery.regions[0]\n        .delivery_cumulative[Records.getRecords().delivery.regions[0].delivery_cumulative.length - 1] * 100;\n    dataToReturn.percentageOfTotal = (Math.round(percentage*100)/100).toFixed(2);\n    dataToReturn.cumulativeTrend = Records.getRecords().delivery.regions[SelectedLocation.getLocation()].delivery_cumulative;\n    dataToReturn.variationTrend = Records.getRecords().delivery.regions[SelectedLocation.getLocation()].delivery_variation;\n    populateRepartition();\n    return dataToReturn;\n};\n\n\nexport default DeliveryChartAttributes;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 27/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\n\nimport React, {Component} from 'react';\nimport LegendColors from \"../../ui/theme/legendColors\";\nimport {styles} from \"../../ui/theme/style\";\nimport {Text, View} from \"react-native\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport {ShadowOpacity} from \"../../ui/contents/params\";\nimport DeliveryChartAttributes from \"../../logic/delivery/deliveryChartAttributes\";\n\nexport default class CardDelivery extends Component{\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall, {backgroundColor: LegendColors.indigo, shadowColor: LegendColors.indigo, shadowOpacity: ShadowOpacity}]}>\n                <Text style={[styles.chartTitle, styles.indicatorLight]}>{cardTitles.delivery}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold, styles.indicatorLight]}>{DeliveryChartAttributes().total.toLocaleString('it')}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr,  styles.indicatorLight]}>+{DeliveryChartAttributes().lastVariation.toLocaleString('it')} (+{DeliveryChartAttributes().lastVariationPercentage}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 03/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nimport Records from \"../dataset\";\nimport SelectedLocation from \"../selectedLocation\";\n\nlet dataToReturn = {\n    percentageOfTotal: 0,\n    total: 0,\n    lastVariation: 0,\n    lastVariationPercentage: 0,\n    cumulativeTrend: [],\n    variationTrend: [],\n    genderRepartition: [],\n    genderRepartitionPercentage: [],\n    dosageRepartition: [],\n    dosageRepartitionPercentage: [],\n    dosageFirstCumulative: 0,\n    dosageSecondCumulative: 0,\n    dosageFirstPercentage: 0,\n    dosageSecondPercentage: 0,\n    dosageFirstVariation: 0,\n    dosageSecondVariation: 0,\n    dosageFirstVariationPercentage: 0,\n    dosageSecondVariationPercentage: 0,\n    categories: {\n        healthcare_personnel: 0,\n        healthcare_percentage: 0,\n        healthcare_variation: 0,\n        healthcare_variation_percentage: 0,\n        associated: 0,\n        associated_percentage: 0,\n        associated_variation: 0,\n        associated_variation_percentage: 0,\n        rsa: 0,\n        rsa_percentage: 0,\n        rsa_variation: 0,\n        rsa_variation_percentage: 0,\n        over80: 0,\n        over80_percentage: 0,\n        over80_variation: 0,\n        over80_variation_percentage: 0,\n        others: 0,\n        others_percentage: 0,\n        others_variation: 0,\n        others_variation_percentage: 0,\n    }\n};\n\nexport function cleanData() {\n    dataToReturn.cumulativeTrend = [];\n    dataToReturn.variationTrend = [];\n    dataToReturn.genderRepartition = [];\n    dataToReturn.genderRepartitionPercentage = [];\n    dataToReturn.dosageRepartition = [];\n    dataToReturn.dosageRepartitionPercentage = []\n}\n\nfunction populateGenderRepartition() {\n    dataToReturn.genderRepartition = [];\n    dataToReturn.genderRepartitionPercentage = [];\n    let dates = Records.getDates();\n    let current = Records.getRecords().administration.regions[SelectedLocation.getLocation()].administration_gender_cumulative;\n    for (let i = 0; i < current.male.length - 1; i++) {\n        dataToReturn.genderRepartition.push(\n            {\n                date: dates[i],\n                male: current.male[i],\n                female: current.male[i]\n            }\n        );\n        dataToReturn.genderRepartitionPercentage.push(\n            {\n                date: dates[i],\n                male: current.male[i] === 0 ? 0 : current.male[i] / (current.male[i] + current.female[i]) * 100,\n                female: current.female[i] === 0 ? 0 : current.female[i] / (current.male[i] + current.female[i]) * 100,\n            }\n        )\n    }\n}\n\nfunction populateDosageRepartition() {\n    dataToReturn.dosageRepartition = [];\n    dataToReturn.dosageRepartitionPercentage = [];\n    let dates = Records.getDates();\n    let current = Records.getRecords().administration.regions[SelectedLocation.getLocation()].administration_dosage;\n    let i = 0\n    for (; i < current.first.length - 1; i++) {\n        dataToReturn.dosageRepartition.push(\n            {\n                date: dates[i],\n                first: current.first[i],\n                second: current.second[i]\n            }\n        );\n        dataToReturn.dosageRepartitionPercentage.push(\n            {\n                date: dates[i],\n                first: current.first[i] === 0 ? 0 : current.first[i] / (current.first[i] + current.second[i]) * 100,\n                second: current.second[i] === 0 ? 0 : current.second[i] / (current.first[i] + current.second[i]) * 100,\n            }\n        )\n    }\n    dataToReturn.dosageFirstCumulative = current.first[i];\n    dataToReturn.dosageSecondCumulative = current.second[i];\n    dataToReturn.dosageFirstPercentage = dataToReturn.dosageFirstCumulative === 0 ? 0 : dataToReturn.dosageFirstCumulative / dataToReturn.total * 100;\n    dataToReturn.dosageSecondPercentage = dataToReturn.dosageSecondCumulative === 0 ? 0 : dataToReturn.dosageSecondCumulative / dataToReturn.total * 100;\n    dataToReturn.dosageFirstVariation = current.first[i] - current.first[i - 1];\n    dataToReturn.dosageSecondVariation = current.second[i] - current.second[i - 1];\n    dataToReturn.dosageFirstVariationPercentage = dataToReturn.dosageFirstVariation === 0 ? 0 : (dataToReturn.dosageFirstVariation / dataToReturn.dosageFirstCumulative * 100);\n    dataToReturn.dosageSecondVariationPercentage = dataToReturn.dosageSecondVariation === 0 ? 0 : (dataToReturn.dosageSecondVariation / dataToReturn.dosageSecondCumulative * 100);\n}\n\nfunction populateCategories() {\n    let dataset = Records.getRecords().administration.regions[SelectedLocation.getLocation()];\n    let last_index = dataset.administration_categories_cumulative.healthcare_personnel.length - 1;\n    // total\n    dataToReturn.categories.healthcare_personnel = dataset.administration_categories_cumulative.healthcare_personnel[last_index];\n    dataToReturn.categories.associated = dataset.administration_categories_cumulative.associated_healthcare_personnel[last_index];\n    dataToReturn.categories.rsa = dataset.administration_categories_cumulative.rsa_patients[last_index];\n    dataToReturn.categories.over80 = dataset.administration_categories_cumulative.over_80[last_index];\n    dataToReturn.categories.others = dataset.administration_categories_cumulative.other[last_index];\n    //percentage\n    dataToReturn.categories.healthcare_percentage = (Math.round(dataToReturn.categories.healthcare_personnel / dataToReturn.total * 10000) / 100).toFixed(2);\n    dataToReturn.categories.associated_percentage = (Math.round(dataToReturn.categories.associated / dataToReturn.total * 10000) / 100).toFixed(2);\n    dataToReturn.categories.rsa_percentage = (Math.round(dataToReturn.categories.rsa / dataToReturn.total * 10000) / 100).toFixed(2);\n    dataToReturn.categories.over80_percentage = (Math.round(dataToReturn.categories.over80 / dataToReturn.total * 10000) / 100).toFixed(2);\n    dataToReturn.categories.others_percentage = (Math.round(dataToReturn.categories.others / dataToReturn.total * 10000) / 100).toFixed(2);\n    // variation\n    dataToReturn.categories.healthcare_variation = dataset.administration_categories_cumulative.healthcare_personnel[last_index] - dataset.administration_categories_cumulative.healthcare_personnel[last_index - 1];\n    dataToReturn.categories.associated_variation = dataset.administration_categories_cumulative.associated_healthcare_personnel[last_index] - dataset.administration_categories_cumulative.associated_healthcare_personnel[last_index - 1];\n    dataToReturn.categories.rsa_variation = dataset.administration_categories_cumulative.rsa_patients[last_index] - dataset.administration_categories_cumulative.rsa_patients[last_index - 1];\n    dataToReturn.categories.over80_variation = dataset.administration_categories_cumulative.over_80[last_index] - dataset.administration_categories_cumulative.over_80[last_index - 1];\n    dataToReturn.categories.others_variation = dataset.administration_categories_cumulative.other[last_index] - dataset.administration_categories_cumulative.other[last_index - 1];\n    // variation percentage\n    dataToReturn.categories.healthcare_variation_percentage = dataToReturn.categories.healthcare_variation === 0 ? 0 : (Math.round(dataToReturn.categories.healthcare_variation / dataToReturn.categories.healthcare_personnel * 10000) / 100).toFixed(2);\n    dataToReturn.categories.associated_variation_percentage = dataToReturn.categories.associated_variation === 0 ? 0 : (Math.round(dataToReturn.categories.associated_variation / dataToReturn.categories.associated * 10000) / 100).toFixed(2);\n    dataToReturn.categories.rsa_variation_percentage = dataToReturn.categories.rsa_variation === 0 ? 0 : (Math.round(dataToReturn.categories.rsa_variation / dataToReturn.categories.rsa * 10000) / 100).toFixed(2);\n    dataToReturn.categories.over80_variation_percentage = dataToReturn.categories.over80_variation === 0 ? 0 : (Math.round(dataToReturn.categories.over80_variation / dataToReturn.categories.over80 * 10000) / 100).toFixed(2);\n    dataToReturn.categories.others_variation_percentage = dataToReturn.categories.others_variation === 0 ? 0 : (Math.round(dataToReturn.categories.others_variation / dataToReturn.categories.others * 10000) / 100).toFixed(2);\n}\n\nconst AdministrationChartAttributes = () => {\n    dataToReturn.total = Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_cumulative[Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_cumulative.length - 1];\n    dataToReturn.lastVariation = Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_variation[Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_variation.length - 1];\n    dataToReturn.lastVariationPercentage = dataToReturn.lastVariation === 0 ? 0 :\n        (Math.round((dataToReturn.lastVariation / dataToReturn.total * 100) * 100) / 100).toFixed(2);\n    let percentage = Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_cumulative[Records.getRecords().administration.regions[SelectedLocation.getLocation()]\n        .administration_cumulative.length - 1] / Records.getRecords().administration.regions[0]\n        .administration_cumulative[Records.getRecords().administration.regions[0].administration_cumulative.length - 1] * 100;\n    dataToReturn.percentageOfTotal = (Math.round(percentage * 100) / 100).toFixed(2);\n    dataToReturn.cumulativeTrend = Records.getRecords().administration.regions[SelectedLocation.getLocation()].administration_cumulative;\n    dataToReturn.variationTrend = Records.getRecords().administration.regions[SelectedLocation.getLocation()].administration_variation;\n    populateGenderRepartition();\n    populateDosageRepartition();\n    populateCategories();\n    return dataToReturn;\n};\n\n\nexport default AdministrationChartAttributes;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 27/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport LegendColors from \"../../ui/theme/legendColors\";\nimport {styles} from \"../../ui/theme/style\";\nimport {Text, View} from \"react-native\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport {ShadowOpacity} from \"../../ui/contents/params\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministration extends Component{\n\n    render() {\n        return (\n            <View style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall, {backgroundColor: LegendColors.pink, shadowColor: LegendColors.pink, shadowOpacity: ShadowOpacity}]}>\n                <Text style={[styles.chartTitle, styles.indicatorLight]}>{cardTitles.administration}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold, styles.indicatorLight]}>{AdministrationChartAttributes().total.toLocaleString('it')}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr, styles.indicatorLight]}>+{AdministrationChartAttributes().lastVariation.toLocaleString('it')} (+{AdministrationChartAttributes().lastVariationPercentage}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 27/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {styles} from \"../../ui/theme/style\";\nimport {Text, View} from \"react-native\";\nimport {chartTitles, dataDescription} from \"../../ui/contents/strings\";\nimport Records from \"../../logic/dataset\";\n\n\nexport default class CardDate extends Component{\n\n\n    render() {\n        return (\n            <View style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{chartTitles.lastUpdateDate}{Records.getLastDate()}</Text>\n                <Text style={[styles.indicatorValue, styles.chartDescription]}>{dataDescription.lastUpdate}</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 19/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, TouchableOpacity, View} from \"react-native\";\nimport MainScrollableContents from \"../mainScrollableContainer\";\nimport CardDelivery from \"../../../data_representation/resume_cards/cardDelivery\";\nimport CardAdministration from \"../../../data_representation/resume_cards/cardAdministration\";\nimport {navigate} from \"../../../utils/rootNavigationRef\";\nimport CardDate from \"../../../data_representation/resume_cards/cardDate\";\nimport {screenTitles} from \"../../contents/strings\";\n\nclass LatestUpdateComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n\n            <MainScrollableContents>\n\n                <>\n                    <TouchableOpacity onPress={() => {\n                        navigate(screenTitles.delivered);\n                    }}>\n                        <CardDelivery/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity onPress={() => {\n                        navigate(screenTitles.administration);\n                    }}>\n                        <CardAdministration/>\n                    </TouchableOpacity>\n\n                    <CardDate/>\n                </>\n\n            </MainScrollableContents>\n        )\n    }\n}\n\nexport default LatestUpdateComponent;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from 'react';\nimport {DrawerActions, useNavigation} from \"@react-navigation/native\";\nimport {View, Platform} from \"react-native\";\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Colors from \"../../theme/colors\";\nimport {Appearance} from \"react-native-appearance\";\n\nlet colorScheme = Appearance.getColorScheme();\n\nconst HeaderLeft = () => {\n    const navigation = useNavigation();\n\n    return (\n        <View style={{flexDirection: 'row'}}>\n            <TouchableOpacity\n                onPress={() => {\n                    navigation.dispatch(DrawerActions.openDrawer());\n                }}\n                style={{marginLeft: Platform.OS === 'ios' ? 25 : 25}}>\n                <Ionicons name=\"ios-menu\" size={32} color={colorScheme === 'dark' ? Colors.darkMode_basic : Colors.basic} />\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default HeaderLeft;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 29/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {Dimensions} from \"react-native\";\nimport React, {Component} from \"react\";\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport {dimens} from \"../theme/dimens\";\nimport HeaderLeft from \"../components/header/headerMenuButton\";\nimport {styles} from \"../theme/style\";\nimport {RegionList} from \"../contents/locationsList\";\nimport SelectedLocation from \"../../logic/selectedLocation\";\nimport {EventRegister} from \"react-native-event-listeners\";\n\nconst Stack = createStackNavigator();\nconst dimensions = Dimensions.get('window').width;\nlet dataChangedListener;\n\n\nexport default class ScreenContainer extends Component  {\n\n    constructor(props) {\n        super(props);\n        this.state = {location: RegionList[SelectedLocation.getLocation()].label}\n    }\n\n    componentWillMount() {\n        dataChangedListener = EventRegister.addEventListener('locationChanged', (data) => {\n            this.setState({location: RegionList[SelectedLocation.getLocation()].label});\n        });\n    }\n\n    componentWillUnmount() {\n        EventRegister.removeEventListener(dataChangedListener)\n    }\n\n    render() {\n        return (\n            <Stack.Navigator mode={\"modal\"}>\n                <Stack.Screen\n                    options={{\n                        headerStyle: [styles.header, styles.headerShadow],\n                        headerTitleStyle: [styles.headerTitle],\n                        headerLeft: dimensions < dimens.largeScreen ? ({}) => <HeaderLeft /> : null,\n                        animationEnabled: false,\n                        title: this.props.title + ' > ' + this.state.location\n                    }}\n                    component={() => this.props.component}\n                    name={this.props.title + ' > ' + this.state.location}\n                />\n            </Stack.Navigator>\n\n        );\n    }\n\n\n}\n\n\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from \"react\";\nimport {screenTitles} from \"../contents/strings\";\nimport LatestUpdateComponent from \"../components/latest_updates/latestUpateComponent\";\nimport ScreenContainer from \"../components/screenContainer\";\n\n\nfunction LatestUpdateResumeScreen({ navigation }) {\n\n    return (\n        <ScreenContainer title={screenTitles.latestUpdateResume} component={<LatestUpdateComponent/>} />\n    );\n}\n\nexport default LatestUpdateResumeScreen;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 28/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nexport function hexToRgb(hex) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\nexport function reduceOpacity(hex, points) {\n    let colorRGB = hexToRgb(hex)\n    return `rgba(${colorRGB.r}, ${colorRGB.g}, ${colorRGB.b}, ${1 - points * 0.1})`\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 31/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nlet intervalSelectorFilter = [\n    {\n        state: '_1W',\n        name: 'settimana',\n        field: 7,\n    },\n    {\n        state: '_1M',\n        name: 'mese',\n        field: 30,\n    },\n    {\n        state: '_MAX',\n        name: 'max',\n        field: -1,\n    }\n];\n\nexport default intervalSelectorFilter;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 01/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport Records from \"./dataset\";\nimport {lineChartNumLabels} from \"../ui/contents/params\";\n\nlet dataToReturn = {\n    dateLabels: [],\n    dateLabelsComplete: [],\n};\n\nconst DateLabels = (range) => {\n\n    let dates = Records.getDates();\n\n\n    if(dates !== null){\n\n        dataToReturn.dateLabels = [];\n        dataToReturn.dateLabelsComplete = [];\n\n        if(dataToReturn){\n            let start = range === -1 || range === undefined ? 0 : dates.length - range;\n            let incr = Math.round(((dates.length - start)) / lineChartNumLabels(range));\n            for (let i = start; i < dates.length; i+=incr){\n                i = Math.round(i)\n                dataToReturn.dateLabels.push(dates[i]);\n            }\n            for(let i = start;  i < dates.length; i++){\n                dataToReturn.dateLabelsComplete.push(dates[i]);\n            }\n        }\n\n    }\n    return dataToReturn;\n};\n\n\nexport default DateLabels;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 08/09/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {Circle, Line, Svg, Text as TextSVG} from \"react-native-svg\";\nimport darkMode from \"../../ui/theme/darkModeDetector\";\nimport Colors from \"../../ui/theme/colors\";\nimport React, {Component, Fragment} from \"react\";\nimport {dynamicDimens} from \"../../ui/theme/dimens\";\n\n\nclass LineChartDecorator extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    getXText = (x) => {\n        if(x > dynamicDimens.chartFullWidth - 150){\n            return x - 50;\n        }\n        else {\n            if(x < 100){\n                return x + 50;\n            }\n            return x;\n        }\n\n    }\n\n    render() {\n        return (\n            <Fragment key={Math.random()}>\n                <Svg>\n                    <Line\n                        x1={this.props.x}\n                        y1=\"0\"\n                        x2={this.props.x}\n                        y2=\"190\"\n                        stroke={(darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent)}\n                        strokeWidth=\"1\"/>\n                    <Circle\n                        cx={this.props.x}\n                        cy={this.props.y}\n                        r=\"10\"\n                        strokeWidth=\"1\"\n                        stroke={(darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation)}\n                        fill={this.props.color}/>\n                    <TextSVG\n                        x={this.getXText(this.props.x)}\n                        y={10}\n                        fill={(darkMode() ? Colors.darkMode_basic : Colors.basic)}\n                        fontSize=\"14\"\n                        fontWeight=\"bold\"\n                        textAnchor=\"middle\">\n                        {this.props.value === null ? 'N/D' : this.props.selectedDate + ' - ' + this.props.value.toLocaleString('it')}\n                    </TextSVG>\n                </Svg>\n            </Fragment>\n        );\n    }\n}\n\nexport default LineChartDecorator;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 23/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {PureComponent} from 'react';\nimport {FlatList, View} from 'react-native';\nimport {Chip} from 'react-native-paper';\nimport {LineChart} from \"react-native-chart-kit\";\nimport {dimens, dynamicDimens} from \"../../ui/theme/dimens\";\nimport Colors from \"../../ui/theme/colors\";\nimport {hexToRgb} from \"../../utils/colorConverter\";\nimport intervalSelectorFilter from \"../../ui/contents/intervalSelectorData\";\nimport DateLabels from \"../../logic/retrieveTimeLabels\";\nimport darkMode from \"../../ui/theme/darkModeDetector\";\nimport {RegionList} from \"../../ui/contents/locationsList\";\nimport SelectedLocation from \"../../logic/selectedLocation\";\nimport LineChartDecorator from \"./lineChartDecorator\";\n\nexport default class MyLineChart extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            _1W: true,\n            _1M: false,\n            _MAX: false,\n            data: {\n                completeDate: DateLabels(7).dateLabelsComplete,\n                labels: DateLabels(7).dateLabels,\n                datasets: [\n                    {\n                        data: this.props.data.slice(Math.max(this.props.data.length - 7, 0))\n                    }\n                ]\n            },\n            filter: 7,\n            x: 0,\n            y: 0,\n            location: RegionList[SelectedLocation.getLocation()].label,\n            visible: false,\n            value: 0,\n            selectedDate: 0\n        };\n    }\n\n\n    activateFilter(filter) {\n        this.setState({_1W: false, _1M: false, _MAX: false, visible: false});\n        this.setState({[filter.state]: true}, function () {\n\n            this.setState({filter: filter.field}, function () {\n                if (this.state.filter === -1) {\n                    this.setState({\n                        data: {\n                            completeDate: DateLabels(this.state.filter).dateLabelsComplete,\n                            labels: DateLabels(this.state.filter).dateLabels,\n                            datasets: [\n                                {\n                                    data: this.props.data.slice(Math.max(1 , 0))\n                                }\n                            ]\n                        },\n                    });\n                } else {\n                    this.setState({\n                            data: {\n                                completeDate: DateLabels(this.state.filter).dateLabelsComplete,\n                                labels: DateLabels(this.state.filter).dateLabels,\n                                datasets: [\n                                    {\n                                        data: this.props.data.slice(Math.max(this.props.data.length - this.state.filter, 0))\n                                    }\n                                ]\n                            },\n                        },\n                    );\n                }\n            });\n        });\n        this.forceUpdate();\n    }\n\n    returnState(stateString) {\n        switch (stateString) {\n            case '_1W':\n                return this.state._1W;\n            case '_1M':\n                return this.state._1M;\n            case '_MAX':\n                return this.state._MAX;\n        }\n    }\n\n    decorator = () => {\n        return this.state.visible ?\n            <LineChartDecorator color={this.props.color} x={this.state.x} y={this.state.y}\n                                selectedDate={this.state.selectedDate}\n                                value={this.state.value}/> : null\n    }\n\n\n    render() {\n        const colorRGB = hexToRgb(this.props.color);\n        return (\n            <View style={{marginTop: 20}}>\n\n                <View style={{marginTop: 8}}>\n                    <FlatList\n                        style={{marginBottom: 20}}\n                        data={intervalSelectorFilter}\n                        renderItem={({item}) => (\n                            <Chip\n                                onPress={() => this.activateFilter(item)}\n                                selected={this.state.filter === item.state.field}\n                                textStyle={{\n                                    color: this.returnState(item.state) ? '#fff' : darkMode() ? Colors.darkMode_basic : Colors.basic,\n                                    fontWeight: this.returnState(item.state) ? '700' : '400'\n                                }}\n                                style={[\n                                    {\n                                        backgroundColor: this.returnState(item.state) ? this.props.color : (darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent),\n                                        marginRight: 5,\n                                    }]}>\n                                {item.name}\n                            </Chip>\n                        )}\n                        numColumns={1}\n                        horizontal={true}\n                        showsHorizontalScrollIndicator={false}\n                        keyExtractor={(item, index) => index.toString()}\n                    />\n                </View>\n\n                <LineChart\n                    data={this.state.data}\n                    width={dynamicDimens.chartFullWidth}\n                    height={dimens.lineChartHeight}\n                    yAxisLabel=\"\"\n                    yAxisSuffix=\"\"\n                    whitScrollableDot={true}\n                    withVerticalLines={false}\n                    yAxisInterval={1}\n                    chartConfig={{\n                        backgroundColor: darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n                        backgroundGradientFrom: darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n                        backgroundGradientTo: darkMode() ? Colors.darkMode_basicElevation : Colors.basicElevation,\n                        decimalPlaces: this.props.decimalPlaces === undefined ? 0 : this.props.decimalPlaces,\n                        color: (opacity = 1) => `rgba(${colorRGB.r}, ${colorRGB.g}, ${colorRGB.b}, ${darkMode() ? opacity * 3 : opacity * 3})`,\n                        labelColor: (opacity = 1) => (darkMode() ? Colors.darkMode_basic : Colors.basic),\n                        propsForDots: {\n                            r: \"1\",\n                            strokeWidth: \"0\",\n                            stroke: this.props.color\n                        },\n                        propsForBackgroundLines: {\n                            stroke: darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent,\n                        }\n                    }}\n                    //bezier\n                    style={{\n                        marginVertical: 8,\n                        borderRadius: 16\n                    }}\n\n                    decorator={this.decorator}\n\n                    onDataPointClick={(data) => {\n\n                        let isSamePoint = (this.state.x === data.x\n                            && this.state.y === data.y);\n\n                        isSamePoint ?\n                            this.setState({x: data.x, value: data.value, selectedDate: this.state.data.completeDate[data.index], y: data.y, visible: !this.state.visible})\n                            :\n                            this.setState({x: data.x, value: data.value, selectedDate: this.state.data.completeDate[data.index], y: data.y, visible: true});\n\n                    }}\n                />\n\n            </View>\n\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 09/09/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../theme/style\";\nimport MyLineChart from \"../../../data_representation/charts/lineChart\";\n\nexport default class LineChartCard extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig]}>\n                <Text style={[styles.chartTitle]}>{this.props.title}</Text>\n                <MyLineChart color={this.props.color} data={this.props.data} />\n                <Text style={styles.chartDescription}>{this.props.description}</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 05/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from 'react-native';\nimport {styles} from \"../../ui/theme/style\";\n\nexport default class ChartColorLegend extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <View style={styles.legendContainer}>\n                <View style={[styles.legendColorSquare, { backgroundColor: this.props.color}]}/>\n                <Text style={styles.legendTitle}>{this.props.title}</Text>\n            </View>\n        );\n    }\n\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\n\nimport React from 'react'\nimport {StackedAreaChart, YAxis, XAxis, Grid} from 'react-native-svg-charts'\nimport * as shape from 'd3-shape'\nimport {FlatList, View} from 'react-native'\nimport {hexToRgb} from \"../../utils/colorConverter\";\nimport intervalSelectorFilter from \"../../ui/contents/intervalSelectorData\";\nimport {Chip} from \"react-native-paper\";\nimport Colors from \"../../ui/theme/colors\";\nimport DateLabels from \"../../logic/retrieveTimeLabels\";\nimport {styles} from \"../../ui/theme/style\";\nimport ChartColorLegend from \"./chartColorLegend\";\nimport darkMode from \"../../ui/theme/darkModeDetector\";\n\nclass MyStackAreaChart extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            _1W: true,\n            _1M: false,\n            _MAX: false,\n            data: this.props.data.slice(Math.max(this.props.data.length - 7, 0)),\n            filter: 7,\n            labels: DateLabels(7).dateLabels,\n            x: 0,\n            y: 0,\n            visible: false,\n            value: 0\n        };\n    }\n\n    activateFilter(filter) {\n        this.setState({_1W: false, _1M: false, _MAX: false, visible: false});\n        this.setState({[filter.state]: true}, function () {\n\n            this.setState({filter: filter.field}, function () {\n                if (this.state.filter === -1) {\n                    this.setState({data: this.props.data}, function () {\n                        this.setState({labels: DateLabels(this.state.filter).dateLabels});\n                    });\n                } else {\n                    this.setState({data: this.props.data.slice(Math.max(this.props.data.length - this.state.filter, 0))}, function () {\n                        this.setState({labels: DateLabels(this.state.filter).dateLabels});\n                    });\n                }\n            });\n        });\n        this.forceUpdate();\n    }\n\n    returnState(stateString) {\n        switch (stateString) {\n            case '_1W':\n                return this.state._1W;\n            case '_1M':\n                return this.state._1M;\n            case '_MAX':\n                return this.state._MAX;\n        }\n    }\n\n    deOpacizeColors(colors, opacity = 0.7) {\n        let color1 = hexToRgb(colors[0]);\n        let color2 = hexToRgb(colors[1]);\n        let color3 = hexToRgb(colors[2]);\n        return [`rgba(${color1.r}, ${color1.g}, ${color1.b}, ${opacity})`, `rgba(${color2.r}, ${color2.g}, ${color2.b}, ${opacity})`, `rgba(${color3.r}, ${color3.g}, ${color3.b}, ${opacity})`]\n    }\n\n    render() {\n\n        const colorRGB = hexToRgb(this.props.color);\n        const colors = this.props.colors === undefined ? [`rgba(${colorRGB.r}, ${colorRGB.g}, ${colorRGB.b}, 0.9)`, `rgba(${colorRGB.r}, ${colorRGB.g}, ${colorRGB.b}, 0.6)`, `rgba(${colorRGB.r}, ${colorRGB.g}, ${colorRGB.b}, 0.3)`] : this.props.colors\n        const keys = this.props.keyValues\n        const axesSvg = {fontSize: 12, fill: (darkMode() ? Colors.darkMode_basic : Colors.basic)};\n        const gridSvg = {\n            fill: darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent,\n            strokeDasharray: [5, 8],\n            strokeOpacity: 0.6\n        }\n\n        return (\n            <View>\n                <View style={{marginTop: 20}}>\n                    <FlatList\n                        style={{marginBottom: 20}}\n                        data={intervalSelectorFilter}\n                        renderItem={({item}) => (\n                            <Chip\n                                onPress={() => this.activateFilter(item)}\n                                selected={this.state.filter === item.state.field}\n                                textStyle={{\n                                    color: this.returnState(item.state) ? '#fff' : darkMode() ? Colors.darkMode_basic : Colors.basic,\n                                    fontWeight: this.returnState(item.state) ? '700' : '400'\n                                }}\n                                style={[\n                                    {\n                                        backgroundColor: this.returnState(item.state) ? this.props.color : (darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent),\n                                        marginRight: 5,\n                                    }]}>\n                                {item.name}\n                            </Chip>\n                        )}\n                        numColumns={1}\n                        horizontal={true}\n                        showsHorizontalScrollIndicator={false}\n                        keyExtractor={(item, index) => index.toString()}\n                    />\n                </View>\n                <View style={{flexDirection: 'row', marginTop: 10, height: 220}}>\n                    <View style={{flex: 1, marginLeft: 50}}>\n                        <StackedAreaChart\n                            style={{flex: 1}}\n                            verticalContentInset={{top: 20, bottom: 20}}\n                            data={this.state.data}\n                            keys={keys}\n                            colors={colors}\n                            curve={shape.curveLinear}\n                            animationDuration={200}\n                            numberOfTicks={5}\n                            svg={gridSvg}\n                        >\n                            <Grid\n                                direction={Grid.Direction.HORIZONTAL}\n                                belowChart={false}\n                                svg={gridSvg}\n                            />\n                        </StackedAreaChart>\n                    </View>\n                    <YAxis\n                        style={{position: 'absolute', top: 0, bottom: 0}}\n                        data={StackedAreaChart.extractDataPoints(this.state.data, keys)}\n                        contentInset={{top: 10, bottom: 10}}\n                        numberOfTicks={5}\n                        svg={{\n                            fontSize: 12,\n                            fill: (darkMode() ? Colors.darkMode_basic : Colors.basic),\n                            alignmentBaseline: 'baseline',\n                            baselineShift: '3',\n                        }}\n                    />\n                </View>\n                <XAxis\n                    style={{marginLeft: 50, marginTop: 10, height: 10}}\n                    data={this.state.data}\n                    numberOfTicks={4}\n                    formatLabel={(index) => this.state.data[index].date}\n                    contentInset={{left: 10, right: 10}}\n                    svg={axesSvg}\n                />\n\n                {/* Legend */}\n                <View style={styles.legendExternalContainer}>\n                    {this.props.legend.map((name, index) =>\n                        <ChartColorLegend\n                            title={name}\n                            color={colors[index]}/>\n                    )}\n                </View>\n\n\n            </View>\n        )\n    }\n}\n\nexport default MyStackAreaChart;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 19/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View, Switch} from \"react-native\";\nimport {styles} from \"../../theme/style\";\nimport MainScrollableContents from \"../mainScrollableContainer\";\nimport {chartTitles, dataDescription, deliveryChartDescriptions, deliveryChartTitles} from \"../../contents/strings\";\nimport CardDelivery from \"../../../data_representation/resume_cards/cardDelivery\";\nimport LegendColors from \"../../theme/legendColors\";\nimport DeliveryChartAttributes from \"../../../logic/delivery/deliveryChartAttributes\";\nimport LineChartCard from \"../cards/lineChartCard\";\nimport {EventRegister} from \"react-native-event-listeners\";\nimport StackedAreaChart from \"../../../data_representation/charts/stackedAreaChart\";\nimport MyProgressCircle from \"../../../data_representation/charts/progressCircle\";\n\nlet dataChangedListener;\n\nclass DeliveryComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: DeliveryChartAttributes(),\n            color: LegendColors.indigo,\n            value: 0,\n            percentageForRepartition: false,\n            totalChartTitle: deliveryChartTitles.repartitionAbsolute,\n            totalChartDescription: deliveryChartDescriptions.repartitionAbsolute,\n        }\n    }\n\n    repartitionSwitchChange(){\n        if(!this.state.percentageForTotal){\n            this.setState({\n                percentageForTotal: true,\n                totalChartTitle: deliveryChartTitles.repartitionPercentage,\n                totalChartDescription: deliveryChartDescriptions.repartitionPercentage\n            })\n        }\n        else {\n            this.setState({\n                percentageForTotal: false,\n                totalChartTitle: deliveryChartTitles.repartitionAbsolute,\n                totalChartDescription: deliveryChartDescriptions.repartitionAbsolute\n            })\n        }\n\n    }\n\n    componentDidMount() {\n        dataChangedListener = EventRegister.addEventListener('locationChanged', (data) => {\n            this.updateData();\n        });\n    }\n\n    componentWillUnmount() {\n        EventRegister.removeEventListener(dataChangedListener)\n    }\n\n    updateData(){\n        this.setState({data: DeliveryChartAttributes()});\n    }\n\n    render() {\n        return (\n            <MainScrollableContents>\n                    <>\n                        <CardDelivery />\n\n                        <View style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                            <Text style={[styles.chartTitle]}>{deliveryChartTitles.percentageOfTotal}</Text>\n                            <MyProgressCircle value={this.state.data.percentageOfTotal} color={this.state.color}/>\n                            <Text style={styles.chartDescription}>{deliveryChartDescriptions.percentageOfTotal}</Text>\n                        </View>\n\n                        <LineChartCard\n                            key={this.state.data}\n                            title={deliveryChartTitles.cumulativeTrend}\n                            color={this.state.color}\n                            data={this.state.data.cumulativeTrend}\n                            description={deliveryChartDescriptions.cumulativeTrend} />\n\n                        <LineChartCard\n                            key={this.state.data}\n                            title={deliveryChartTitles.variationTrend}\n                            color={this.state.color}\n                            data={this.state.data.variationTrend}\n                            description={deliveryChartDescriptions.variationTrend} />\n\n                        <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig]}>\n                            <Text style={styles.chartTitle}>{this.state.totalChartTitle}</Text>\n                            <View style={[{flexDirection: \"row\"}]}>\n                                <Text style={[styles.chartManipulationDescription]}>\n                                    {dataDescription.showPercentage}\n                                </Text>\n                                <Switch\n                                    key={3}\n                                    style={{marginLeft: 6}}\n                                    onValueChange={() => this.repartitionSwitchChange()}\n                                    value={this.state.percentageForTotal}\n                                />\n                            </View>\n                            {\n                                this.state.percentageForTotal ?\n                                    <StackedAreaChart\n                                        key={0}\n                                        color={LegendColors.indigo}\n                                        colors={[LegendColors.green, LegendColors.blue, LegendColors.purple, LegendColors.teal, LegendColors.indigo, LegendColors.pink]}\n                                        keyValues={['pfizer', 'astrazeneca', 'moderna', 'johnson', 'sputnik','others']}\n                                        legend={deliveryChartDescriptions.producer}\n                                        data={this.state.data.producerRepartitionPercentage}/>\n                                    :\n                                    <StackedAreaChart\n                                        key={1}\n                                        color={LegendColors.indigo}\n                                        colors={[LegendColors.green, LegendColors.blue, LegendColors.purple, LegendColors.teal, LegendColors.indigo, LegendColors.pink]}\n                                        keyValues={['pfizer', 'astrazeneca', 'moderna', 'johnson', 'sputnik','others']}\n                                        legend={deliveryChartDescriptions.producer}\n                                        data={this.state.data.producerRepartition}/>\n\n                            }\n                            <Text style={styles.chartDescription}>{this.state.totalChartDescription}</Text>\n                        </View>\n                    </>\n            </MainScrollableContents>\n        )\n    }\n\n}\n\nexport default DeliveryComponent;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 28/07/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\n\nimport React, {Component} from 'react';\nimport {Text, View} from 'react-native';\nimport Colors from \"../../ui/theme/colors\";\nimport {AnimatedCircularProgress} from \"react-native-circular-progress/index\";\nimport LegendColors from \"../../ui/theme/legendColors\";\nimport {dimens} from \"../../ui/theme/dimens\";\nimport darkMode from \"../../ui/theme/darkModeDetector\";\n\n\nexport default  class MyProgressCircle extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <View style={{width: '100%', alignItems: 'center'}}>\n                <AnimatedCircularProgress\n                    size={dimens.pieChartRadius}\n                    width={8}\n                    fill={this.props.value}\n                    padding={10}\n                    tintColor={this.props.color}\n                    onAnimationComplete={() => console.log('onAnimationComplete')}\n                    backgroundColor={(darkMode() ? Colors.darkMode_basicTransparent : Colors.basicTransparent)}>\n                    {\n                        (fill) => (\n                            <Text style={{color: (darkMode() ? Colors.darkMode_basic : Colors.basic)}}>\n                                {this.props.value}%\n                            </Text>\n                        )\n                    }\n                </AnimatedCircularProgress>\n            </View>\n\n        );\n    }\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\n\nimport React from \"react\";\nimport {screenTitles} from \"../contents/strings\";\nimport DeliveryComponent from \"../components/delivery/deliveryComponent\";\nimport ScreenContainer from \"../components/screenContainer\";\n\nfunction DeliveryScreen({ navigation }) {\n\n    return (\n        <ScreenContainer title={screenTitles.delivered} component={<DeliveryComponent/>} />\n    );\n}\n\nexport default DeliveryScreen;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationAssociated extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationAssociated}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().categories.associated.toLocaleString('it')} ({AdministrationChartAttributes().categories.associated_percentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().categories.associated_variation.toLocaleString('it')} (+{AdministrationChartAttributes().categories.associated_variation_percentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationHealtcare extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationHealthcare}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().categories.healthcare_personnel.toLocaleString('it')} ({AdministrationChartAttributes().categories.healthcare_percentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().categories.healthcare_variation.toLocaleString('it')} (+{AdministrationChartAttributes().categories.healthcare_variation_percentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationRsa extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationRsa}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().categories.rsa.toLocaleString('it')} ({AdministrationChartAttributes().categories.rsa_percentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().categories.rsa_variation.toLocaleString('it')} (+{AdministrationChartAttributes().categories.rsa_variation_percentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationOver80 extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationOver80}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().categories.over80.toLocaleString('it')} ({AdministrationChartAttributes().categories.over80_percentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().categories.over80_variation.toLocaleString('it')} (+{AdministrationChartAttributes().categories.over80_variation_percentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationOthers extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationOther}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().categories.others.toLocaleString('it')} ({AdministrationChartAttributes().categories.others_percentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().categories.others_variation.toLocaleString('it')} (+{AdministrationChartAttributes().categories.others.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard_vaccini copyright © 2021\n * Created by mauromarini on 12/02/21\n * Repository: http://github.com/marinimau/covid19_dashboard_vaccini\n * Location: Baratili San Pietro\n */\n\nimport Records from \"../dataset\";\nimport SelectedLocation from \"../selectedLocation\";\n\nlet dataToReturn = {\n    percentageOfTotal: 0,\n};\n\nconst DeliveryAdministrationRatioAttributes = () => {\n    dataToReturn.percentageOfTotal = (Math.round(Records.getRecords().administration\n            .regions[SelectedLocation.getLocation()].administration_cumulative[Records.getRecords().administration\n            .regions[SelectedLocation.getLocation()].administration_cumulative.length - 1] / Records.getRecords()\n            .delivery.regions[SelectedLocation.getLocation()]\n            .delivery_cumulative[Records.getRecords().delivery.regions[SelectedLocation.getLocation()]\n            .delivery_cumulative.length - 1] * 10000)/100).toFixed(2);\n    return dataToReturn;\n};\n\nexport default DeliveryAdministrationRatioAttributes;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationFirst extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationFirstDosage}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().dosageFirstCumulative.toLocaleString('it')} ({AdministrationChartAttributes().dosageFirstPercentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().dosageFirstVariation.toLocaleString('it')} (+{AdministrationChartAttributes().dosageFirstVariationPercentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 19/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Switch, Text, View} from \"react-native\";\nimport {styles} from \"../../theme/style\";\nimport MainScrollableContents from \"../mainScrollableContainer\";\nimport CardAdministration from \"../../../data_representation/resume_cards/cardAdministration\";\nimport {\n    administrationChartDescriptions,\n    administrationChartTitles, dataDescription, deliveryChartDescriptions, deliveryChartTitles,\n} from \"../../contents/strings\";\nimport MyProgressCircle from \"../../../data_representation/charts/progressCircle\";\nimport LegendColors from \"../../theme/legendColors\";\nimport LineChartCard from \"../cards/lineChartCard\";\nimport AdministrationChartAttributes from \"../../../logic/administration/administrationChartAttributes\";\nimport {EventRegister} from \"react-native-event-listeners\";\nimport StackedAreaChart from \"../../../data_representation/charts/stackedAreaChart\";\nimport CardAdministrationAssociated from \"../../../data_representation/resume_cards/cardAdministrationAssociated\";\nimport CardAdministrationHealtcare from \"../../../data_representation/resume_cards/cardAdministrationHealtcare\";\nimport CardAdministrationRsa from \"../../../data_representation/resume_cards/cardAdministrationRsa\";\nimport CardAdministrationOver80 from \"../../../data_representation/resume_cards/cardAdministrationOver80\";\nimport CardAdministrationOthers from \"../../../data_representation/resume_cards/cardAdministrationOthers\";\nimport DeliveryAdministrationRatioAttributes from \"../../../logic/common/deliveryAdministrationRatio\";\nimport CardAdministrationFirst from \"../../../data_representation/resume_cards/cardAdministrationFirst\";\nimport CardAdministrationSecond from \"../../../data_representation/resume_cards/cardAdministrationSecond\";\n\nlet dataChangedListener;\n\nclass AdministrationComponent extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            data: AdministrationChartAttributes(),\n            color: LegendColors.pink,\n            value: 0,\n            percentageForGenderRepartition: false,\n            genderRepartitionTitle: administrationChartTitles.genderRepartitionAbsolute,\n            genderRepartitionDescription: administrationChartDescriptions.genderRepartitionAbsolute,\n            percentageForDosageRepartition: false,\n            dosageRepartitionTitle: administrationChartTitles.dosageRepartitionAbsolute,\n            dosageRepartitionDescription: administrationChartDescriptions.dosageRepartitionAbsolute,\n        }\n    }\n\n    genderRepartitionSwitchChange(){\n        if(!this.state.percentageForGenderRepartition){\n            this.setState({\n                percentageForGenderRepartition: true,\n                genderRepartitionTitle: administrationChartTitles.genderRepartitionPercentage,\n                genderRepartitionDescription: administrationChartDescriptions.genderRepartitionPercentage\n            })\n        }\n        else {\n            this.setState({\n                percentageForGenderRepartition: false,\n                genderRepartitionTitle: administrationChartTitles.genderRepartitionAbsolute,\n                genderRepartitionDescription: administrationChartDescriptions.genderRepartitionAbsolute\n            })\n        }\n\n    }\n\n    dosageRepartitionSwitchChange(){\n        if(!this.state.percentageForDosageRepartition){\n            this.setState({\n                percentageForDosageRepartition: true,\n                dosageRepartitionTitle: administrationChartTitles.dosageRepartitionPercentage,\n                dosageRepartitionDescription: administrationChartDescriptions.dosageRepartitionPercentage,\n            })\n        }\n        else {\n            this.setState({\n                percentageForDosageRepartition: false,\n                dosageRepartitionTitle: administrationChartTitles.dosageRepartitionAbsolute,\n                dosageRepartitionDescription: administrationChartDescriptions.dosageRepartitionAbsolute,\n            })\n        }\n\n    }\n\n    componentDidMount() {\n        dataChangedListener = EventRegister.addEventListener('locationChanged', (data) => {\n            this.updateData();\n        });\n    }\n\n    componentWillUnmount() {\n        EventRegister.removeEventListener(dataChangedListener)\n    }\n\n    updateData(){\n        this.setState({data: AdministrationChartAttributes()});\n    }\n\n    render() {\n        return (\n            <MainScrollableContents>\n                <>\n                    <CardAdministration/>\n\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                        <Text style={[styles.chartTitle]}>{administrationChartTitles.percentageOfTotal}</Text>\n                        <MyProgressCircle value={this.state.data.percentageOfTotal} color={this.state.color}/>\n                        <Text style={styles.chartDescription}>{administrationChartDescriptions.percentageOfTotal}</Text>\n                    </View>\n\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                        <Text style={[styles.chartTitle]}>{deliveryChartTitles.deliveredAdministrationRatio}</Text>\n                        <MyProgressCircle value={DeliveryAdministrationRatioAttributes().percentageOfTotal} color={this.state.color}/>\n                        <Text style={styles.chartDescription}>{deliveryChartDescriptions.deliveredAdministrationRatio}</Text>\n                    </View>\n\n                    <CardAdministrationFirst />\n\n                    <CardAdministrationSecond />\n\n                    <LineChartCard\n                        key={this.state.data}\n                        title={administrationChartTitles.cumulativeTrend}\n                        color={this.state.color}\n                        data={this.state.data.cumulativeTrend}\n                        description={administrationChartDescriptions.cumulativeTrend}/>\n\n                    <LineChartCard\n                        key={this.state.data}\n                        title={administrationChartTitles.variationTrend}\n                        color={this.state.color}\n                        data={this.state.data.variationTrend}\n                        description={administrationChartDescriptions.variationTrend}/>\n\n                    <CardAdministrationHealtcare />\n\n                    <CardAdministrationAssociated />\n\n                    <CardAdministrationRsa />\n\n                    <CardAdministrationOver80 />\n\n                    <CardAdministrationOthers />\n\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig]}>\n                        <Text style={styles.chartTitle}>{this.state.genderRepartitionTitle}</Text>\n                        <View style={[{flexDirection: \"row\"}]}>\n                            <Text style={[styles.chartManipulationDescription]}>\n                                {dataDescription.showPercentage}\n                            </Text>\n                            <Switch\n                                key={3}\n                                style={{marginLeft: 6}}\n                                onValueChange={() => this.genderRepartitionSwitchChange()}\n                                value={this.state.percentageForGenderRepartition}\n                            />\n                        </View>\n                        {\n                            this.state.percentageForGenderRepartition ?\n                                <StackedAreaChart\n                                    key={0}\n                                    color={LegendColors.pink}\n                                    colors={[LegendColors.indigo, LegendColors.pink]}\n                                    keyValues={['male', 'female']}\n                                    legend={administrationChartDescriptions.gender}\n                                    data={this.state.data.genderRepartitionPercentage}/>\n                                :\n                                <StackedAreaChart\n                                    key={1}\n                                    color={LegendColors.pink}\n                                    colors={[LegendColors.indigo, LegendColors.pink]}\n                                    keyValues={['male', 'female']}\n                                    legend={administrationChartDescriptions.gender}\n                                    data={this.state.data.genderRepartition}/>\n\n                        }\n                        <Text style={styles.chartDescription}>{this.state.genderRepartitionDescription}</Text>\n                    </View>\n\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig]}>\n                        <Text style={styles.chartTitle}>{this.state.dosageRepartitionTitle}</Text>\n                        <View style={[{flexDirection: \"row\"}]}>\n                            <Text style={[styles.chartManipulationDescription]}>\n                                {dataDescription.showPercentage}\n                            </Text>\n                            <Switch\n                                key={3}\n                                style={{marginLeft: 6}}\n                                onValueChange={() => this.dosageRepartitionSwitchChange()}\n                                value={this.state.percentageForDosageRepartition}\n                            />\n                        </View>\n                        {\n                            this.state.percentageForDosageRepartition ?\n                                <StackedAreaChart\n                                    key={0}\n                                    color={LegendColors.pink}\n                                    colors={[LegendColors.indigo, LegendColors.pink]}\n                                    keyValues={['first', 'second']}\n                                    legend={administrationChartDescriptions.dosage}\n                                    data={this.state.data.dosageRepartitionPercentage}/>\n                                :\n                                <StackedAreaChart\n                                    key={1}\n                                    color={LegendColors.pink}\n                                    colors={[LegendColors.indigo, LegendColors.pink]}\n                                    keyValues={['first', 'second']}\n                                    legend={administrationChartDescriptions.dosage}\n                                    data={this.state.data.dosageRepartition}/>\n\n                        }\n                        <Text style={styles.chartDescription}>{this.state.dosageRepartitionDescription}</Text>\n                    </View>\n\n                </>\n            </MainScrollableContents>\n        )\n    }\n\n}\n\nexport default AdministrationComponent;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 03/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport {Text, View} from \"react-native\";\nimport {styles} from \"../../ui/theme/style\";\nimport {cardTitles} from \"../../ui/contents/strings\";\nimport AdministrationChartAttributes from \"../../logic/administration/administrationChartAttributes\";\n\nexport default class CardAdministrationSecond extends Component{\n\n    render() {\n        return (\n            <View  style={[styles.cardGeneric, styles.cardShadow, styles.cardSmall]}>\n                <Text style={[styles.chartTitle]}>{cardTitles.administrationSecondDosage}</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueBold]}>{AdministrationChartAttributes().dosageSecondCumulative.toLocaleString('it')} ({AdministrationChartAttributes().dosageSecondPercentage.toLocaleString('it')}%)</Text>\n                <Text style={[styles.indicatorValue, styles.indicatorValueIncr]}>+{AdministrationChartAttributes().dosageSecondVariation.toLocaleString('it')} (+{AdministrationChartAttributes().dosageSecondVariationPercentage.toLocaleString('it')}%)</Text>\n            </View>\n        );\n    }\n}","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from \"react\";\nimport {screenTitles} from \"../contents/strings\";\nimport ScreenContainer from \"../components/screenContainer\";\nimport AdministrationComponent from \"../components/administration/administrationComponent\";\n\n\n\nfunction AdministrationScreen({ navigation }) {\n\n    return (\n        <ScreenContainer title={screenTitles.administration} component={<AdministrationComponent/>} />\n    );\n}\n\nexport default AdministrationScreen;\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 07/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nconst RemoteUrls = {\n    delivery: 'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/consegne-vaccini-latest.json',\n    administration: 'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/somministrazioni-vaccini-latest.json',\n    regions: 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json',\n    dashboard_covid: 'https://marinimau.github.io/covid19_dashboard',\n    donate: 'https://www.paypal.com/paypalme/marinimau',\n    repository: 'https://github.com/marinimau/covid19_dashboard_vaccini',\n    data: 'https://github.com/italia/covid19-opendata-vaccini/',\n    contact: 'https://github.com/marinimau/covid19_dashboard_vaccini/issues'\n}\n\nexport default RemoteUrls;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 12/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport {infoMenuDescriptions, infoMenuTitles} from \"./strings\";\nimport RemoteUrls from \"./urls\";\n\nexport const menuLinks = [\n    {\n        icon: 'chart-timeline-variant',\n        title: infoMenuTitles.dashboard_covid,\n        description: infoMenuDescriptions.dashboard_covid,\n        url: RemoteUrls.dashboard_covid\n    },\n    {\n        icon: 'gift-outline',\n        title: infoMenuTitles.donate,\n        description: infoMenuDescriptions.donate,\n        url: RemoteUrls.donate\n    },\n    {\n        icon: 'email-outline',\n        title: infoMenuTitles.contact,\n        description: infoMenuDescriptions.contact,\n        url: RemoteUrls.contact\n    },\n    {\n        icon: 'xml',\n        title: infoMenuTitles.repository,\n        description: infoMenuDescriptions.repository,\n        url: RemoteUrls.repository\n    },\n    {\n        icon: 'trending-down',\n        title: infoMenuTitles.data,\n        description: infoMenuDescriptions.data,\n        url: RemoteUrls.data\n    },\n]","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 12/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {Component} from 'react';\nimport MainScrollableContents from \"../mainScrollableContainer\";\nimport {styles} from \"../../theme/style\";\nimport {Text, View} from \"react-native\";\nimport {appInfo, infoMenuTitles} from \"../../contents/strings\";\nimport {List, Divider} from 'react-native-paper';\nimport Colors from \"../../theme/colors\";\nimport {menuLinks} from \"../../contents/infoMenu\";\nimport {openLink} from \"../../../utils/linking\";\nimport darkMode from \"../../theme/darkModeDetector\";\n\nclass InfoComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <MainScrollableContents>\n                <>\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig, {\n                        paddingTop: 0,\n                        paddingLeft: 0,\n                        paddingRight: 0\n                    }]}>\n                        <Text style={[styles.infoDescription]}>\n                            {appInfo.description}\n                        </Text>\n                    </View>\n\n                    <View style={[styles.cardGeneric, styles.cardShadow, styles.cardBig, {\n                        paddingTop: 0,\n                        paddingLeft: 0,\n                        paddingRight: 0\n                    }]}>\n                        <List.Section>\n                            <List.Subheader style={{color: (darkMode() ? Colors.darkMode_basic : Colors.basic)}}>{infoMenuTitles.sectionLinks}</List.Subheader>\n                            {\n                                menuLinks.map((item, i) => (\n                                    <>\n                                        <List.Item\n                                            titleStyle={{color: (darkMode() ? Colors.darkMode_basic : Colors.basic)}}\n                                            title={item.title}\n                                            descriptionStyle={{color: (darkMode() ? Colors.darkMode_basic : Colors.basic)}}\n                                            description={item.description}\n                                            onPress={() => openLink(item.url)}\n                                            left={() => <List.Icon color={(darkMode() ? Colors.darkMode_icons : Colors.icons)} icon={item.icon}/>}\n                                            right={() => <List.Icon color={(darkMode() ? Colors.darkMode_icons : Colors.icons)} icon=\"chevron-right\"/>}\n                                        />\n                                        <Divider inset={true}/>\n                                    </>\n                                ))\n                            }\n\n                        </List.Section>\n                        <Text style={[styles.chartDescription, {color: (darkMode() ? Colors.darkMode_icons : Colors.icons)}]}>\n                            {appInfo.name + ' - ' + appInfo.version}\n                        </Text>\n                        <Text style={[styles.chartDescription, {marginTop: 5, color: (darkMode() ? Colors.darkMode_icons : Colors.icons)}]}>\n                            {'copyright © 2020 ' + appInfo.author }\n                        </Text>\n                    </View>\n                </>\n            </MainScrollableContents>\n        )\n    }\n\n}\n\nexport default InfoComponent;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 12/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from 'react';\nimport {Linking} from 'react-native';\n\n\nexport function openLink(url){\n    Linking.openURL(url).then(r => function () {});\n    return false\n}\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 12/08/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from \"react\";\nimport {screenTitles} from \"../contents/strings\";\nimport ScreenContainer from \"../components/screenContainer\";\nimport InfoComponent from \"../components/info/infoComponent\";\n\nfunction InfoScreen({navigation}) {\n\n    return (\n        <ScreenContainer title={screenTitles.info} component={<InfoComponent/>} />\n    );\n}\n\nexport default InfoScreen;","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 02/09/20\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React, {PureComponent} from 'react';\nimport {StatusBar} from \"expo-status-bar\";\nimport {NavigationContainer} from \"@react-navigation/native\";\nimport {navigationRef} from \"../../utils/rootNavigationRef\";\nimport {styles} from \"../theme/style\";\nimport Colors from \"../theme/colors\";\nimport {dimens} from \"../theme/dimens\";\nimport {screenTitles} from \"../contents/strings\";\nimport LatestUpdateResumeScreen from \"../screens/latestUpdateResumeScreen\";\nimport DeliveryScreen from \"../screens/deliveryScreen\";\nimport AdministrationScreen from \"../screens/administrationScreen\";\nimport InfoScreen from \"../screens/infoScreen\";\nimport {createDrawerNavigator} from \"@react-navigation/drawer\";\nimport {Dimensions} from \"react-native\";\nimport {Appearance, AppearanceProvider} from 'react-native-appearance';\nimport { Updates } from 'expo';\n\n\nconst Drawer = createDrawerNavigator();\n\nconst dimensions = Dimensions.get('window').width;\n\nconst isLargeScreen = dimensions >= dimens.largeScreen;\n\nlet colorScheme = Appearance.getColorScheme();\n\nlet subscription, screenChange;\n\nexport default class GlobalContainer extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        subscription = Appearance.addChangeListener(({ colorScheme }) => {\n            Updates.reload();\n        });\n        screenChange = Dimensions.addEventListener(\"change\", ({window, screen})=>{\n            Updates.reload();\n        });\n    }\n\n    componentWillUnmount() {\n        subscription.remove();\n        screenChange.remove();\n    }\n\n    render() {\n        return (\n            <AppearanceProvider>\n                <StatusBar/>\n                <NavigationContainer\n                    ref={navigationRef}\n                    style={styles.root}>\n                    <Drawer.Navigator\n                        initialRouteName=\"Resume\"\n                        drawerContentOptions={{\n                            activeTintColor: colorScheme === 'dark' ? Colors.darkMode_drawerSelectedText : Colors.drawerSelectedText,\n                            inactiveTintColor: colorScheme === 'dark' ? Colors.darkMode_navigationInactive : Colors.navigationInactive,\n                            activeBackgroundColor: colorScheme === 'dark' ? Colors.darkMode_drawerSelectedBackground : Colors.drawerSelectedBackground,\n                            drawerBackgroundColor: colorScheme === 'dark' ? Colors.darkMode_basicElevation : Colors.basicElevation,\n                        }}\n                        drawerType={isLargeScreen ? 'permanent' : 'front'}\n                        drawerStyle={[{width: dimens.drawerWidth, borderRightColor: colorScheme === 'dark' ? Colors.darkMode_basicTransparent : Colors.basicTransparent,\n                            backgroundColor: colorScheme === 'dark' ? Colors.darkMode_basicElevation : Colors.basicElevation}]}\n                        overlayColor={isLargeScreen ? \"transparent\" : Colors.navigationOverlay}>\n\n                        <Drawer.Screen name={screenTitles.latestUpdateResume}\n                                       component={LatestUpdateResumeScreen}/>\n                        <Drawer.Screen name={screenTitles.delivered} component={DeliveryScreen}/>\n                        <Drawer.Screen name={screenTitles.administration} component={AdministrationScreen}/>\n                        <Drawer.Screen name={screenTitles.info} component={InfoScreen}/>\n\n                    </Drawer.Navigator>\n                </NavigationContainer>\n            </AppearanceProvider>\n        );\n    }\n}","/*\n * Project: retrieve_data_italy\n * Author: mauromarini\n * Date: 30/01/21\n * Package: \n * Created on: WebStorm\n * Copyright © 2021 retrieve_data_italy\n * \n * Released under MIT License\n * Copyright (c) 2020 -2021 @marinimau\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \n * documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the \n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to \n * permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *  - The above copyright notice and this permission notice shall be included in all copies or substantial portions of \n *    the Software.\n *  - THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO \n *    THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \n *    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \n *    CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \n *    IN THE SOFTWARE.\n *\n */\n\nimport RemoteUrls from \"../ui/contents/urls\";\n\nconst retrieveData = (url) =>\n    fetch(url)\n        .then(res => (res.ok ? res : Promise.reject(res)))\n        .then(res => res.json())\n        .then(res => res[\"data\"]);\n\nexport const retrieveDeliveryData = () => retrieveData(RemoteUrls.delivery);\n\nexport const retrieveAdministrationData = () => retrieveData(RemoteUrls.administration);\n","/**\n * covid19_dashboard copyright © 2020\n * Created by mauromarini on 18/07/2020\n * Repository: http://github.com/marinimau/covid19_dashboard\n * Location: Baratili San Pietro\n */\n\nimport React from 'react';\nimport Async from 'react-async';\nimport Records from \"./src/logic/dataset\";\nimport {enableScreens} from 'react-native-screens';\nimport ErrorScreen from \"./src/ui/components/loading/error\";\nimport LoadingComponent from \"./src/ui/components/loading/loading\";\nimport GlobalContainer from \"./src/ui/components/GlobalContainer\";\nimport {retrieveAdministrationData, retrieveDeliveryData} from \"./src/logic/retrieve\";\n\n\nenableScreens();\n\nexport default function App() {\n\n    return (\n        <Async promiseFn={retrieveAdministrationData}>\n            {({data, err, isLoading}) => {\n                if (isLoading) return <LoadingComponent/>\n                if (err) return <ErrorScreen/>\n                if (data) Records.setAdministrationRecords(data)\n\n                return (\n                    <Async promiseFn={retrieveDeliveryData}>\n                        {({data, err, isLoading}) => {\n                            if (isLoading) return <LoadingComponent/>\n                            if (err) return <ErrorScreen/>\n                            if (data) Records.setDeliveryRecords(data)\n\n                            return (\n                                <GlobalContainer />\n                            )\n                        }}\n                    </Async>\n                )\n            }}\n        </Async>\n    );\n}\n\n\n\n\n\n\n\n\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/covid19_dashboard_vaccini/expo-service-worker.js', { scope: '/covid19_dashboard_vaccini/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}